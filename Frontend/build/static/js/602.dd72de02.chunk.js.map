{"version":3,"file":"static/js/602.dd72de02.chunk.js","mappings":"uSASe,SAASA,EAAOC,GAAqC,IAAlCC,EAAOD,EAAPC,QAASC,EAASF,EAATE,UAAWC,EAASH,EAATG,UAE5CC,GAASC,EAAAA,EAAAA,MAATD,KAEFE,GAAeC,EAAAA,EAAAA,UACrBD,EAAaE,QAAUL,EAiDvB,OACEM,EAAAA,EAAAA,KAACC,EAAS,CAAAC,UACRC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OACEK,IAAI,sBACJC,IAAI,eACJC,MAAM,WAGVJ,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIK,QA5CG,WACbb,EAAK,QACLF,EAAU,GACZ,EAyC4BS,SAAA,EAClBF,EAAAA,EAAAA,KAACS,EAAAA,IAAY,KACbT,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAERC,EAAAA,EAAAA,MAAA,MAAIK,QA3CW,WACrBb,EAAK,WACP,EAyCoCO,SAAA,EAC1BF,EAAAA,EAAAA,KAACU,EAAAA,IAAoB,KACrBV,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sBAERC,EAAAA,EAAAA,MAAA,MAAIK,QAvBO,WACjBb,EAAK,YACP,EAqBgCO,SAAA,EACtBF,EAAAA,EAAAA,KAACW,EAAAA,IAAe,KAChBX,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAERC,EAAAA,EAAAA,MAAA,MAAIK,QA/BQ,WAClBb,EAAK,aACP,EA6BiCO,SAAA,EACvBF,EAAAA,EAAAA,KAACY,EAAAA,IAAW,KACZZ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAERC,EAAAA,EAAAA,MAAA,MAAIK,QAvCQ,WAClBb,EAAK,cACP,EAqCiCO,SAAA,EACvBF,EAAAA,EAAAA,KAACa,EAAAA,IAAmB,KACpBb,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAERC,EAAAA,EAAAA,MAAA,MAAIK,QA9EK,WACfM,IAAAA,IAAU,cACPC,MAAK,SAAAC,GAEJ,IAAMC,EAAOD,EAASC,KAAKC,UACrBC,EAAqB,GAC3BF,EAAKG,KAAI,SAAAC,GAAI,OAAKF,EAAmBxB,KAAK0B,EAAKC,WAAW,IAC1DzB,EAAaE,QAAQoB,EACvB,IACCI,OAAM,SAAAC,GACLC,QAAQD,MAAM,uCAAwCA,EACxD,GACJ,EAkE8BtB,SAAA,EACpBF,EAAAA,EAAAA,KAAC0B,EAAAA,IAAY,KACb1B,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAEPV,GACCW,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAzB,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIK,QA7DQ,WACtBb,EAAK,iBACP,EA2DyCO,SAAA,EAC3BF,EAAAA,EAAAA,KAAC4B,EAAAA,IAAc,KACf5B,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAERC,EAAAA,EAAAA,MAAA,MAAIK,QA7DK,WACnBb,EAAK,cACP,EA2DsCO,SAAA,EACxBF,EAAAA,EAAAA,KAAC6B,EAAAA,IAAqB,KACtB7B,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAERC,EAAAA,EAAAA,MAAA,MAAIK,QA7DO,WACrBb,EAAK,gBACP,EA2DwCO,SAAA,EAC1BF,EAAAA,EAAAA,KAAC8B,EAAAA,IAAO,KACR9B,EAAAA,EAAAA,KAAA,QAAAE,SAAM,yBAIVF,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,WAOZ,CAEA,I,EAAM1B,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0kB,uCClHb,SAASC,EAAM5C,GAA6C,IAYnD6C,EAZSC,EAAa9C,EAAb8C,cAAe5C,EAASF,EAATE,UAAW6C,EAAK/C,EAAL+C,MAAOC,EAAIhD,EAAJgD,KAExD5C,GAASC,EAAAA,EAAAA,MAATD,KAeR,OACEQ,EAAAA,EAAAA,MAACF,EAAS,CAACoC,cAAeA,EAAcnC,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAACwC,EAAAA,IAAQ,KACTxC,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,OAAOC,YAAY,8BAA8BC,SAAU,SAACC,GAAC,OAjB1D,SAACA,GACpBnD,EAAUmD,EACZ,CAeoFC,CAAaD,EAAEE,OAAOC,MAAM,QAE5G5C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACxC,QAAS,WAfrBb,EAAK,QAekC,EAACO,SAAA,EAClCF,EAAAA,EAAAA,KAACiD,EAAAA,IAAS,KACVjD,EAAAA,EAAAA,KAAA,QAAAE,UAdckC,EAcMG,EAbVH,EAAOc,MAAM,KACZ,UAcb/C,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACxC,QAAS,kBAAM8B,GAAO,EAACpC,SAAA,EAC7BF,EAAAA,EAAAA,KAACmD,EAAAA,IAAM,KACPnD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAMhB,CAEA,I,EAAMD,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+lCAUN,SAAAkB,GAAgB,OAAAA,EAAbf,cACL,kBAAoB,MAAM,ICvD/B,SAASgB,EAAY9D,GAA0D,IAAvD+D,EAAkB/D,EAAlB+D,mBAAoBC,EAAchE,EAAdgE,eAAgBC,EAAcjE,EAAdiE,eACzE,OACExD,EAAAA,EAAAA,KAACC,EAAS,CAAAC,UACRC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,UAC3BF,EAAAA,EAAAA,KAAA,OAAKK,IAAKiD,EAAoBhD,IAAI,sBAEpCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAII,UAAU,oBAAmBF,SAAEqD,KACnCvD,EAAAA,EAAAA,KAAA,MAAII,UAAU,uBAAsBF,SAAEsD,WAKhD,CAEA,I,EAAMvD,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+9B,UCVb,SAASuB,EAAclE,GAAwF,IAAtFmE,EAAWnE,EAAXmE,YAAaC,EAAWpE,EAAXoE,YAAaC,EAAarE,EAAbqE,cAAeC,EAAYtE,EAAZsE,aAAcC,EAAOvE,EAAPuE,QAASC,EAAMxE,EAANwE,OAAQC,EAAIzE,EAAJyE,KAAMC,EAAI1E,EAAJ0E,KAEpH,OACE9D,EAAAA,EAAAA,MAACF,EAAS,CAAAC,SAAA,EACRF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAASF,SACrB6D,GACC/D,EAAAA,EAAAA,KAACkE,EAAAA,IAAgB,CAAC1D,QAASqD,KAE3B7D,EAAAA,EAAAA,KAACmE,EAAAA,IAAa,CAAC3D,QAASqD,OAG5B7D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACvBF,EAAAA,EAAAA,KAACoE,EAAAA,IAAe,CAAC5D,QAASyD,OAE5BjE,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SACnBwD,GACC1D,EAAAA,EAAAA,KAACqE,EAAAA,IAAqB,CAAC7D,QAASmD,KAEhC3D,EAAAA,EAAAA,KAACsE,EAAAA,IAAoB,CAAC9D,QAASmD,OAGnC3D,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAACuE,EAAAA,IAAe,CAAC/D,QAASwD,OAE5BhE,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SACpB4D,GACC9D,EAAAA,EAAAA,KAACwE,EAAAA,IAAQ,CAAChE,QAASoD,KAEnB5D,EAAAA,EAAAA,KAACyE,EAAAA,IAAW,CAACjE,QAASoD,QAKhC,CAEA,I,EAAM3D,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kYCxCb,SAASwC,EAAOC,GAE7B,OACE3E,EAAAA,EAAAA,KAACC,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,QAAQmC,UAAW,SAACC,GAAK,OAAKF,EAAOG,eAAeD,EAAM/B,OAAOC,MAAM,EAAEgC,IAAK,EAAGC,IAAK,IAAKC,aAAc,OAG3H,CAEA,I,EAAMhF,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qMCVb,SAASgD,EAAeC,GACrC,IAAAC,GAAsCC,EAAAA,EAAAA,UAASF,EAAMG,aAAYC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1DK,EAAWF,EAAA,GAAEG,EAAcH,EAAA,IAElCI,EAAAA,EAAAA,YAAU,WAERD,EAAeP,EAAMG,YACvB,GAAG,CAACH,EAAMG,cAEV,IAAMM,EAAqB,SAACf,GAC1B,IAAMgB,EAAUC,WAAWjB,EAAM/B,OAAOC,OACxC2C,EAAeG,GACfV,EAAMY,cAAcF,EACtB,EAEA,OACE7F,EAAAA,EAAAA,KAACC,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAAA,SACEyC,KAAK,QACLmC,UAAWgB,EACXb,IAAK,EACLC,IAAKG,EAAMa,SACXjD,MAAO0C,EACP9C,SAAUiD,KAIlB,CAEA,I,MAAM3F,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yuECvBb,SAAS+D,EAAM1G,GAAsI,IAAnImE,EAAWnE,EAAXmE,YAAawC,EAAc3G,EAAd2G,eAAgBtC,EAAarE,EAAbqE,cAAeC,EAAYtE,EAAZsE,aAAcC,EAAOvE,EAAPuE,QAASC,EAAMxE,EAANwE,OAAQoC,EAAY5G,EAAZ4G,aAAcnC,EAAIzE,EAAJyE,KAAMC,EAAI1E,EAAJ0E,KAAMmC,EAAU7G,EAAV6G,WAAYC,EAAa9G,EAAb8G,cAChJjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAIiB,OAAQf,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAtCmB,EAAIhB,EAAA,GACXiB,GADoBjB,EAAA,IACIF,EAAAA,EAAAA,UAAS,IAAEoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAgCvB,EAAAA,EAAAA,UAAS,GAAEwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAApCZ,EAAQa,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,GAAoC1B,EAAAA,EAAAA,WAAU,GAAE2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAkD9B,EAAAA,EAAAA,WAAU,GAAE+B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAvDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAA8BlC,EAAAA,EAAAA,UAAS,CACrC9B,eAAgB,UAChBiE,oBAAqB,GACrBC,iBAAkB,EAClBnE,mBAAoB,oBACpBoE,YAAa,EACbC,UAAW,EACXC,YAAa,EACbpE,eAAgB,UAChBqE,UAAW,EACXC,aAAc,KACdC,GAAAvC,EAAAA,EAAAA,GAAA+B,EAAA,GAXKS,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAapBG,GAAUpI,EAAAA,EAAAA,UAChBoI,EAAQnI,QAAUiE,EAElB,IAAMmE,GAAiBrI,EAAAA,EAAAA,QAAO4D,GAC9ByE,EAAepI,QAAU2D,GAczBiC,EAAAA,EAAAA,YAAU,WACI,MAARY,GAA6B,KAAbA,EAAKlG,KAAckG,IACjC7C,EACF6C,EAAK6B,OAEL7B,EAAK8B,QAGX,GAAG,CAAC3E,EAAa6C,KAEjBZ,EAAAA,EAAAA,YAAU,WACI,MAARY,GAA6B,KAAbA,EAAKlG,MAA8B,IAAhB4G,IACjCV,IACFA,EAAKjB,YAAc2B,EACnBN,EAAQM,IAEVC,GAAe,GAEnB,GAAG,CAACD,EAAYV,IAEhB,IAAM+B,EAA2B,WAC/B/B,EAAKgC,oBAAoB,iBAAkBC,GAC3CjC,EAAKgC,oBAAoB,QAASE,GAClClC,EAAKgC,oBAAoB,aAAcG,EACzC,EAEMF,EAAuB,WAC3B,GAAIL,EAAepI,QACjB,IAEEwG,EAAK6B,MACP,CAAE,MAAO5G,GACP,CAGN,EAEMiH,EAAmB,WACvBlC,EAAKjB,YAAc,EACnBiB,EAAK8B,QACLH,EAAQnI,SACV,EAEM2I,EAAmB,WACvB/B,EAAQJ,EAAKjB,aACbwB,EAAYP,EAAKP,SACnB,GAEAL,EAAAA,EAAAA,YAAU,WA6CR,OA5CI0B,IAAsBlB,IAAkC,IAAlBA,EACxCrF,IAAAA,IAAU,YAAcqF,GACrBpF,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,KACP,QAAa0H,IAAT1H,GAA+B,OAATA,EAAe,CACvCgH,EAAWhH,EAAK+G,SAChB,IAAMY,EAAW3H,EAAK+G,QAAQR,oBACb,KAAboB,IACErC,EAAKsC,YAAc,IACrBtC,EAAK8B,QACL9B,EAAKjB,YAAc,GAErBgD,IACA/B,EAAKlG,IAAMuI,EACXrC,EAAKuC,iBAAiB,iBAAkBN,GACxCjC,EAAKuC,iBAAiB,QAASL,GAC/BlC,EAAKuC,iBAAiB,aAAcJ,GACpC5H,IAAAA,KACQ,cAAe,CACnBiI,WAAYC,aAAaC,QAAQ,sBACjC3H,WAAYL,EAAK+G,QAAQN,aAE1B3G,MAAK,WACJsF,GAAeD,EACjB,KAEJkB,EAAqBnB,EACvB,CACF,KACyB,IAAlBA,IACTI,EAAK8B,QACLf,EAAqBnB,GACrB8B,EAAW,CACT1E,eAAgB,UAChBiE,oBAAqB,GACrBC,iBAAkB,EAClBnE,mBAAoB,oBACpBoE,YAAa,EACbC,UAAW,EACXC,YAAa,EACbpE,eAAgB,UAChBqE,UAAW,EACXC,aAAc,MAGX,WACLQ,GACF,CACF,GAAG,CAACnC,IAQJ,OACEhG,EAAAA,EAAAA,MAAC+I,EAAY,CAAAhJ,SAAA,EACXF,EAAAA,EAAAA,KAACmJ,EAAU,CAAAjJ,UACTF,EAAAA,EAAAA,KAACkF,EAAc,CAACa,cAjHA,SAACnD,GACT,MAAR2D,GAA6B,KAAbA,EAAKlG,KACvB6G,EAActE,EAElB,EA6GoD0C,YAAaoB,EAAMV,SAAUA,OAE7E7F,EAAAA,EAAAA,MAACF,EAAS,CAAAC,SAAA,EACRF,EAAAA,EAAAA,KAACqD,EAAY,CAACE,eAAgByE,EAAQzE,eAAgBD,mBAAoB0E,EAAQ1E,mBAAoBE,eAAgBwE,EAAQxE,kBAC9HxD,EAAAA,EAAAA,KAACyD,EAAc,CAACC,YAAaA,EAAaC,YAb5B,YACS,IAAvB0D,GAAoC,MAARd,GAA6B,KAAbA,EAAKlG,KACnD6F,GAAgBxC,EAEpB,EAS0EE,cAAeA,EAAeC,aAAcA,EAAcC,QAASA,EAASC,OAAQA,EAAQC,KAAMA,EAAMC,KAAMA,KAClLjE,EAAAA,EAAAA,KAAC0E,EAAM,CAACI,eA5HS,SAAClC,GACV,MAAR2D,GAA6B,KAAbA,EAAKlG,KAAckG,IACrCA,EAAK6C,OAASxG,EAAI,IAEtB,SA4HF,CAEA,I,EAAMsG,EAAenH,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAKzBjC,EAAY8B,EAAAA,GAAOC,IAAGqH,IAAAA,GAAAnH,EAAAA,EAAAA,GAAA,4NAWtBiH,EAAapH,EAAAA,GAAOC,IAAGsH,IAAAA,GAAApH,EAAAA,EAAAA,GAAA,oLC5Kd,SAASqH,EAAIhK,GAAgC,IAA7BiK,EAAgBjK,EAAhBiK,iBAAkBC,EAAMlK,EAANkK,OAEvC9J,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAAkCC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvClE,EAASqE,EAAA,GAAEmE,EAAYnE,EAAA,GAC9BiB,GAAgCnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAArCmD,EAAQlD,EAAA,GAAEmD,EAAWnD,EAAA,GAC5BG,GAA8BvB,EAAAA,EAAAA,UAAS,IAAGwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAnCiD,EAAOhD,EAAA,GAAEiD,EAAUjD,EAAA,GAEtBkD,EAAwB,SAACC,GAC3B,IAAIC,EAAUC,KAAKC,MAAMH,EAAK,KAC1BI,GAAYJ,EAAK,IAAS,KAAMK,QAAQ,GAC5C,OAAOJ,EAAU,KAAOG,EAAU,GAAK,IAAM,IAAMA,CACrD,EAEME,EAAU,SAACC,GAIf,IAHA,IAAkCC,EAA9BC,EAAeF,EAAMG,OAGlBD,EAAe,GAAG,CAGvBD,EAAcN,KAAKC,MAAMD,KAAKnG,SAAW0G,GACzCA,IAEA,IAAArH,EAC4C,CAC1CmH,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GAAarH,EAAA,GAAEmH,EAAMC,GAAYpH,EAAA,EAE1C,CACA,OAAOmH,CACT,GAEA5E,EAAAA,EAAAA,YAAU,WAEK,KAAT8D,GACF3I,IAAAA,IAAU,cACTC,MAAK,SAAAC,GAEJ,IACMG,EADOH,EAASC,KAAKC,UACKE,KAAI,SAAAC,GAAI,MAAK,CAC3CsJ,GAAItJ,EAAKC,WACTc,OAAQf,EAAKuJ,eACbC,WAAaxJ,EAAKyJ,WACnB,IACDpB,EAAaY,EAAQnJ,GACvB,IACCI,OAAM,SAAAC,GACLC,QAAQD,MAAM,uCAAwCA,EACxD,IACAV,IAAAA,IAAU,aACTC,MAAK,SAAAC,GAEJ,IACM+J,EADO/J,EAASC,KAAK0I,SACIvI,KAAI,SAAAC,GAAI,MAAK,CAC1CsJ,GAAItJ,EAAKsJ,GACTvI,OAAQf,EAAKe,OACbyI,WAAaxJ,EAAKyJ,WACnB,IACDlB,EAAYU,EAAQS,GACtB,IACCxJ,OAAM,SAAAC,GACLC,QAAQD,MAAM,uCAAwCA,EACxD,IACAV,IAAAA,IAAU,YACTC,MAAK,SAAAC,GAEJ,IACMgK,EADOhK,EAASC,KAAK4I,QACGzI,KAAI,SAAAC,GAAI,MAAK,CACzCsJ,GAAItJ,EAAKsG,SACTvF,OAAQf,EAAK4J,aACbJ,WAAaxJ,EAAKyJ,WACnB,IACDhB,EAAWQ,EAAQU,GACrB,IACCzJ,OAAM,SAAAC,GACLC,QAAQD,MAAM,uCAAwCA,EACxD,MAEAV,IAAAA,IAAU,cACTC,MAAK,SAAAC,GAIJ,IAFA,IAAMC,EAAOD,EAASC,KAAKC,UACrBC,EAAqB,GAClB+J,EAAI,EAAGA,EAAIjK,EAAKyJ,OAAQQ,IAC3BjK,EAAKiK,GAAGN,eAAeO,cAAcC,SAAS3B,EAAO0B,gBACvDhK,EAAmBxB,KAAK,CACtBgL,GAAI1J,EAAKiK,GAAG5J,WACZc,OAAQnB,EAAKiK,GAAGN,eAChBC,WAAa5J,EAAKiK,GAAGJ,WACrBO,SAAUtB,EAAsB9I,EAAKiK,GAAGG,UACxCC,QAASrK,EAAKiK,GAAG9I,OACjBmJ,MAAOtK,EAAKiK,GAAGD,eAIrBvB,EAAavI,EACf,IACCI,OAAM,SAAAC,GACLC,QAAQD,MAAM,uCAAwCA,EACxD,IACAV,IAAAA,IAAU,aACTC,MAAK,SAAAC,GAIJ,IAFA,IAAMC,EAAOD,EAASC,KAAK0I,SACrBoB,EAAoB,GACjBG,EAAI,EAAGA,EAAIjK,EAAKyJ,OAAQQ,IAC3BjK,EAAKiK,GAAG9I,OAAO+I,cAAcC,SAAS3B,EAAO0B,gBAC/CJ,EAAkBpL,KAAK,CACrBgL,GAAI1J,EAAKiK,GAAGP,GACZvI,OAAQnB,EAAKiK,GAAG9I,OAChByI,WAAa5J,EAAKiK,GAAGJ,aAI3BlB,EAAYmB,EACd,IACCxJ,OAAM,SAAAC,GACLC,QAAQD,MAAM,uCAAwCA,EACxD,IACAV,IAAAA,IAAU,YACTC,MAAK,SAAAC,GAIJ,IAFA,IAAMC,EAAOD,EAASC,KAAK4I,QACrBmB,EAAmB,GAChBE,EAAI,EAAGA,EAAIjK,EAAKyJ,OAAQQ,IAC3BjK,EAAKiK,GAAGD,aAAaE,cAAcC,SAAS3B,EAAO0B,gBACrDH,EAAiBrL,KAAK,CACpBgL,GAAI1J,EAAKiK,GAAGvD,SACZvF,OAAQnB,EAAKiK,GAAGD,aAChBJ,WAAa5J,EAAKiK,GAAGJ,aAI3BhB,EAAWkB,EACb,IAEJ,GAAG,CAACvB,IAiBJ,OACEtJ,EAAAA,EAAAA,MAACF,EAAS,CAACuJ,iBAAkBA,EAAiBtJ,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,OAAKwL,MAAM,OAAMtL,SACdgB,EAAUE,KAAI,SAAA4G,GAAO,OACpB7H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAA6BI,QAAS,kBApBzCc,EAoB0D0G,EAAQ2C,GAnBpF3B,aAAayC,QAAQ,qBAAsBnK,QAC3C3B,EAAK,SAFY,IAAC2B,CAoBqE,EAACpB,SAAA,EAChFF,EAAAA,EAAAA,KAAA,OAAKK,IAAK2H,EAAQ6C,WAAYvK,IAAK,UAAY0H,EAAQ2C,MACvD3K,EAAAA,EAAAA,KAAA,KAAAE,SAAI8H,EAAQ5F,WAFkB4F,EAAQ2C,GAGlC,OAGV3K,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,OAAKwL,MAAM,OAAMtL,SACd2J,EAAQzI,KAAI,SAAAmK,GAAK,OAChBpL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAA2BI,QAAS,kBAxBzCmH,EAwBwD4D,EAAMZ,GAvB9E3B,aAAayC,QAAQ,sBAAuB9D,QAC5ChI,EAAK,UAFU,IAACgI,CAwBiE,EAACzH,SAAA,EAC1EF,EAAAA,EAAAA,KAAA,OAAKK,IAAKkL,EAAMV,WAAYvK,IAAK,UAAYiL,EAAMZ,MACnD3K,EAAAA,EAAAA,KAAA,KAAAE,SAAIqL,EAAMnJ,WAFoBmJ,EAAMZ,GAGhC,OAGV3K,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,OAAKwL,MAAM,OAAMtL,SACdyJ,EAASvI,KAAI,SAAAkK,GAAO,OACnBnL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAA6BI,QAAS,kBA5BzCkL,EA4B0DJ,EAAQX,GA3BpF3B,aAAayC,QAAQ,uBAAwBC,QAC7C/L,EAAK,WAFY,IAAC+L,CA4BqE,EAACxL,SAAA,EAChFF,EAAAA,EAAAA,KAAA,OAAKK,IAAKiL,EAAQT,WAAYvK,IAAK,UAAYgL,EAAQX,MACvD3K,EAAAA,EAAAA,KAAA,KAAAE,SAAIoL,EAAQlJ,WAFkBkJ,EAAQX,GAGlC,QAKhB,CA1LA7J,IAAAA,SAAe6K,QAAUC,uEA4LzB,I,EAAM3L,EAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6mC,8BC1Lb,SAAS2J,GAAItM,GAA0C,IAAvCiK,EAAgBjK,EAAhBiK,iBAAkBqC,EAAItM,EAAJsM,KAAMC,EAAUvM,EAAVuM,WAErD1G,GAAgCC,EAAAA,EAAAA,UAAS,CACvC0G,QAASF,EAAKE,QACdC,UAAWH,EAAKG,UAChBC,iBAAkBJ,EAAKI,iBAAiBC,UAAU,EAAG,IACrDC,OAAQN,EAAKM,OACbC,KAAMP,EAAKO,KACXC,YAAa,GACbC,kBAAmB,KACnB/G,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GARKmH,EAAQhH,EAAA,GAAEiH,EAAWjH,EAAA,GAUtBkH,EAAoB,SAAC5H,GACzB,IAAA6H,EAAwB7H,EAAM/B,OAAtB6J,EAAID,EAAJC,KAAM5J,EAAK2J,EAAL3J,MACdyJ,GAAWI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRL,GAAQ,IAAAM,EAAAA,EAAAA,GAAA,GACVF,EAAO5J,IAEZ,EAoCA,OACE/C,EAAAA,EAAAA,KAACC,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,UAC5CC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKK,IAAK,+CAAiDwL,EAAKO,KAAM9L,IAAK,cAAgBiM,EAASR,WACpG/L,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACRC,WAAS,EACTC,WAAS,EACTC,MAAM,UACNC,OAAO,SACPC,QAAQ,WACRC,MAAM,UACNT,KAAK,UACL5J,MAAOwJ,EAASR,QAChBpJ,SAAU8J,KAEZzM,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACRC,WAAS,EACTC,WAAS,EACTC,MAAM,UACNC,OAAO,SACPC,QAAQ,WACRC,MAAM,YACNT,KAAK,YACL5J,MAAOwJ,EAASP,UAChBrJ,SAAU8J,KAEZzM,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACRO,gBAAiB,CAAEC,QAAQ,GAC3BP,WAAS,EACTtK,KAAK,OACLwK,MAAM,UACNC,OAAO,SACPC,QAAQ,WACRC,MAAM,sBACNT,KAAK,mBACL5J,MAAOwJ,EAASN,iBAChBtJ,SAAU8J,KAEZzM,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACRC,WAAS,EACTtK,KAAK,QACLwK,MAAM,UACNC,OAAO,SACPC,QAAQ,WACRC,MAAM,SACNT,KAAK,SACL5J,MAAOwJ,EAASJ,OAChBxJ,SAAU8J,KAEZzM,EAAAA,EAAAA,KAAA,SACEyC,KAAK,OACL8K,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClB9K,SAvFiB,SAACkC,GACxB,IAAM6I,EAAO7I,EAAM/B,OAAO6K,MAAM,GAChCnB,GAAWI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRL,GAAQ,IACXqB,QAASF,IAEb,EAkFQ/C,GAAG,aACHgC,KAAK,aAEP3M,EAAAA,EAAAA,KAAA,SAAO6N,QAAQ,aAAY3N,UACzBF,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CACL+J,WAAS,EACTI,QAAQ,WACRF,MAAM,UACNa,UAAU,OAAM5N,SACjB,kBAIHF,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACRC,WAAS,EACTtK,KAAK,WACLwK,MAAM,UACNC,OAAO,SACPC,QAAQ,WACRC,MAAM,gBACNT,KAAK,cACL5J,MAAOwJ,EAASF,YAChB1J,SAAU8J,KAEZzM,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACRC,WAAS,EACTtK,KAAK,WACLwK,MAAM,UACNC,OAAO,SACPC,QAAQ,WACRC,MAAM,iCACNT,KAAK,oBACL5J,MAAOwJ,EAASD,kBAChB3J,SAAU8J,KAEZzM,EAAAA,EAAAA,KAACgD,EAAAA,EAAM,CACL+J,WAAS,EACTI,QAAQ,YACRF,MAAM,YACNzM,QAvHS,WACf,GAA6B,KAAzB+L,EAASF,YAAoB,CAC/B,IAAM0B,EAAiB,IAAIC,SAC3B,IAAK,IAAMC,KAAO1B,EAChBwB,EAAeG,OAAOD,EAAK1B,EAAS0B,IAEtCnN,IAAAA,IACO,aAAekI,aAAaC,QAAQ,sBAAwB,IAAMsD,EAASF,YAAa0B,GAC5FhN,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,KACPkN,MAAMlN,EAAKmN,SACXtN,IAAAA,IAAU,YAAckI,aAAaC,QAAQ,uBAC1ClI,MAAK,SAAAsN,GAAe,IAAZpN,EAAIoN,EAAJpN,UACM0H,IAAT1H,GAA+B,OAATA,GACxB6K,EAAW7K,EAAKqN,QAEpB,GACJ,IACC/M,OAAM,SAAAgN,GAAmB,IAAhBvN,EAAQuN,EAARvN,SACRmN,MAAMnN,EAASC,KAAKmN,QACtB,GACJ,MACED,MAAM,wCAGV,EA+F0BjO,SACnB,mBAMT,CA5JAY,IAAAA,SAAe6K,QAAUC,uEA8JzB,I,GAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sxCC1Jb,SAASsM,GAASjP,GAAuC,IAApC8C,EAAa9C,EAAb8C,cAAeC,EAAK/C,EAAL+C,MAAO7C,EAASF,EAATE,UAEhDE,GAASC,EAAAA,EAAAA,MAATD,KAOR,OACEQ,EAAAA,EAAAA,MAACF,GAAS,CAACoC,cAAeA,EAAcnC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAEJC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACxC,QAAS,kBATrBb,EAAK,aACLF,EAAU,GAQ2B,EAACS,SAAA,EAChCF,EAAAA,EAAAA,KAACyO,EAAAA,IAAgB,KACjBzO,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBAERC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACxC,QAAS,kBAAM8B,GAAO,EAACpC,SAAA,EAC7BF,EAAAA,EAAAA,KAACmD,EAAAA,IAAM,KACPnD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAMhB,CAEA,I,GAAMD,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,y1BAWN,SAAAkB,GAAgB,OAAAA,EAAbf,cACL,kBAAoB,MAAM,ICzC/B,SAASqM,GAAInP,GAAwD,IAArDiK,EAAgBjK,EAAhBiK,iBAAkBmF,EAAapP,EAAboP,cAAevG,EAAI7I,EAAJ6I,KAAM3I,EAASF,EAATE,UAE9DmP,GAAU9O,EAAAA,EAAAA,UAChB8O,EAAQ7O,QAAUqI,EAElB,IAAQzI,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAA8BC,EAAAA,EAAAA,UAAS,CACrC9B,eAAgB,GAChBiE,oBAAqB,GACrBC,iBAAkB,EAClBnE,mBAAoB,GACpBoE,YAAa,EACbC,UAAW,EACXC,YAAa,EACbpE,eAAgB,GAChBqE,UAAW,EACXC,aAAc,KACdvC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAXK4C,EAAOzC,EAAA,GAAE0C,EAAU1C,EAAA,GAY1BiB,GAAgCnB,EAAAA,EAAAA,WAAS,GAAMoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAxCqI,EAAQpI,EAAA,GAAEqI,EAAWrI,EAAA,IAE5Bd,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,YAAckI,aAAaC,QAAQ,uBAC1ClI,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACM0H,IAAT1H,GAA+B,OAATA,EACxBgH,EAAWhH,EAAK+G,UAEhBgB,aAAayC,QAAQ,sBAAuB,GAC5CsD,IAEJ,GACJ,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,qBAAuBkI,aAAaC,QAAQ,sBAAwB,IAAMD,aAAaC,QAAQ,uBACtGlI,MAAK,SAAAsN,GAAe,IAAZpN,EAAIoN,EAAJpN,UACM0H,IAAT1H,GAA+B,OAATA,EACxB6N,EAAY7N,EAAK+N,cAEjBhG,aAAayC,QAAQ,sBAAuB,GAC5CsD,IAEJ,GACJ,GAAG,IAEH,IAAMA,EAAa,WACjBpP,EAAK,QACLF,EAAU,GACZ,EAmCA,OACEO,EAAAA,EAAAA,KAACC,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,UAC5CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,UACrBF,EAAAA,EAAAA,KAAA,OAAKK,IAAK2H,EAAQ1E,mBAAoBhD,IAAK,cAAgB0H,EAAQzE,oBAErEpD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,WAAS8H,EAAQzE,qBACxBpD,EAAAA,EAAAA,MAAA,MAAIK,QA1CK,WACjBwI,aAAayC,QAAQ,uBAAwBzD,EAAQJ,YACrDjI,EAAK,UACP,EAuCkCO,SAAA,CAAC,YAAU8H,EAAQxE,mBAC3CrD,EAAAA,EAAAA,MAAA,MAAIK,QAtCG,WACfwI,aAAayC,QAAQ,sBAAuBzD,EAAQH,UACpDlI,EAAK,SACP,EAmCgCO,SAAA,CAAC,UAAQ8H,EAAQF,iBACvC3H,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,aAAW8H,EAAQP,2BAG3BtH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAAUI,QAAS,WAAQoO,EAAQ7O,QAAQiI,EAAQN,WAAY,EAAExH,SAAC,gBAGjFF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAAUI,QAzCrB,WACVmO,EAAc3G,EAAQN,WACxB,EAuC8CxH,SAAC,kCAGtC2O,GACC1O,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAAUI,QA9BjB,WAChBM,IAAAA,OACU,cAAgBkI,aAAaC,QAAQ,sBAAwB,IAAMD,aAAaC,QAAQ,uBAC/FlI,MAAK,WACJ+N,GAAY,EACd,GACJ,EAwBsD5O,SAAA,EAC1CF,EAAAA,EAAAA,KAACY,EAAAA,IAAW,IAAE,0BAIhBT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAAUI,QA9CpB,WACbM,IAAAA,KACQ,aAAc,CAClBQ,WAAY0H,aAAaC,QAAQ,sBACjCF,WAAYC,aAAaC,QAAQ,wBAElClI,MAAK,WACJ+N,GAAY,EACd,GACJ,EAqCmD5O,SAAA,EACvCF,EAAAA,EAAAA,KAACiP,EAAAA,GAAc,IAAE,gCAS/B,CA1HAnO,IAAAA,SAAe6K,QAAUC,uEA4HzB,I,GAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8oCCxHb,SAASgN,GAAS3P,GAAwC,IAQjD6C,EARYC,EAAa9C,EAAb8C,cAAeC,EAAK/C,EAAL+C,MAAOC,EAAIhD,EAAJgD,KAAM4M,EAAI5P,EAAJ4P,KAEtDxP,GAASC,EAAAA,EAAAA,MAATD,KAWR,OACEQ,EAAAA,EAAAA,MAACF,GAAS,CAACoC,cAAeA,EAAcnC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKiP,KACLhP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACrBC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACxC,QAAS,WAZrBb,EAAK,QAYkC,EAACO,SAAA,EAClCF,EAAAA,EAAAA,KAACiD,EAAAA,IAAS,KACVjD,EAAAA,EAAAA,KAAA,QAAAE,UAXckC,EAWMG,EAVVH,EAAOc,MAAM,KACZ,UAWb/C,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACxC,QAAS,kBAAM8B,GAAO,EAACpC,SAAA,EAC7BF,EAAAA,EAAAA,KAACmD,EAAAA,IAAM,KACPnD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAMhB,CAEA,I,GAAMD,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,y1BAWN,SAAAkB,GAAgB,OAAAA,EAAbf,cACL,kBAAoB,MAAM,IC7C/B,SAAS+M,GAAK7P,GAAiE,IAA9DiK,EAAgBjK,EAAhBiK,iBAAkB/J,EAASF,EAATE,UAAW4P,EAAS9P,EAAT8P,UAAWC,EAAiB/P,EAAjB+P,kBAEhEzP,GAAeC,EAAAA,EAAAA,UACrBD,EAAaE,QAAUsP,EACvB,IAAME,GAAuBzP,EAAAA,EAAAA,UAC7ByP,EAAqBxP,QAAUuP,EAE7B,IAAQ3P,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAA0BC,EAAAA,EAAAA,UAAS,CAC/BwC,UAAW,EACXC,aAAc,GACd0H,kBAAmB,GACnBC,oBAAqB,GACrB7H,YAAa,EACbpE,eAAgB,KAClB+B,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAPKmG,EAAKhG,EAAA,GAAEmK,EAAQnK,EAAA,GAStBiB,GAAkCnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAvCtF,EAASuF,EAAA,GAAEiD,EAAYjD,EAAA,IAE9Bd,EAAAA,EAAAA,YAAU,WACN7E,IAAAA,IAAU,UAAYkI,aAAaC,QAAQ,wBACtClI,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACQ0H,IAAT1H,GAA+B,OAATA,EACtByO,EAASzO,EAAKsK,QAEdvC,aAAayC,QAAQ,uBAAwB,GAC7CsD,IAER,GACR,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WACN7E,IAAAA,IAAU,oBAAsBkI,aAAaC,QAAQ,wBAChDlI,MAAK,SAAAC,GAEF,IAAMC,EAAOD,EAASC,KAAK0O,gBAC3BjG,EAAazI,EACjB,IACCM,OAAM,SAAAC,GACHC,QAAQD,MAAM,uCAAwCA,EAC1D,GACR,GAAG,CAAC+J,IAEJ,IAAMwD,EAAa,WACfpP,EAAK,QACLF,EAAU,GACd,EA4BA,OACIO,EAAAA,EAAAA,KAACC,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,UAC1CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,UACnBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKkL,EAAMkE,oBAAqBnP,IAAK,cAAgBiL,EAAMzD,kBAEpE3H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,WAASqL,EAAMzD,mBACtB3H,EAAAA,EAAAA,MAAA,MAAIK,QAnCL,WACfwI,aAAayC,QAAQ,uBAAwBF,EAAM3D,YACnDjI,EAAK,UACT,EAgC4CO,SAAA,CAAC,YAAUqL,EAAM/H,mBACzCrD,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,mBAAcqL,EAAMiE,4BAGhCrP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAAUI,QA9BjB,WAEtB,IADA,IAAMoP,EAAgB,GACb1E,EAAI,EAAGA,EAAIhK,EAAUwJ,OAAQQ,IACpC0E,EAAcjQ,KAAKuB,EAAUgK,GAAG5J,YAElCzB,EAAaE,QAAQ6P,EACvB,EAwBkE1P,SAAC,gBAGnDF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAAUI,QAzBpB,WAEnB,IADA,IAAMoP,EAAgB,GACb1E,EAAI,EAAGA,EAAIhK,EAAUwJ,OAAQQ,IACpC0E,EAAcjQ,KAAKuB,EAAUgK,GAAG5J,YAElCiO,EAAqBxP,QAAQ6P,EAC/B,EAmB+D1P,SAAC,qCAInDgB,EAAUE,KAAI,SAAC4G,EAAS6H,GAAK,OAC1B1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAmCrP,QAAS,kBA3C9Fc,EA2C+G0G,EAAQ1G,WA1CvI0H,aAAayC,QAAQ,qBAAsBnK,QAC3C3B,EAAK,SAFU,IAAC2B,CA2CkI,EAACpB,SAAA,EACnIF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAChB2P,EAAQ,KAEb7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAClB8H,EAAQ4C,kBAEb5K,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SACjB8H,EAAQ+H,qBARoD/H,EAAQ1G,WAUvE,QAK1B,CAlHAR,IAAAA,SAAe6K,QAAUC,uEAoHzB,I,GAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,u9DClHb,SAAS8N,GAAMzQ,GAAmC,IAAhCiK,EAAgBjK,EAAhBiK,iBAAkB/J,EAASF,EAATE,UAEvCE,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAA8BC,EAAAA,EAAAA,UAAS,CACnCuC,YAAa,EACbpE,eAAgB,GAChBsH,WAAY,GACZmB,iBAAkB,KACpB1G,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GALKkG,EAAO/F,EAAA,GAAE0K,EAAU1K,EAAA,GAO1BiB,GAA8BnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAnCqD,EAAOpD,EAAA,GAAEqD,EAAUrD,EAAA,IAE1Bd,EAAAA,EAAAA,YAAU,WACN7E,IAAAA,IAAU,YAAckI,aAAaC,QAAQ,yBACxClI,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACQ0H,IAAT1H,GAA+B,OAATA,EACtBgP,EAAWhP,EAAKqK,UAEhBtC,aAAayC,QAAQ,wBAAyB,GAC9CsD,IAER,GACR,GAAG,KAEHpJ,EAAAA,EAAAA,YAAU,WACN7E,IAAAA,IAAU,oBAAsBkI,aAAaC,QAAQ,yBAChDlI,MAAK,SAAAC,GAEF,IAAMC,EAAOD,EAASC,KAAKiP,gBAC3BpG,EAAW7I,EACf,IACCM,OAAM,SAAAC,GACHC,QAAQD,MAAM,uCAAwCA,EAC1D,GACR,GAAG,CAAC8J,IAEJ,IAAMyD,EAAa,WACfpP,EAAK,QACLF,EAAU,GACd,EAOA,OACIO,EAAAA,EAAAA,KAACC,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,UAC1CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,UACnBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKiL,EAAQR,WAAYxK,IAAK,cAAgBgL,EAAQ9H,oBAE/DrD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,WAASoL,EAAQ9H,qBACxBrD,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,wBAAsBoL,EAAQW,0BAGzCpC,EAAQzI,KAAI,SAACmK,EAAOsE,GAAK,OACtB1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAA+BrP,QAAS,kBAlB5Fc,EAkB2GiK,EAAM1D,SAjB/HmB,aAAayC,QAAQ,sBAAuBnK,QAC5C3B,EAAK,UAFQ,IAAC2B,CAkB0H,EAACpB,SAAA,EACzHF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAChB2P,EAAQ,KAEb7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SACjBqL,EAAMzD,iBALsDyD,EAAM1D,SAOrE,QAK1B,CA1EA/G,IAAAA,SAAe6K,QAAUC,uEA4EzB,I,GAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,wyCC1Eb,SAASkN,GAAK7P,GAA0E,IAAvEiK,EAAgBjK,EAAhBiK,iBAAkBrD,EAAY5G,EAAZ4G,aAAcgK,EAAc5Q,EAAd4Q,eAAgBC,EAAkB7Q,EAAlB6Q,mBAEpEzQ,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAAkCC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvClE,EAASqE,EAAA,GAAEmE,EAAYnE,EAAA,IAiB9BI,EAAAA,EAAAA,YAAU,WACN+D,EAAa,IACb,IAAK,IAAIwB,EAAI,EAAGA,EAAIiF,EAAezF,OAAQQ,IACvCpK,IAAAA,IAAU,YAAcqP,EAAejF,IAClCnK,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACQ0H,IAAT1H,GAA+B,OAATA,GACtByI,GAAa,SAAAxI,GAAS,SAAA4O,QAAAO,EAAAA,EAAAA,GAAQnP,GAAS,CAAED,EAAK+G,SAAO,GAE7D,GAEZ,GAAG,CAACmI,IAMJ,OACInQ,EAAAA,EAAAA,KAACC,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,UAC1CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,QAAUF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAAC,SAGtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,YAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,WAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,aAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,cAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SAAC,gBAI1BgB,EAAUE,KAAI,SAAC4G,EAAS6H,GAAK,OAC1B1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAW9H,EAAQN,aAAevB,EAAe,MAAQ0J,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAS3P,SAAA,EACzGF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAChB2P,EAAQ,KAEb7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAkCI,QAAS,kBA3D1Dc,EA2D2E0G,EAAQ1G,WA1DnG0H,aAAayC,QAAQ,qBAAsBnK,QAC3C3B,EAAK,SAFU,IAAC2B,CA2D8F,EAACpB,SAC1F8H,EAAQzE,gBADgByE,EAAQ1G,aAGrCtB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAgCI,QAAS,kBAzD1DmH,EAyDyEK,EAAQH,SAxD/FmB,aAAayC,QAAQ,sBAAuB9D,QAC5ChI,EAAK,UAFQ,IAACgI,CAyD0F,EAACzH,SACpF8H,EAAQF,cADgBE,EAAQH,WAGrC7H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAkCI,QAAS,kBAvD1DkL,EAuD2E1D,EAAQJ,WAtDnGoB,aAAayC,QAAQ,uBAAwBC,QAC7C/L,EAAK,WAFU,IAAC+L,CAuD8F,EAACxL,SAC1F8H,EAAQxE,gBADgBwE,EAAQJ,aAGrC5H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAClB8H,EAAQP,oBAEbzH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAiCI,QAAS,kBA5CpDkL,EA4C0E1D,EAAQN,gBA3CzG0I,EAAmB1E,GADG,IAACA,CA4C6F,EAACxL,SAAC,KAAxE8H,EAAQJ,cAGlC,QAK1B,CAvFA9G,IAAAA,SAAe6K,QAAUC,uEAyFzB,I,GAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,uiECvFb,SAASkN,GAAK7P,GAAkD,IAA/CiK,EAAgBjK,EAAhBiK,iBAAgCpD,GAAF7G,EAAZ4G,aAAwB5G,EAAV6G,YAEtDzG,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAAkCC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvClE,EAASqE,EAAA,GAAEmE,EAAYnE,EAAA,GAC9BiB,GAAgCnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAArCmD,EAAQlD,EAAA,GAAEmD,EAAWnD,EAAA,GAC5BG,GAA8BvB,EAAAA,EAAAA,UAAS,IAAGwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAnCiD,EAAOhD,EAAA,GAAEiD,EAAUjD,EAAA,GAC1BE,GAAkC1B,EAAAA,EAAAA,UAAS,IAAG2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAvCuJ,EAAStJ,EAAA,GAAEuJ,EAAYvJ,EAAA,GAExBwJ,EAAa,SAAClP,GAClB0H,aAAayC,QAAQ,qBAAsBnK,GAC3C3B,EAAK,QACP,EAEM8Q,EAAW,SAAC9I,GAChBqB,aAAayC,QAAQ,sBAAuB9D,GAC5ChI,EAAK,SACP,EAEM+Q,EAAa,SAAChF,GAClB1C,aAAayC,QAAQ,uBAAwBC,GAC7C/L,EAAK,UACP,EAsCA,OApCAgG,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,mBAAqBkI,aAAaC,QAAQ,uBACjDlI,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACM0H,IAAT1H,GAA+B,OAATA,GACxByI,EAAazI,EAAKA,KAEtB,GACJ,GAAG,CAACmF,KAEJT,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,kBAAoBkI,aAAaC,QAAQ,uBAChDlI,MAAK,SAAAsN,GAAe,IAAZpN,EAAIoN,EAAJpN,UACM0H,IAAT1H,GAA+B,OAATA,GACxB2I,EAAY3I,EAAKA,KAErB,GACJ,GAAG,CAACmF,KAEJT,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,iBAAmBkI,aAAaC,QAAQ,uBAC/ClI,MAAK,SAAAwN,GAAe,IAAZtN,EAAIsN,EAAJtN,UACM0H,IAAT1H,GAA+B,OAATA,GACxB6I,EAAW7I,EAAKA,KAEpB,GACJ,GAAG,CAACmF,KAEJT,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,cAAgBkI,aAAaC,QAAQ,uBAC5ClI,MAAK,SAAA4P,GAAe,IAAZ1P,EAAI0P,EAAJ1P,UACM0H,IAAT1H,GAA+B,OAATA,GACxBsP,EAAatP,EAAKA,KAEtB,GACJ,GAAG,CAACmF,KAGFjG,EAAAA,EAAAA,MAACF,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yCAENC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,QAAUF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAAC,SAGtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,YAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,aAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,WAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SAAC,sBAIxBgB,EAAUE,KAAI,SAAC4G,EAAS6H,GAAK,OAC5B1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAS3P,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAClB2P,EAAQ,KAEX7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAkCI,QAAS,kBAAMgQ,EAAWxI,EAAQ1G,WAAW,EAACpB,SAC5F8H,EAAQ4C,gBADkB5C,EAAQ1G,aAGrCtB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAkCI,QAAS,kBAAMkQ,EAAW1I,EAAQ0D,WAAW,EAACxL,SAC5F8H,EAAQ4I,gBADkB5I,EAAQ0D,aAGrC1L,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAgCI,QAAS,kBAAMiQ,EAASzI,EAAQL,SAAS,EAACzH,SACtF8H,EAAQiD,cADkBjD,EAAQL,WAGrC3H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SACnB8H,EAAQ6I,aAEP,QAIV7Q,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wCAENC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,QAAUF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,SAAC,SAG5BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,SAAC,YAG9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SAAC,sBAI9ByJ,EAASvI,KAAI,SAACkK,EAASuE,GAAK,OAC3B1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAS3P,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,SACxB2P,EAAQ,KAEX7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAwCI,QAAS,kBAAMkQ,EAAWpF,EAAQI,WAAW,EAACxL,SAClGoL,EAAQsF,gBADwBtF,EAAQI,aAG3C1L,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SACzBoL,EAAQuF,aAEP,QAIV7Q,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uCAENC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,QAAUF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,SAAC,SAG3BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SAAC,YAG7BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SAAC,aAG7BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,SAAC,sBAI7B2J,EAAQzI,KAAI,SAACmK,EAAOsE,GAAK,OACxB1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAS3P,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,SACvB2P,EAAQ,KAEX7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAmCI,QAAS,kBAAMiQ,EAASlF,EAAM5D,SAAS,EAACzH,SACvFqL,EAAMN,cADyBM,EAAM5D,WAGxC3H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAqCI,QAAS,kBAAMkQ,EAAWnF,EAAMG,WAAW,EAACxL,SAC7FqL,EAAMqF,gBADyBrF,EAAMG,aAGxC1L,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,SACxBqL,EAAMsF,aAEL,QAIV7Q,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BAENC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,QAAUF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SAAC,SAG7BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,SAAC,YAG/BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,SAAC,aAG/BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,SAAC,WAG/BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,SAAC,aAI/BoQ,EAAUlP,KAAI,SAAC0P,EAAUjB,GAAK,OAC7B1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAS3P,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SACzB2P,EAAQ,KAEX7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAA0CI,QAAS,kBAAMgQ,EAAWM,EAASxP,WAAW,EAACpB,SACrG4Q,EAAS1O,QADwB0O,EAASxP,aAG7CtB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAA0CI,QAAS,kBAAMkQ,EAAWI,EAASpF,WAAW,EAACxL,SACrG4Q,EAASF,gBADwBE,EAASpF,aAG7C1L,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAwCI,QAAS,kBAAMiQ,EAASK,EAASnJ,SAAS,EAACzH,SAC/F4Q,EAAS7F,cADwB6F,EAASnJ,WAG7C3H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,SAC1B4Q,EAASC,mBAER,SAKhB,CAvNAjQ,IAAAA,SAAe6K,QAAUC,uEAyNzB,I,GAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6/HCxNb,SAAS8O,GAASzR,GAAuD,IAApDiK,EAAgBjK,EAAhBiK,iBAAmB6F,EAAS9P,EAAT8P,UAAYC,EAAiB/P,EAAjB+P,kBAEzD3P,GAASC,EAAAA,EAAAA,MAATD,KAERyF,GAAkCC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvClE,EAASqE,EAAA,GAAEmE,EAAYnE,EAAA,GAC9BiB,GAA4BnB,EAAAA,EAAAA,WAAS,GAAMoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAApCyK,EAAMxK,EAAA,GAAEyK,EAASzK,EAAA,GAElB5G,GAAeC,EAAAA,EAAAA,UACrBD,EAAaE,QAAUsP,EACvB,IAAME,GAAuBzP,EAAAA,EAAAA,UAC7ByP,EAAqBxP,QAAUuP,GAiB/B3J,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,cAAgBkI,aAAaC,QAAQ,uBAC5ClI,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACM0H,IAAT1H,GAA+B,OAATA,GACxByI,EAAazI,EAAKkQ,oBAEtB,GACJ,GAAG,CAACF,IA0BJ,OACEjR,EAAAA,EAAAA,KAACC,GAAS,CAACuJ,iBAAkBA,EAAiBtJ,UAC5CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOF,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAAUI,QApBT,WAEtB,IADA,IAAMoP,EAAgB,GACb1E,EAAI,EAAGA,EAAIhK,EAAUwJ,OAAQQ,IACpC0E,EAAcjQ,KAAKuB,EAAUgK,GAAG5J,YAElCzB,EAAaE,QAAQ6P,EACvB,EAc0D1P,SAAC,gBAGnDF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAAUI,QAfZ,WAEnB,IADA,IAAMoP,EAAgB,GACb1E,EAAI,EAAGA,EAAIhK,EAAUwJ,OAAQQ,IACpC0E,EAAcjQ,KAAKuB,EAAUgK,GAAG5J,YAElCiO,EAAqBxP,QAAQ6P,EAC/B,EASuD1P,SAAC,sCAIlDC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,QAAUF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAAC,SAGtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,YAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,WAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,aAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,cAGxBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,SAAC,gBAIxBgB,EAAUE,KAAI,SAAC4G,EAAS6H,GAAK,OAC5B1P,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAA0P,OAAWD,EAAQ,IAAM,EAAI,OAAS,GAAE,UAAS3P,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,SAClB2P,EAAQ,KAEX7P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAkCI,QAAS,kBApFhDc,EAoFiE0G,EAAQ1G,WAnF3F0H,aAAayC,QAAQ,qBAAsBnK,QAC3C3B,EAAK,SAFY,IAAC2B,CAoFoF,EAACpB,SAC5F8H,EAAQ4C,gBADkB5C,EAAQ1G,aAGrCtB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAgCI,QAAS,kBAlFhDmH,EAkF+DK,EAAQL,SAjFvFqB,aAAayC,QAAQ,sBAAuB9D,QAC5ChI,EAAK,UAFU,IAACgI,CAkFgF,EAACzH,SACtF8H,EAAQiD,cADkBjD,EAAQL,WAGrC3H,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAwCI,QAAS,kBAhFtDkL,EAgFuE1D,EAAQoJ,iBA/EjGpI,aAAayC,QAAQ,uBAAwBC,QAC7C/L,EAAK,WAFY,IAAC+L,CAgFgG,EAACxL,SACxG8H,EAAQ4I,gBADkB5I,EAAQoJ,mBAGrCpR,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SACpB8H,EAAQ+H,oBAEX/P,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAiCI,QAAS,kBAxE1Cc,EAwEgE0G,EAAQ1G,gBAvE/FR,IAAAA,OACU,cAAgBQ,EAAa,IAAM0H,aAAaC,QAAQ,uBAC/DlI,MAAK,WACJmQ,GAAWD,EACb,IALoB,IAAC3P,CAwEmF,EAACpB,SAAC,KAAxE8H,EAAQ1G,cAGhC,QAKhB,CAtHAR,IAAAA,SAAe6K,QAAUC,uEAwHzB,IAAM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,uiE,kPCpG5BpB,IAAAA,SAAe6K,QAAUC,uEAEzB,IAAM4B,GAAQ,CACV6D,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXjR,MAAO,IACPkR,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GA2UP,GAxUa,WAGT,IAAAxM,GAAoBC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzBuF,EAAEpF,EAAA,GAAEsM,EAAKtM,EAAA,GAChBiB,GAAwBnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA7BmG,EAAIlG,EAAA,GAAEqL,EAAOrL,EAAA,GACpBG,GAAkCvB,EAAAA,EAAAA,UAAS,MAAKwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAzCmL,EAASlL,EAAA,GAAEmL,EAAYnL,EAAA,GAC9BE,GAA0C1B,EAAAA,EAAAA,UAAS,IAAG2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAA/CkL,EAAajL,EAAA,GAAEkL,EAAgBlL,EAAA,GACtCG,GAAkC9B,EAAAA,EAAAA,UAAS,MAAK+B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAzCgL,EAAS/K,EAAA,GAAEgL,EAAYhL,EAAA,GAC9BG,GAAoClC,EAAAA,EAAAA,WAAS,GAAM0C,GAAAvC,EAAAA,EAAAA,GAAA+B,EAAA,GAA5C8K,EAAUtK,EAAA,GAAEuK,EAAavK,EAAA,GAChCwK,GAAoClN,EAAAA,EAAAA,WAAS,GAAMmN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8BtN,EAAAA,EAAAA,WAAS,GAAMuN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAG1BG,GAA0C1N,EAAAA,EAAAA,UAAS,IAAG2N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAatCG,GAA0C9N,EAAAA,EAAAA,UAAS,IAAG+N,GAAA5N,EAAAA,EAAAA,GAAA2N,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAuBtCG,GAAgClO,EAAAA,EAAAA,UAAS,IAAGmO,GAAAhO,EAAAA,EAAAA,GAAA+N,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAMtBG,GAAW7T,EAAAA,EAAAA,QAAO,MAGxB8T,EAAwBC,EAAAA,UAAe,GAAMC,GAAAtO,EAAAA,EAAAA,GAAAoO,EAAA,GAAtCG,EAAID,EAAA,GAAEE,GAAOF,EAAA,GACdG,GAAa,SAAC5B,EAAYI,GAAuE,IAA1C7H,EAAcsJ,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GAAIxI,EAAUwI,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GACvFzB,IACAZ,EAF8CqC,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,IAGjDpC,EAAQlH,GACR8I,EAAYhI,IAEhB4G,EAAcD,GACdK,EAAcD,GACduB,IAAQ,GACRlB,GAAYD,EAChB,EAQAsB,IAA8B9O,EAAAA,EAAAA,UAAS,IAAG+O,IAAA5O,EAAAA,EAAAA,GAAA2O,GAAA,GAAnCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,IAC1BzO,EAAAA,EAAAA,YAAU,WAAO,IAADpG,GAEG,YAAAA,EAAAA,IAAAgV,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA1T,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEahU,IAAAA,IAAU,aAAa,KAAD,EAAvCE,EAAQ4T,EAAAG,KACdT,GAAWtT,EAASC,KAAK0I,UAAWiL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEpCnT,QAAQD,MAAM,8BAA6BoT,EAAAI,IAAS,yBAAAJ,EAAAK,OAAA,GAAAP,EAAA,mBAE3DQ,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAAAuC,IAAkC/P,EAAAA,EAAAA,UAAS,IAAGgQ,IAAA7P,EAAAA,EAAAA,GAAA4P,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,IAC9B1P,EAAAA,EAAAA,YAAU,WAAO,IAADvC,GACG,YAAAA,EAAAA,IAAAmR,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAe,IAAA,IAAAxU,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEahU,IAAAA,IAAU,cAAc,KAAD,EAAxCE,EAAQyU,EAAAV,KACdQ,GAAavU,EAASC,KAAKC,WAAUuU,EAAAX,KAAA,gBAAAW,EAAAZ,KAAA,EAAAY,EAAAT,GAAAS,EAAA,SAErChU,QAAQD,MAAM,8BAA6BiU,EAAAT,IAAS,yBAAAS,EAAAR,OAAA,GAAAO,EAAA,mBAE3DN,MAAA,KAAAhB,UAAA,CACDiB,EACJ,GAAG,CAACtC,IAkCJ,SAAS6C,GAAuBC,GAC5B,IAAMC,EAAQ1L,KAAKC,MAAMwL,EAAW,MAC9BE,EAAU3L,KAAKC,MAAOwL,EAAW,KAAQ,IACzCG,EAAoBH,EAAW,GAE/BI,EAAc,SAACC,GAAK,OAAMA,EAAQ,GAAE,IAAAlG,OAAOkG,GAAK,GAAAlG,OAAQkG,EAAO,EAErE,MAAM,GAANlG,OAAUiG,EAAYH,GAAM,KAAA9F,OAAIiG,EAAYF,GAAQ,KAAA/F,OAAIiG,EAAYD,GACtE,CAGF,IA6CMG,GAAc,WAChBpE,EAAM,IACNC,EAAQ,IACRE,EAAa,MACbkB,EAAiB,IACjBd,EAAa,MACbkB,EAAiB,IACjBI,EAAY,GAChB,EAEA,OACIvT,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAzB,SAAA,EACIC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QAAS,kBAAMyT,GAAW,aAAa,EAAM,EAAC/T,SAAA,EAACF,EAAAA,EAAAA,KAACkW,GAAAA,EAAO,IAAG,gBACtGlW,EAAAA,EAAAA,KAACmW,GAAAA,EAAK,CACFpC,KAAMA,EACNqC,QA3IQ,WAChBH,KACAjC,IAAQ,GACRlB,GAAYD,EAChB,EAwIY,kBAAgB,oBAChB,mBAAiB,0BAAyB3S,UAE1CC,EAAAA,EAAAA,MAACkW,GAAAA,EAAG,CAACC,GAAI9I,GAAMtN,SAAA,EACXF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAC5L,GAAG,oBAAoBwC,QAAQ,KAAKW,UAAU,KAAI5N,SACzDmS,KAELrS,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAACoW,GAAAA,EAAU,CAAC5L,GAAG,0BAA0B2L,GAAI,CAAEE,GAAI,GAAItW,SAAA,EACnDF,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACNM,MAAM,0BACND,QAAQ,WACRJ,WAAS,EACTuJ,GAAI,CAAEG,GAAI,GACV1T,MAAO4J,EACPhK,SAAU,SAACC,GAAC,OAAKkP,EAAQlP,EAAEE,OAAOC,MAAM,KAE5C/C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CACH8K,UAAU,QACVX,QAAQ,WACRuJ,WAAW1W,EAAAA,EAAAA,KAAC2W,GAAAA,EAAe,IAC3BL,GAAI,CAAEM,YAAa,QAAS1W,SAAA,CAC/B,iBAEGF,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,OAAO8K,OAAO,oBAAoBsJ,QAAM,EAAClU,SA9N/C,SAACC,GAC3B,GAAKA,EAAEE,OAAO6K,MAAd,CAGA,IAAMoE,EAAYnP,EAAEE,OAAO6K,MAAM,GACjCqE,EAAaD,GACb,IAAQpF,EAASoF,EAATpF,KACRuG,EAAiBvG,GACjBmG,GAAYD,EALZ,CAMJ,QAuNoB7S,EAAAA,EAAAA,KAACqW,GAAAA,EAAG,CAAAnW,SAAE+S,KACNjT,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8W,GAAAA,EAAU,CAACnM,GAAG,2BAA0BzK,SAAC,aAC1CF,EAAAA,EAAAA,KAAC+W,GAAAA,EAAM,CACHC,QAAQ,2BACRrM,GAAG,qBACH5H,MAAO0Q,EACPrG,MAAM,KACNzK,SApMH,SAACkC,GAClB6O,EAAY7O,EAAM/B,OAAOC,MAC7B,EAkM+C7C,SAEtBmU,GAAQjT,KAAI,SAAA6V,GAAM,OACf9W,EAAAA,EAAAA,MAAC+W,GAAAA,EAAQ,CAAiBnU,MAAOkU,EAAOtM,GAAGzK,SAAA,CACtC+W,EAAOtM,GAAG,MAAIsM,EAAO7U,SADX6U,EAAOtM,GAEX,OAGnB3K,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CACH8K,UAAU,QACVX,QAAQ,WACRuJ,WAAW1W,EAAAA,EAAAA,KAAC2W,GAAAA,EAAe,IAC3BL,GAAI,CAAEM,YAAa,QAAS1W,SAAA,CAC/B,aAEGF,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,OAAO8K,OAAO,OAAOsJ,QAAM,EAAClU,SA5OlC,SAACC,GAC3B,GAAKA,EAAEE,OAAO6K,MAAd,CAIA,IAAMwE,EAAYvP,EAAEE,OAAO6K,MAAM,GACjCyE,EAAaD,GACb,IAAQxF,EAASwF,EAATxF,KACR2G,EAAiB3G,GAEjB,IAAMwK,EAAQ,IAAI7Q,MAClB6Q,EAAMC,QAAU,WAChBD,EAAM9W,IAAMgX,IAAIC,gBAAgBnF,GAEhCgF,EAAMI,iBAAmB,WACrB,IAAMC,EAAoBtN,KAAKuN,MAAMN,EAAMnR,UAC3CkM,EAAiBsF,EACrB,EACA1E,GAAYD,EAfZ,CAgBJ,QA2NoB7S,EAAAA,EAAAA,KAACqW,GAAAA,EAAG,CAAAnW,SAAEmT,KACNrT,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SACCyS,GACGtS,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,YAAYzM,QAxHnD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,iBAAkB6D,GAClCxF,EAAS2B,OAAO,WAAYwH,GAAuBzD,IACnD1F,EAAS2B,OAAO,cAAeiE,GAC/B5F,EAAS2B,OAAO,aAAcuF,GAC9BlH,EAAS2B,OAAO,WAAY,MAEf,KAATvB,EACAwB,MAAM,kCACe,OAAd4D,EACP5D,MAAM,yCACc,KAAbsF,EACPtF,MAAM,mCACe,OAAdgE,EACPhE,MAAM,iCAENrN,IAAAA,IAAU,cAAgB6J,EAAI4B,GACzBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SAEpB4F,IAAQ,GACRiC,KACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,EA0F0FtB,SAAA,EAACF,EAAAA,EAAAA,KAAC0X,GAAAA,EAAU,IAAG,iBAEjFvX,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QApKjD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,iBAAkB6D,GAClCxF,EAAS2B,OAAO,WAAYwH,GAAuBzD,IACnD1F,EAAS2B,OAAO,cAAeiE,GAC/B5F,EAAS2B,OAAO,aAAcuF,GACjB,KAAT9G,EACAwB,MAAM,kCACe,OAAd4D,EACP5D,MAAM,yCACc,KAAbsF,EACPtF,MAAM,mCACe,OAAdgE,EACPhE,MAAM,iCAENrN,IAAAA,KAAW,aAAcyL,GACpBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SAEpB4F,IAAQ,GACRiC,KACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,GAC5CsR,GAAYD,EAChB,GAEZ,EAuIwF3S,SAAA,EAACF,EAAAA,EAAAA,KAAC2X,GAAAA,EAAQ,IAAG,sBAM7F3X,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,iBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,gBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SACLoV,GAAUlU,KAAI,SAACiX,GAAG,OACflY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAChCmY,EAAI/W,cAETtB,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzN,kBAC9B5K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAIvN,WAAYxK,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAE/EvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIhN,YAC9BrL,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzH,kBAC9B5Q,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBC,EAAAA,EAAAA,MAAA,SAAOqY,IAAK7E,EAAU8E,UAAQ,EAAAvY,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UAAQK,IAAKgY,EAAIK,UAAWjW,KAAK,cAAc,sDAIvDtC,EAAAA,EAAAA,MAAC+X,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAA,EACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,UAAUzM,QAAS,kBAAMyT,GAAW,cAAc,EAAMoE,EAAI/W,WAAY+W,EAAIzN,eAAgByN,EAAI3M,WAAW,EAACxL,UAC1HF,EAAAA,EAAAA,KAAC4Y,GAAAA,EAAQ,OAEb5Y,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,YAAYzM,QAAS,kBArIlD,SAACmK,GAClB7J,IAAAA,OAAa,cAAgB6J,GACxB5J,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GACR,CA4H6EqX,CAAaR,EAAI/W,WAAW,EAACpB,UACtEF,EAAAA,EAAAA,KAAC8Y,GAAAA,EAAU,WAvBdT,EAAI/W,WA0BF,aAOvC,E,WClVAR,IAAAA,SAAe6K,QAAUC,uEAEzB,IAAM4B,GAAQ,CACV6D,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXjR,MAAO,IACPkR,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GA4eP,GAzec,WAGV,IAAAxM,GAAoBC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzBuF,EAAEpF,EAAA,GAAEsM,EAAKtM,EAAA,GAChBiB,GAAwBnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA7BmG,EAAIlG,EAAA,GAAEqL,EAAOrL,EAAA,GACpBG,GAAsCvB,EAAAA,EAAAA,UAAS,IAAGwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA3CmS,EAAWlS,EAAA,GAAEmS,EAAcnS,EAAA,GAClCE,GAAkC1B,EAAAA,EAAAA,UAAS,MAAK2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAzCgL,EAAS/K,EAAA,GAAEgL,EAAYhL,EAAA,GAC9BG,GAAoC9B,EAAAA,EAAAA,WAAS,GAAM+B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAA5CkL,EAAUjL,EAAA,GAAEkL,EAAalL,EAAA,GAChCG,GAAoClC,EAAAA,EAAAA,WAAS,GAAM0C,GAAAvC,EAAAA,EAAAA,GAAA+B,EAAA,GAA5CkL,EAAU1K,EAAA,GAAE2K,EAAa3K,EAAA,GAChCwK,GAA8BlN,EAAAA,EAAAA,WAAS,GAAMmN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAAtCM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAG1BG,GAA0CtN,EAAAA,EAAAA,UAAS,IAAGuN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAA/CM,EAAaL,EAAA,GAAEM,EAAgBN,EAAA,GAatCG,GAAgC1N,EAAAA,EAAAA,UAAS,IAAG2N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAArCU,EAAQT,EAAA,GAAEU,EAAWV,EAAA,GAO5BG,GAA8B9N,EAAAA,EAAAA,UAAS,IAAG+N,GAAA5N,EAAAA,EAAAA,GAAA2N,EAAA,GAAnC8F,EAAO7F,EAAA,GAAE8F,EAAU9F,EAAA,GAO1BQ,EAAwBC,EAAAA,UAAe,GAAMC,GAAAtO,EAAAA,EAAAA,GAAAoO,EAAA,GAAtCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAa,SAAC5B,EAAYI,GAAqF,IAA1DxH,EAAYiJ,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GAAIiF,EAAWjF,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GAAIxI,EAAUwI,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GACrGzB,IACAZ,EAF4CqC,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,IAG/CpC,EAAQ7G,GACR+N,EAAeG,GACfzF,EAAYhI,IAEhB4G,EAAcD,GACdK,EAAcD,GACduB,GAAQ,EACZ,EAQAT,GAA8BlO,EAAAA,EAAAA,UAAS,IAAGmO,GAAAhO,EAAAA,EAAAA,GAAA+N,EAAA,GAAnC1J,EAAO2J,EAAA,GAAE1J,GAAU0J,EAAA,IAC1B7N,EAAAA,EAAAA,YAAU,WAAO,IAADpG,GAEG,YAAAA,EAAAA,IAAAgV,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA1T,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEahU,IAAAA,IAAU,YAAY,KAAD,EAAtCE,EAAQ4T,EAAAG,KACdjL,GAAW9I,EAASC,KAAK4I,SAAS+K,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAElCnT,QAAQD,MAAM,8BAA6BoT,EAAAI,IAAS,yBAAAJ,EAAAK,OAAA,GAAAP,EAAA,mBAE3DQ,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAAAsB,IAA8B9O,EAAAA,EAAAA,UAAS,IAAG+O,IAAA5O,EAAAA,EAAAA,GAAA2O,GAAA,GAAnCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,IAC1BzO,EAAAA,EAAAA,YAAU,WAAO,IAADvC,GAEG,YAAAA,EAAAA,IAAAmR,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAe,IAAA,IAAAxU,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEahU,IAAAA,IAAU,aAAa,KAAD,EAAvCE,EAAQyU,EAAAV,KACdT,GAAWtT,EAASC,KAAK0I,UAAW8L,EAAAX,KAAA,gBAAAW,EAAAZ,KAAA,EAAAY,EAAAT,GAAAS,EAAA,SAEpChU,QAAQD,MAAM,8BAA6BiU,EAAAT,IAAS,yBAAAS,EAAAR,OAAA,GAAAO,EAAA,mBAE3DN,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAAAuC,IAAkC/P,EAAAA,EAAAA,UAAS,IAAGgQ,IAAA7P,EAAAA,EAAAA,GAAA4P,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,IAC9B1P,EAAAA,EAAAA,YAAU,WAAO,IAAD0I,GACG,YAAAA,EAAAA,IAAAkG,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAA2E,IAAA,IAAApY,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAxE,KAAA,EAAAwE,EAAAvE,KAAA,EAEahU,IAAAA,IAAU,YAAY,KAAD,EAAtCE,EAAQqY,EAAAtE,KACdQ,GAAavU,EAASC,KAAK4I,SAAUwP,EAAAvE,KAAA,gBAAAuE,EAAAxE,KAAA,EAAAwE,EAAArE,GAAAqE,EAAA,SAErC5X,QAAQD,MAAM,8BAA6B6X,EAAArE,IAAS,yBAAAqE,EAAApE,OAAA,GAAAmE,EAAA,mBAE3DlE,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAAAyG,IAA4CjU,EAAAA,EAAAA,UAAS,IAAGkU,IAAA/T,EAAAA,EAAAA,GAAA8T,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA4CrU,EAAAA,EAAAA,UAAS,IAAGsU,IAAAnU,EAAAA,EAAAA,GAAAkU,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,IACxChU,EAAAA,EAAAA,YAAU,WACc,KAAZsT,IACAnY,IAAAA,IAAU,oBAAsBmY,GAC3BlY,MAAK,SAAAC,GACFyY,GAAkBzY,EAASC,KAAK0O,gBACpC,IACCpO,OAAM,SAAAC,GACHC,QAAQD,MAAM,8BAA+BA,EACjD,IAEJV,IAAAA,IAAU,sBAAwBmY,GAC7BlY,MAAK,SAAAC,GACF6Y,GAAkB7Y,EAASC,KAAK6Y,kBACpC,IACCvY,OAAM,SAAAC,GACHC,QAAQD,MAAM,8BAA+BA,EACjD,IAEhB,GAAG,CAACqR,IAIJ,IAwFMoD,GAAc,WAChBpE,EAAM,IACNC,EAAQ,IACRE,EAAa,MACbkB,EAAiB,IACjBQ,EAAY,GAChB,EAmCA,OACIvT,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAzB,SAAA,EACIC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QAAS,kBAAMyT,EAAW,aAAa,EAAM,EAAC/T,SAAA,EAACF,EAAAA,EAAAA,KAACkW,GAAAA,EAAO,IAAG,gBACtGlW,EAAAA,EAAAA,KAACmW,GAAAA,EAAK,CACFpC,KAAMA,EACNqC,QApNQ,WAChBH,KACAjC,GAAQ,GACRlB,GAAYD,EAChB,EAiNY,kBAAgB,oBAChB,mBAAiB,0BAAyB3S,UAE1CC,EAAAA,EAAAA,MAACkW,GAAAA,EAAG,CAACC,GAAI9I,GAAMtN,SAAA,EACXF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAC5L,GAAG,oBAAoBwC,QAAQ,KAAKW,UAAU,KAAI5N,SACzDmS,KAELrS,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAACoW,GAAAA,EAAU,CAAC5L,GAAG,0BAA0B2L,GAAI,CAAEE,GAAI,GAAItW,SAAA,EACnDF,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACNM,MAAM,mBACND,QAAQ,WACRJ,WAAS,EACTuJ,GAAI,CAAEG,GAAI,GACV1T,MAAO4J,EACPhK,SAAU,SAACC,GAAC,OAAKkP,EAAQlP,EAAEE,OAAOC,MAAM,KAE5C/C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACNM,MAAM,iBACND,QAAQ,WACRJ,WAAS,EACTuJ,GAAI,CAAEG,GAAI,GACV1T,MAAOgW,EACPpW,SAAU,SAACC,GAAC,OAAKoW,EAAepW,EAAEE,OAAOC,MAAM,KAEnD/C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CACH8K,UAAU,QACVX,QAAQ,WACRuJ,WAAW1W,EAAAA,EAAAA,KAAC2W,GAAAA,EAAe,IAC3BL,GAAI,CAAEM,YAAa,QAAS1W,SAAA,CAC/B,iBAEGF,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,OAAO8K,OAAO,oBAAoBsJ,QAAM,EAAClU,SA/R/C,SAACC,GAC3B,GAAKA,EAAEE,OAAO6K,MAAd,CAGA,IAAMoE,EAAYnP,EAAEE,OAAO6K,MAAM,GACjCqE,EAAaD,GACb,IAAQpF,EAASoF,EAATpF,KACRuG,EAAiBvG,GACjBmG,GAAYD,EALZ,CAMJ,QAwRoB7S,EAAAA,EAAAA,KAACqW,GAAAA,EAAG,CAAAnW,SAAE+S,KACNjT,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8W,GAAAA,EAAU,CAACnM,GAAG,2BAA0BzK,SAAC,aAC1CF,EAAAA,EAAAA,KAAC+W,GAAAA,EAAM,CACHC,QAAQ,2BACRrM,GAAG,qBACH5H,MAAO0Q,EACPrG,MAAM,KACNzK,SA5RH,SAACkC,GAClB6O,EAAY7O,EAAM/B,OAAOC,OACzB+P,GAAYD,EAChB,EAyR+C3S,SAEtBmU,GAAQjT,KAAI,SAAA6V,GAAM,OACf9W,EAAAA,EAAAA,MAAC+W,GAAAA,EAAQ,CAAiBnU,MAAOkU,EAAOtM,GAAGzK,SAAA,CACtC+W,EAAOtM,GAAG,MAAIsM,EAAO7U,SADX6U,EAAOtM,GAEX,OAGnB3K,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SACCyS,GACGtS,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,YAAYzM,QAjKnD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,cAAe6K,GAC/BxM,EAAS2B,OAAO,UAAW6D,GAC3BxF,EAAS2B,OAAO,aAAcuF,GAEjB,KAAT9G,EACAwB,MAAM,kCACe,OAAd4D,EACP5D,MAAM,yCACc,KAAbsF,EACPtF,MAAM,mCAENrN,IAAAA,IAAU,YAAc6J,EAAI4B,GACvBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SAEpB4F,GAAQ,GACRiC,KACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,EAuI0FtB,SAAA,EAACF,EAAAA,EAAAA,KAAC0X,GAAAA,EAAU,IAAG,iBAEjFvX,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QAlMjD,WAEf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,cAAe6K,GAC/BxM,EAAS2B,OAAO,UAAW6D,GAC3BxF,EAAS2B,OAAO,aAAcuF,GAEjB,KAAT9G,EACAwB,MAAM,kCACe,OAAd4D,EACP5D,MAAM,yCACc,KAAbsF,EACPtF,MAAM,mCAENrN,IAAAA,KAAW,WAAYyL,GAClBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SAEpB4F,GAAQ,GACRiC,KACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAGZ,EAsKwFtB,SAAA,EAACF,EAAAA,EAAAA,KAAC2X,GAAAA,EAAQ,IAAG,sBAM7F3X,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,oBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SAEFoV,GACIA,GAAUlU,KAAI,SAACiX,GAAG,OACdlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAAEmY,EAAI1Q,YAC3C3H,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIpN,gBAC9BjL,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIc,eAC9BnZ,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UAACF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAIvN,WAAYxK,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aACpGvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzH,kBAC9BzQ,EAAAA,EAAAA,MAAC+X,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAA,EACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,UAAUzM,QAAS,kBAAMyT,EAAW,cAAc,EAAMoE,EAAI1Q,SAAU0Q,EAAIpN,aAAcoN,EAAIc,YAAad,EAAI3M,WAAW,EAACxL,UACvIF,EAAAA,EAAAA,KAAC4Y,GAAAA,EAAQ,OAEb5Y,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,YAAYzM,QAAS,kBAzK1D,SAACmK,GAElB,IAAIoP,EAAWC,OAAO,yEACL,KAAbD,EACA5L,MAAM,mCAENrN,IAAAA,KAAW,qBAAsB,CAAEuL,YAAa0N,IAC3ChZ,MAAK,SAAAC,GACEA,EAASC,KAAKgZ,QACdnZ,IAAAA,OAAa,YAAc6J,GACtB5J,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,IAEJ2M,MAAMnN,EAASC,KAAKmN,QAE5B,IACC7M,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,CAgJqFqX,CAAaR,EAAI1Q,SAAS,EAACzH,UACpEF,EAAAA,EAAAA,KAAC8Y,GAAAA,EAAU,WAbdT,EAAI1Q,SAgBF,KAGf3H,EAAAA,EAAAA,KAACiY,GAAAA,EAAQ,CAAA/X,UACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACgC,QAAS,EAAG/B,MAAM,SAAQjY,SAAC,4CAU9DF,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAC8W,GAAAA,EAAU,CAACnM,GAAG,2BAA0BzK,SAAC,cAC1CF,EAAAA,EAAAA,KAAC+W,GAAAA,EAAM,CACHC,QAAQ,2BACRrM,GAAG,qBACH5H,MAAOkW,EACP7L,MAAM,KACNzK,SA9Vc,SAACkC,GACvBqU,EAAWrU,EAAM/B,OAAOC,OACxB+P,GAAYD,EAChB,EA2VwC3S,SAE3B2J,EAAQzI,KAAI,SAAAmK,GAAK,OACdpL,EAAAA,EAAAA,MAAC+W,GAAAA,EAAQ,CAAsBnU,MAAOwI,EAAM5D,SAASzH,SAAA,CAChDqL,EAAM5D,SAAS,MAAI4D,EAAMN,eADfM,EAAM5D,SAEV,OAGnB3H,EAAAA,EAAAA,KAAA,UAEAG,EAAAA,EAAAA,MAAA,OAAKqN,MAAO,CAAEC,QAAS,QAASvN,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKwN,MAAO,CAAEoJ,YAAa,QAAS1W,UAChCF,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,iBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SAEFsZ,GACIA,GAAepY,KAAI,SAACiX,GAAG,OACnBlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAAEmY,EAAI/W,cAC3CtB,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzN,kBAC9B5K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UAACF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAI8B,mBAAoB7Z,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAC5GvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAItI,oBAC9B/P,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzH,kBAC9B5Q,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,YAAYzM,QAAS,kBAnMtDc,EAmMoF+W,EAAI/W,gBAlMrHR,IAAAA,OAAa,oBAAsBQ,GAC9BP,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,IARwB,IAACF,CAmMmG,EAACpB,UACjFF,EAAAA,EAAAA,KAAC8Y,GAAAA,EAAU,UAVdT,EAAI/W,WAaF,KAGftB,EAAAA,EAAAA,KAACiY,GAAAA,EAAQ,CAAA/X,UACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACgC,QAAS,EAAG/B,MAAM,SAAQjY,SAAC,8CAUlEF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,oBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SAEF0Z,GACIA,GAAexY,KAAI,SAACiX,GAAG,OACnBlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAAEmY,EAAI/W,cAC3CtB,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzN,kBAC9B5K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UAACF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAI8B,mBAAoB7Z,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAC5GvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAItI,oBAC9B/P,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzH,kBAC9B5Q,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,UAAUzM,QAAS,kBApOxD,SAACc,GAE1B,IAAML,EAAO,CACT0G,SAAUsR,GAGE,KAAZA,EACA9K,MAAM,mCAENrN,IAAAA,IAAU,oBAAsBQ,EAAYL,GACvCF,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,CAkN2F4Y,CAAqB/B,EAAI/W,WAAW,EAACpB,UAC5EF,EAAAA,EAAAA,KAACqa,GAAAA,EAAY,UAVhBhC,EAAI/W,WAaF,KAGftB,EAAAA,EAAAA,KAACiY,GAAAA,EAAQ,CAAA/X,UACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACgC,QAAS,EAAG/B,MAAM,SAAQjY,SAAC,kDAalF,E,WCzfAY,IAAAA,SAAe6K,QAAUC,uEAEzB,IAAM4B,GAAQ,CACV6D,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXjR,MAAO,IACPkR,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAwQP,GArQe,WAGX,IAAAxM,GAAoBC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzBuF,EAAEpF,EAAA,GAAEsM,EAAKtM,EAAA,GAChBiB,GAAwBnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA7BmG,EAAIlG,EAAA,GAAEqL,EAAOrL,EAAA,GACpBG,GAAkCvB,EAAAA,EAAAA,UAAS,IAAGwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAvC0T,EAASzT,EAAA,GAAE0T,EAAY1T,EAAA,GAC9BE,GAAwB1B,EAAAA,EAAAA,UAAS,MAAK2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAA/B2G,EAAI1G,EAAA,GAAEwT,EAAOxT,EAAA,GACpBG,GAAoC9B,EAAAA,EAAAA,WAAS,GAAM+B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAA5CsL,EAAUrL,EAAA,GAAEsL,EAAatL,EAAA,GAChCG,GAAoClC,EAAAA,EAAAA,WAAS,GAAM0C,GAAAvC,EAAAA,EAAAA,GAAA+B,EAAA,GAA5C8K,EAAUtK,EAAA,GAAEuK,EAAavK,EAAA,GAChCwK,GAA8BlN,EAAAA,EAAAA,WAAS,GAAMmN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAAtCM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAG1BG,GAAgCtN,EAAAA,EAAAA,UAAS,IAAGuN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAArC8H,EAAQ7H,EAAA,GAAE8H,EAAW9H,EAAA,GAa5BgB,EAAwBC,EAAAA,UAAe,GAAMC,GAAAtO,EAAAA,EAAAA,GAAAoO,EAAA,GAAtCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAa,SAAC5B,EAAYI,GAA6D,IAAxCrQ,EAAM8R,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GAAIjI,EAAgBiI,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GAC7EzB,IACAZ,EAFsCqC,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,IAGzCpC,EAAQ1P,GACRmY,EAAatO,IAEjBqG,EAAcD,GACdK,EAAcD,GACduB,GAAQ,GACRlB,GAAYD,EAChB,EAmBM8H,GAXYC,EAAAA,GAAAA,IAAW,SAACC,GAAK,MAAM,CACrCC,UAAW,CACPrN,QAAS,OACTsN,SAAU,QAEdC,UAAW,CACPC,WAAYJ,EAAMK,QAAQ,GAC1BtE,YAAaiE,EAAMK,QAAQ,GAC3B3a,MAAO,KAEd,GACe4a,GAGhBpI,GAAoC1N,EAAAA,EAAAA,UAAS,IAAG2N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAzCqI,EAAUpI,EAAA,GAAEqI,EAAarI,EAAA,IAChCrN,EAAAA,EAAAA,YAAU,WAAO,IAADpG,GACG,YAAAA,EAAAA,IAAAgV,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA1T,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEahU,IAAAA,IAAU,aAAa,KAAD,EAAvCE,EAAQ4T,EAAAG,KACdsG,EAAcra,EAASC,KAAK0I,UAAWiL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEvCnT,QAAQD,MAAM,8BAA6BoT,EAAAI,IAAS,yBAAAJ,EAAAK,OAAA,GAAAP,EAAA,mBAE3DQ,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAgFMoD,EAAc,WAChBnE,EAAQ,IACRyI,EAAa,IACbC,EAAQ,MACRE,EAAY,GAChB,EAEA,OAEIva,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAzB,SAAA,EACIC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QAAS,kBAAMyT,EAAW,aAAa,EAAM,EAAC/T,SAAA,EAACF,EAAAA,EAAAA,KAACkW,GAAAA,EAAO,IAAG,gBACtGlW,EAAAA,EAAAA,KAACmW,GAAAA,EAAK,CACFpC,KAAMA,EACNqC,QAjIQ,WAChBH,IACAjC,GAAQ,GACRlB,GAAYD,EAChB,EA8HY,kBAAgB,oBAChB,mBAAiB,0BAAyB3S,UAE1CC,EAAAA,EAAAA,MAACkW,GAAAA,EAAG,CAACC,GAAI9I,GAAMtN,SAAA,EACXF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAC5L,GAAG,oBAAoBwC,QAAQ,KAAKW,UAAU,KAAI5N,SACzDmS,KAELrS,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAACoW,GAAAA,EAAU,CAAC5L,GAAG,0BAA0B2L,GAAI,CAAEE,GAAI,GAAItW,SAAA,EACnDF,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACNM,MAAM,SACND,QAAQ,WACRJ,WAAS,EACTuJ,GAAI,CAAEG,GAAI,GACV1T,MAAO4J,EACPhK,SAAU,SAACC,GAAC,OAAKkP,EAAQlP,EAAEE,OAAOC,MAAM,KAE5C/C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACNnC,GAAG,OACHyC,MAAM,sBACN3K,KAAK,OACLrC,UAAWua,EAAQK,UACnB3N,gBAAiB,CACbC,QAAQ,GAEZvK,MAAOuX,EACP3X,SAAU,SAACC,GAAC,OAAK2X,EAAa3X,EAAEE,OAAOC,MAAM,KAEjD/C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CACH8K,UAAU,QACVX,QAAQ,WACRuJ,WAAW1W,EAAAA,EAAAA,KAAC2W,GAAAA,EAAe,IAC3BL,GAAI,CAAEM,YAAa,QAAS1W,SAAA,CAC/B,iBAEGF,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,OAAO8K,OAAO,oBAAoBsJ,QAAM,EAAClU,SAjMpD,SAACC,GACtB,GAAKA,EAAEE,OAAO6K,MAAd,CAGA,IAAMD,EAAO9K,EAAEE,OAAO6K,MAAM,GAC5B6M,EAAQ9M,GACR,IAAQf,EAASe,EAATf,KACR+N,EAAY/N,GACZmG,GAAYD,EALZ,CAMJ,QA0LoB7S,EAAAA,EAAAA,KAACqW,GAAAA,EAAG,CAAAnW,SAAEua,KACNza,EAAAA,EAAAA,KAAA,SACCyS,GACGtS,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,YAAYzM,QAjHnD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,UAAWR,GAC3BnB,EAAS2B,OAAO,mBAAoBoM,GAEvB,KAAT3N,EACAwB,MAAM,kCACU,OAATT,EACPS,MAAM,yCAENrN,IAAAA,IAAU,aAAe6J,EAAI4B,GACxBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SAEpB4F,GAAQ,GACRiC,IACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAGZ,EAyF0FtB,SAAA,EAACF,EAAAA,EAAAA,KAAC0X,GAAAA,EAAU,IAAG,iBAEjFvX,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QA5IjD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,UAAWR,GAC3BnB,EAAS2B,OAAO,mBAAoBoM,GAEvB,KAAT3N,EACAwB,MAAM,kCACU,OAATT,EACPS,MAAM,yCAENrN,IAAAA,KAAW,YAAayL,GACnBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB4F,GAAQ,GACRiC,IACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,EAsHwFtB,SAAA,EAACF,EAAAA,EAAAA,KAAC2X,GAAAA,EAAQ,IAAG,sBAM7F3X,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,yBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SACLkb,EAAWha,KAAI,SAACiX,GAAG,OAChBlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAChCmY,EAAI1N,MAET3K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIjW,UAC9BpC,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAIvN,WAAYxK,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAE/EvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIpM,oBAC9B9L,EAAAA,EAAAA,MAAC+X,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAA,EACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,UAAUzM,QAAS,kBAAMyT,EAAW,cAAc,EAAMoE,EAAI1N,GAAI0N,EAAIjW,OAAQiW,EAAIiD,iBAAiB,EAACpb,UAChHF,EAAAA,EAAAA,KAAC4Y,GAAAA,EAAQ,OAEb5Y,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,YAAYzM,QAAS,kBA3HlD,SAACmK,GAElB,IAAIoP,EAAWC,OAAO,yEACL,KAAbD,EACA5L,MAAM,mCAENrN,IAAAA,KAAW,qBAAsB,CAAEuL,YAAa0N,IAC3ChZ,MAAK,SAAAC,GACEA,EAASC,KAAKgZ,QACdnZ,IAAAA,OAAa,aAAe6J,GACvB5J,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,IAEJ2M,MAAMnN,EAASC,KAAKmN,QAE5B,IACC7M,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,CAkG6EqX,CAAaR,EAAI1N,GAAG,EAACzK,UAC9DF,EAAAA,EAAAA,KAAC8Y,GAAAA,EAAU,WAhBdT,EAAI1N,GAmBF,aAOvC,E,WC7QA7J,IAAAA,SAAe6K,QAAUC,uEAEzB,I,GAAM4B,GAAQ,CACV6D,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXjR,MAAO,IACPkR,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GA2aP,GAvaiB,SAAHrS,GAAqB,IAAhB8P,EAAS9P,EAAT8P,UAGfjK,GAAoBC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzBuF,EAAEpF,EAAA,GAAEsM,EAAKtM,EAAA,GAChBiB,GAAwBnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA7BmG,EAAIlG,EAAA,GAAEqL,EAAOrL,EAAA,GACpBG,GAAwBvB,EAAAA,EAAAA,UAAS,MAAKwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA/B8G,EAAI7G,EAAA,GAAE2T,EAAO3T,EAAA,GACpBE,GAAoC1B,EAAAA,EAAAA,WAAS,GAAM2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAA5C0L,EAAUzL,EAAA,GAAE0L,EAAa1L,EAAA,GAChCG,GAAoC9B,EAAAA,EAAAA,WAAS,GAAM+B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAA5CkL,EAAUjL,EAAA,GAAEkL,EAAalL,EAAA,GAChCG,GAA8BlC,EAAAA,EAAAA,WAAS,GAAM0C,GAAAvC,EAAAA,EAAAA,GAAA+B,EAAA,GAAtCsL,EAAO9K,EAAA,GAAE+K,EAAU/K,EAAA,GACpBlI,GAAeC,EAAAA,EAAAA,UACrBD,EAAaE,QAAUsP,EAGvB,IAAAkD,GAAgClN,EAAAA,EAAAA,UAAS,IAAGmN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAArCkI,EAAQjI,EAAA,GAAEkI,EAAWlI,EAAA,GAY5BG,GAAoCtN,EAAAA,EAAAA,UAAS,IAAGuN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAAzC4I,EAAU3I,EAAA,GAAE4I,EAAa5I,EAAA,GAOhCgB,EAAwBC,EAAAA,UAAe,GAAMC,GAAAtO,EAAAA,EAAAA,GAAAoO,EAAA,GAAtCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAa,SAAC5B,EAAYI,GAAsC,IAAjBrQ,EAAM8R,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,GACtDzB,IACAZ,EAFsCqC,UAAAxJ,OAAA,QAAA/B,IAAAuL,UAAA,GAAAA,UAAA,GAAG,IAGzCpC,EAAQ1P,IAEZkQ,EAAcD,GACdK,EAAcD,GACduB,GAAQ,GACRlB,GAAYD,EAChB,EAQAE,GAAoC1N,EAAAA,EAAAA,UAAS,IAAG2N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAzCqI,EAAUpI,EAAA,GAAEqI,EAAarI,EAAA,IAChCrN,EAAAA,EAAAA,YAAU,WAAO,IAADvC,GACG,YAAAA,EAAAA,IAAAmR,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA1T,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEahU,IAAAA,IAAU,cAAc,KAAD,EAAxCE,EAAQ4T,EAAAG,KACdsG,EAAcra,EAASC,KAAKwa,WAAY7G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAExCnT,QAAQD,MAAM,8BAA6BoT,EAAAI,IAAS,yBAAAJ,EAAAK,OAAA,GAAAP,EAAA,mBAE3DQ,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAAAM,GAAkC9N,EAAAA,EAAAA,UAAS,IAAG+N,GAAA5N,EAAAA,EAAAA,GAAA2N,EAAA,GAAvCsI,EAASrI,EAAA,GAAEsI,EAAYtI,EAAA,IAC9BzN,EAAAA,EAAAA,YAAU,WAAO,IAAD0I,GAEG,YAAAA,EAAAA,IAAAkG,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAAG,SAAAe,IAAA,IAAAxU,EAAA,OAAAwT,EAAAA,GAAAA,KAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEahU,IAAAA,IAAU,cAAc,KAAD,EAAxCE,EAAQyU,EAAAV,KACd2G,EAAa1a,EAASC,KAAKwa,WAAWhG,EAAAX,KAAA,gBAAAW,EAAAZ,KAAA,EAAAY,EAAAT,GAAAS,EAAA,SAEtChU,QAAQD,MAAM,8BAA6BiU,EAAAT,IAAS,yBAAAS,EAAAR,OAAA,GAAAO,EAAA,mBAE3DN,MAAA,KAAAhB,UAAA,CAEDiB,EACJ,GAAG,CAACtC,IAGJ,IAAAU,IAA4ClO,EAAAA,EAAAA,UAAS,IAAGmO,IAAAhO,EAAAA,EAAAA,GAAA+N,GAAA,GAAjDiG,GAAchG,GAAA,GAAEiG,GAAiBjG,GAAA,GACxCW,IAA4C9O,EAAAA,EAAAA,UAAS,IAAG+O,IAAA5O,EAAAA,EAAAA,GAAA2O,GAAA,GAAjDyF,GAAcxF,GAAA,GAAEyF,GAAiBzF,GAAA,IACxCzO,EAAAA,EAAAA,YAAU,WACa,KAAf4V,IACAza,IAAAA,IAAU,uBAAyBya,GAC9Bxa,MAAK,SAAAC,GACFyY,GAAkBzY,EAASC,KAAK0a,oBAChC7I,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,8BAA+BA,EACjD,IACJV,IAAAA,IAAU,0BAA4Bya,GACjCxa,MAAK,SAAAC,GACFS,QAAQma,IAAI5a,EAASC,MACrB4Y,GAAkB7Y,EAASC,KAAK0a,oBAChC7I,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,8BAA+BA,EACjD,IAEZ,GAAG,CAACqR,IAGJ,IAgEMoD,GAAc,WAChBnE,EAAQ,IACR0I,EAAQ,MACRE,EAAY,GAChB,EAkDA,OAEIva,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAzB,SAAA,EACIC,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QAAS,kBAAMyT,EAAW,aAAa,EAAM,EAAC/T,SAAA,EAACF,EAAAA,EAAAA,KAACkW,GAAAA,EAAO,IAAG,gBACtGlW,EAAAA,EAAAA,KAACmW,GAAAA,EAAK,CACFpC,KAAMA,EACNqC,QA3LQ,WAChBH,KACAjC,GAAQ,GACRlB,GAAYD,EAChB,EAwLY,kBAAgB,oBAChB,mBAAiB,0BAAyB3S,UAE1CC,EAAAA,EAAAA,MAACkW,GAAAA,EAAG,CAACC,GAAI9I,GAAMtN,SAAA,EACXF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAC5L,GAAG,oBAAoBwC,QAAQ,KAAKW,UAAU,KAAI5N,SACzDmS,KAELrS,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAACoW,GAAAA,EAAU,CAAC5L,GAAG,0BAA0B2L,GAAI,CAAEE,GAAI,GAAItW,SAAA,EACnDF,EAAAA,EAAAA,KAAC8M,EAAAA,EAAS,CACNM,MAAM,SACND,QAAQ,WACRJ,WAAS,EACTuJ,GAAI,CAAEG,GAAI,GACV1T,MAAO4J,EACPhK,SAAU,SAACC,GAAC,OAAKkP,EAAQlP,EAAEE,OAAOC,MAAM,KAE5C/C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CACH8K,UAAU,QACVX,QAAQ,WACRuJ,WAAW1W,EAAAA,EAAAA,KAAC2W,GAAAA,EAAe,IAC3BL,GAAI,CAAEM,YAAa,QAAS1W,SAAA,CAC/B,iBAEGF,EAAAA,EAAAA,KAAA,SAAOyC,KAAK,OAAO8K,OAAO,oBAAoBsJ,QAAM,EAAClU,SAnPpD,SAACC,GACtB,GAAKA,EAAEE,OAAO6K,MAAd,CAGA,IAAMD,EAAO9K,EAAEE,OAAO6K,MAAM,GAC5B6M,EAAQ9M,GACR,IAAQf,EAASe,EAATf,KACR+N,EAAY/N,EAJZ,CAKJ,QA6OoB3M,EAAAA,EAAAA,KAACqW,GAAAA,EAAG,CAAAnW,SAAEua,KACNza,EAAAA,EAAAA,KAAA,SACCyS,GACGtS,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,YAAYzM,QAnInD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,UAAWR,GAEd,KAATf,EACAwB,MAAM,kCACU,OAATT,EACPS,MAAM,yCAENrN,IAAAA,IAAU,cAAgB6J,EAAI4B,GACzBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SAEpB4F,GAAQ,GACRiC,KACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAGZ,EA4G0FtB,SAAA,EAACF,EAAAA,EAAAA,KAAC0X,GAAAA,EAAU,IAAG,iBAEjFvX,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CAACmK,QAAQ,YAAYF,MAAM,UAAUzM,QA9JjD,WACf,IAAM+L,EAAW,IAAIyB,SACrBzB,EAAS2B,OAAO,SAAUvB,GAC1BJ,EAAS2B,OAAO,UAAWR,GAC3BnB,EAAS2B,OAAO,aAAclF,aAAaC,QAAQ,uBAEtC,KAAT0D,EACAwB,MAAM,kCACU,OAATT,EACPS,MAAM,yCAENrN,IAAAA,KAAW,aAAcyL,GACpBxL,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB4F,GAAQ,GACRiC,KACAnD,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,EAwIwFtB,SAAA,EAACF,EAAAA,EAAAA,KAAC2X,GAAAA,EAAQ,IAAG,sBAM7F3X,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SACLkb,EAAWha,KAAI,SAACiX,GAAG,OAChBlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAChCmY,EAAI1N,MAET3K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIjW,UAC9BpC,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAIvN,WAAYxK,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAE/EpY,EAAAA,EAAAA,MAAC+X,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAA,EACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAACnY,QAAS,kBArFjCqb,EAqFkDxD,EAAI1N,QApFtE7J,IAAAA,IAAU,uBAAyB+a,GAC9B9a,MAAK,SAAAC,GAGF,IAFA,IAAMC,EAAOD,EAASC,KAAK0a,mBACrB/L,EAAgB,GACb1E,EAAI,EAAGA,EAAIjK,EAAKyJ,OAAQQ,IAC7B0E,EAAcjQ,KAAKsB,EAAKiK,GAAG5J,YAE/BzB,EAAaE,QAAQ6P,EACzB,IACCrO,OAAM,SAAAC,GACHC,QAAQD,MAAM,8BAA+BA,EACjD,IAZW,IAACqa,CAqFyD,EAAC3b,UAC1CF,EAAAA,EAAAA,KAAC8b,GAAAA,EAAa,OAElB9b,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,UAAUzM,QAAS,kBAAMyT,EAAW,cAAc,EAAMoE,EAAI1N,GAAI0N,EAAIjW,OAAO,EAAClC,UAC1FF,EAAAA,EAAAA,KAAC4Y,GAAAA,EAAQ,OAEb5Y,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,YAAYzM,QAAS,kBA/IlD,SAACmK,GAElB7J,IAAAA,OAAa,cAAgB6J,GACxB5J,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GACR,CAqI6EqX,CAAaR,EAAI1N,GAAG,EAACzK,UAC9DF,EAAAA,EAAAA,KAAC8Y,GAAAA,EAAU,WAlBdT,EAAI1N,GAqBF,YAM3B3K,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAC8W,GAAAA,EAAU,CAACnM,GAAG,2BAA0BzK,SAAC,eAC1CF,EAAAA,EAAAA,KAAC+W,GAAAA,EAAM,CACHC,QAAQ,2BACRrM,GAAG,qBACH5H,MAAOwY,EACPnO,MAAM,KACNzK,SAnSc,SAACkC,GACvB2W,EAAc3W,EAAM/B,OAAOC,OAC3B+P,GAAYD,EAChB,EAgSwC3S,SAE3Bub,EAAUra,KAAI,SAAAqa,GAAS,OACpBtb,EAAAA,EAAAA,MAAC+W,GAAAA,EAAQ,CAAoBnU,MAAO0Y,EAAU9Q,GAAGzK,SAAA,CAC5Cub,EAAU9Q,GAAG,MAAI8Q,EAAUrZ,SADjBqZ,EAAU9Q,GAEd,OAGnB3K,EAAAA,EAAAA,KAAA,UAEAG,EAAAA,EAAAA,MAAA,OAAKqN,MAAO,CAAEC,QAAS,QAASvN,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKwN,MAAO,CAAEoJ,YAAa,QAAS1W,UAChCF,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,iBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SAEFsZ,GACIA,GAAepY,KAAI,SAACiX,GAAG,OACnBlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAAEmY,EAAI/W,cAC3CtB,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzN,kBAC9B5K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UAACF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAI8B,mBAAoB7Z,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAC5GvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAItI,oBAC9B/P,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzH,kBAC9B5Q,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,YAAYzM,QAAS,kBAlLtDc,EAkLoF+W,EAAI/W,gBAjLrHR,IAAAA,OAAa,uBAAyBQ,GACjCP,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,IARwB,IAACF,CAkLmG,EAACpB,UACjFF,EAAAA,EAAAA,KAAC8Y,GAAAA,EAAU,UAVdT,EAAI/W,WAaF,KAGftB,EAAAA,EAAAA,KAACiY,GAAAA,EAAQ,CAAA/X,UACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACgC,QAAS,EAAG/B,MAAM,SAAQjY,SAAC,8CAUlEF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAC4X,GAAAA,EAAc,CAAC9J,UAAW+J,GAAAA,EAAM3X,UAC7BC,EAAAA,EAAAA,MAAC2X,GAAAA,EAAK,CAACxB,GAAI,CAAEyB,SAAU,KAAO,aAAW,eAAc7X,SAAA,EACnDF,EAAAA,EAAAA,KAACgY,GAAAA,EAAS,CAAA9X,UACNC,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAAA/X,SAAA,EACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAAAhY,SAAC,QACXF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,YACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,oBACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,aACzBF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAC,mBAGjCF,EAAAA,EAAAA,KAACoY,GAAAA,EAAS,CAAAlY,SAEF0Z,GACIA,GAAexY,KAAI,SAACiX,GAAG,OACnBlY,EAAAA,EAAAA,MAAC8X,GAAAA,EAAQ,CAEL3B,GAAI,CAAE,mCAAoC,CAAE5E,OAAQ,IAAMxR,SAAA,EAE1DF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACpK,UAAU,KAAKwK,MAAM,MAAKpY,SAAEmY,EAAI/W,cAC3CtB,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzN,kBAC9B5K,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UAACF,EAAAA,EAAAA,KAAA,OAAKK,IAAKgY,EAAI8B,mBAAoB7Z,IAAI,gBAAakN,MAAO,CAAEjN,MAAO,OAAQgY,OAAQ,aAC5GvY,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAItI,oBAC9B/P,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,SAAEmY,EAAIzH,kBAC9B5Q,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACC,MAAM,QAAOjY,UACpBF,EAAAA,EAAAA,KAAC2Y,GAAAA,EAAU,CAAC1L,MAAM,UAAUzM,QAAS,kBAnNrD,SAACc,GAE7B,IAAML,EAAO,CACT4a,YAAaN,GAGE,KAAfA,EACApN,MAAM,oCAENrN,IAAAA,KAAW,uBAAyBQ,EAAYL,GAC3CF,MAAK,SAAAC,GACFmN,MAAMnN,EAASC,KAAKmN,SACpB0E,GAAYD,EAChB,IACCtR,OAAM,SAAAC,GACHC,QAAQD,MAAM,6BAA8BA,EAChD,GAEZ,CAiM2Fua,CAAwB1D,EAAI/W,WAAW,EAACpB,UAC/EF,EAAAA,EAAAA,KAACqa,GAAAA,EAAY,UAVhBhC,EAAI/W,WAaF,KAGftB,EAAAA,EAAAA,KAACiY,GAAAA,EAAQ,CAAA/X,UACLF,EAAAA,EAAAA,KAACkY,GAAAA,EAAS,CAACgC,QAAS,EAAG/B,MAAM,SAAQjY,SAAC,kDAalF,E,WCvbAY,IAAAA,SAAe6K,QAAUC,uEAEzB,IAqRM3L,GAAY8B,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,smCAwD5B,GA7Ua,WACX,IAAAkD,GAA4BC,EAAAA,EAAAA,UAAS,IAAGE,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjCqE,EAAMlE,EAAA,GAAE9F,EAAS8F,EAAA,GAClBiE,EAAmB,mCACzBhD,GAA8BnB,EAAAA,EAAAA,UAAS,CAAE0G,QAAS,GAAIC,UAAW,GAAII,KAAM,GAAID,OAAQ,GAAIF,iBAAkB,GAAI+P,iBAAkB,IAAIvV,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAhI8H,EAAO7H,EAAA,GAAEqF,EAAUrF,EAAA,GAClB9G,GAASC,EAAAA,EAAAA,MAATD,KACRiH,GAAwCvB,EAAAA,EAAAA,WAAU,GAAEwB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA7CT,EAAYU,EAAA,GAAEoV,EAAepV,EAAA,GACpCE,GAA4C1B,EAAAA,EAAAA,UAAS,IAAG2B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAAjDoJ,EAAcnJ,EAAA,GAAEkV,EAAiBlV,EAAA,GACxCG,GAAkD9B,EAAAA,EAAAA,UAAS,IAAG+B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAvDgV,EAAiB/U,EAAA,GAAEgV,EAAoBhV,EAAA,GAC9CG,GAA8BlC,EAAAA,EAAAA,WAAS,GAAM0C,GAAAvC,EAAAA,EAAAA,GAAA+B,EAAA,GAAtCzD,EAAOiE,EAAA,GAAEsU,EAAUtU,EAAA,GAC1BwK,GAA4BlN,EAAAA,EAAAA,WAAS,GAAMmN,GAAAhN,EAAAA,EAAAA,GAAA+M,EAAA,GAApCxO,EAAMyO,EAAA,GAAE8J,EAAS9J,EAAA,GACxBG,GAAsCtN,EAAAA,EAAAA,WAAS,GAAMuN,GAAApN,EAAAA,EAAAA,GAAAmN,EAAA,GAA9CjP,EAAWkP,EAAA,GAAE1M,EAAc0M,EAAA,GAClCG,GAAoC1N,EAAAA,EAAAA,WAAS,GAAM2N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAA5C3M,EAAU4M,EAAA,GAAE3M,EAAa2M,EAAA,GAgB1B1I,EAAU,SAACC,GAIf,IAHA,IAAiCC,EAA7BC,EAAeF,EAAMG,OAGlBD,EAAe,GAAG,CAGvBD,EAAcN,KAAKC,MAAMD,KAAKnG,SAAW0G,GACzCA,IAEA,IAAAlL,EAC4C,CAC1CgL,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GAAalL,EAAA,GAAEgL,EAAMC,GAAYjL,EAAA,EAE1C,CACA,OAAOgL,CACT,EA4CM+E,EAAoB,SAACiN,GACzBL,EAAkB,GAADpM,QAAAO,EAAAA,EAAAA,GAAKF,IAAcE,EAAAA,EAAAA,GAAMmM,EAA2BrM,EAAgBoM,MACrFH,EAAqB,GAADtM,QAAAO,EAAAA,EAAAA,GAAKF,IAAcE,EAAAA,EAAAA,GAAK/F,EAAQkS,EAA2BrM,EAAgBoM,QACzE,IAAlBpW,GACF8V,EAAgBM,EAAI,IAEtBpO,MAAM,6BACR,EAEA,SAASqO,EAA2BC,EAAQC,GAG1C,OADsBA,EAAOC,QAAO,SAAAC,GAAQ,OAAKH,EAAOrR,SAASwR,EAAS,GAE5E,CAEA,IAAM5Y,EAAO,WACX,IAAsB,IAAlBmC,EAAJ,CAGA,IAAM0J,EAAQsM,EAAkBU,QAAQ1W,GACpC0J,IAAUsM,EAAkBzR,OAAS,GACvCuR,EAAgBE,EAAkB,IAClCjW,EAAepC,KAEfmY,EAAgBE,EAAkBtM,EAAQ,IAC1C3J,GAAe,GAPjB,CASF,EASMmJ,EAAY,SAACkN,GACjBL,EAAkBK,GAEhBH,EADErY,EACmBuG,EAAQ,GAAGwF,OAAOyM,IAElBA,GAEvBrW,GAAe,GACf+V,EAAgBM,EAAI,GACtB,EA0BMja,EAAQ,WACZ0G,aAAayC,QAAQ,sBAAuB,GAC5C9L,EAAK,SACP,EAaA,OAXAgG,EAAAA,EAAAA,YAAU,WACR7E,IAAAA,IAAU,YAAckI,aAAaC,QAAQ,uBAC1ClI,MAAK,SAAAqC,GAAe,IAAZnC,EAAImC,EAAJnC,UACM0H,IAAT1H,GAA+B,OAATA,EACxB6K,EAAW7K,EAAKqN,SAEhBhM,GAEJ,GACJ,GAAG,KAGDtC,EAAAA,EAAAA,KAAC8c,GAAAA,GAAM,CAAA5c,UACLC,EAAAA,EAAAA,MAACF,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BF,EAAAA,EAAAA,KAACV,EAAO,CAACE,QAAS8O,EAAQ0N,iBAAkBvc,UAAWA,EAAWC,UA5CxD,SAAC6c,GACjBL,EAAkBK,GAClBD,GAAU,GACVD,GAAW,GACX,IAAMU,EAAczS,EAAQ,GAAGwF,OAAOyM,IACtCH,EAAqBW,GACrB7W,GAAe,GACf+V,EAAgBc,EAAY,GAC9B,KAqCQ/c,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,OAAM/c,UAChBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACmC,EAAM,CAACsH,OAAQA,EAAQhK,UAAWA,EAAW6C,MAAOA,EAAOC,KAAM+L,EAAQvC,WAC1E/L,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACuJ,EAAI,CAACC,iBAAkBA,EAAkBC,OAAQA,YAIxDzJ,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,QAAO/c,UACjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACkd,GAAS,CAACzT,OAAQA,EAAQnH,MAAOA,EAAO7C,UAAWA,KACpDO,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAAC6L,GAAI,CAACrC,iBAAkBA,EAAkBqC,KAAMyC,EAASxC,WAAYA,YAI3E9L,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,QAAO/c,UACjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACmd,GAAS,CAAC1T,OAAQA,EAAQnH,MAAOA,EAAOC,KAAM+L,EAAQvC,QAASoD,KAAM,cACtEnP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAAC0O,GAAI,CAAClF,iBAAkBA,EAAkBmF,cA1JlC,SAACrN,GACrB,GAAI6O,EAAe/E,SAAS9J,GAC1B6M,MAAM,wDADR,CAIA+N,EAAkB,GAADpM,QAAAO,EAAAA,EAAAA,GAAKF,GAAc,CAAE7O,KACtC,IAAM8b,GAAsB/M,EAAAA,EAAAA,GAAO8L,GACnC,GAAIpY,EAAQ,CAEV,IAAMyG,EAAcN,KAAKC,MAAMD,KAAKnG,UAAYqZ,EAAuB1S,OAAS,IAEhF0S,EAAuBC,OAAO7S,EAAa,EAAGlJ,EAChD,MAEE8b,EAAuBzd,KAAK2B,GAG9B8a,EAAqBgB,IACC,IAAlBjX,GACF8V,EAAgB3a,GAElB6M,MAAM,6BAjBN,CAkBF,EAoIsF/F,KAnFzE,SAAC9G,GACZ4E,GAAe,GACfgW,EAAkB,CAAC5a,IACnB8a,EAAqB,CAAC9a,IACtB2a,EAAgB3a,EAClB,EA8EkG7B,UAAWA,YAIrGO,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,SAAQ/c,UAClBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACmd,GAAS,CAAC1T,OAAQA,EAAQnH,MAAOA,EAAOC,KAAM+L,EAAQvC,QAASoD,KAAM,YACtEnP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACoP,GAAK,CAAC5F,iBAAkBA,EAAkB/J,UAAWA,EAAW4P,UAAWA,EAAWC,kBAAmBA,YAIhHtP,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,UAAS/c,UACnBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACmd,GAAS,CAAC1T,OAAQA,EAAQnH,MAAOA,EAAOC,KAAM+L,EAAQvC,QAASoD,KAAM,cACtEnP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACgQ,GAAM,CAACxG,iBAAkBA,EAAkB/J,UAAWA,YAI7DO,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,WAAU/c,UACpBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACnBF,EAAAA,EAAAA,KAACmd,GAAS,CAAC1T,OAAQA,EAAQnH,MAAOA,EAAOC,KAAM+L,EAAQvC,QAASoD,KAAM,oBACtEnP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACsd,GAAO,CAAC9T,iBAAkBA,EAAkBrD,aAAcA,EAAcgK,eAAgBA,EAAgBC,mBA1J5F,SAAC9O,GAC1B,GAAI6O,EAAe/E,SAAS9J,GAAa,CACvC,GAA8B,IAA1B6O,EAAezF,OAKjB,OAJAxE,GAAe,GACf+V,GAAiB,GACjBC,EAAkB,SAClBE,EAAqB,IAGjBjW,IAAiB7E,GACnB0C,IAEFkY,EAAkB/L,EAAewM,QAAO,SAAC3U,GAAO,OAAKA,IAAY1G,CAAU,KAC3E8a,EAAqBD,EAAkBQ,QAAO,SAAC3U,GAAO,OAAKA,IAAY1G,CAAU,IAErF,CACF,YA8IQtB,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,iBAAgB/c,UAC1BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACud,GAAQ,WAIfvd,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,cAAa/c,UACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACwd,GAAS,WAIhBxd,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,gBAAe/c,UACzBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACyd,GAAU,WAIjBzd,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,cAAa/c,UACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAAC0d,GAAS,CAAClU,iBAAkBA,EAAkBrD,aAAcA,EAAcC,WAAYA,WAI7FpG,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,aAAY/c,UACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAACgR,GAAS,CAACxH,iBAAkBA,EAAkB6F,UAAWA,EAAWC,kBAAmBA,WAI9FtP,EAAAA,EAAAA,KAACgd,EAAAA,GAAK,CAACC,KAAK,YAAW/c,UACrBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UACnBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC7BF,EAAAA,EAAAA,KAAC2d,GAAY,CAACtO,UAAWA,cAKjCrP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC9BF,EAAAA,EAAAA,KAACiG,EAAM,CAACvC,YAAaA,EAAawC,eAAgBA,EAAgBtC,cAhQpD,WACpByY,GAAYvY,EACd,EA8PwGD,aA5PnF,WAIjBuY,EAHGrY,EAGkBoM,EAFA7F,EAAQ6R,IAI/BG,GAAWvY,EACb,EAqPoID,QAASA,EAASC,OAAQA,EAAQoC,aAAcA,EAAcnC,KAAMA,EAAMC,KA/HjM,WACX,IAAsB,IAAlBkC,EAAJ,CAGA,IAAM0J,EAAQsM,EAAkBU,QAAQ1W,GAC1B,IAAV0J,GACFoM,EAAgBE,EAAkBA,EAAkBzR,OAAS,IAC7DxE,EAAepC,KAEfmY,EAAgBE,EAAkBtM,EAAQ,IAC1C3J,GAAe,GAPjB,CASF,EAmH0NiW,kBAAmBA,EAAmB/V,WAAYA,EAAYC,cAAeA,UAKzS,C","sources":["components/views/Home/Sidebar.jsx","components/views/Home/Navbar.jsx","components/views/Home/CurrentTrack.jsx","components/views/Home/PlayerControls.jsx","components/views/Home/Volume.jsx","components/views/Home/TimeController.jsx","components/views/Home/Footer.jsx","components/views/Home/Body.jsx","components/views/Home/User/User.jsx","components/views/Home/User/Navbar.jsx","components/views/Home/Song/Song.jsx","components/views/Home/Song/Navbar.jsx","components/views/Home/Album/Album.jsx","components/views/Home/Artist/Artist.jsx","components/views/Home/Playing/Playing.jsx","components/views/Home/Historico/Historico.jsx","components/views/Home/Favorites/Favorites.jsx","components/views/Song/Song.jsx","components/views/Album/Album.jsx","components/views/Artist/Artist.jsx","components/views/Playlist/Playlist.jsx","components/views/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\nimport React, {useRef} from \"react\";\nimport styled, {useState} from \"styled-components\";\nimport { MdHomeFilled, MdOutlineLibraryMusic } from \"react-icons/md\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { BiSolidBookBookmark, BiSolidRadio, BiSolidPlaylist } from \"react-icons/bi\";\nimport { BsCollectionPlayFill, BsFillDiscFill } from \"react-icons/bs\";\nimport { FiUsers } from \"react-icons/fi\";\nimport { useHistory } from 'react-router'\nexport default function Sidebar({ isAdmin, setSearch, playRadio }) {\n\n  const { push } = useHistory()\n\n  const playAListRef = useRef();\n  playAListRef.current = playRadio;\n\n  const setRadio = () => {\n    axios.get(\"/canciones\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.canciones;\n        const formattedCanciones = []\n        data.map(item => (formattedCanciones.push(item.id_cancion)));\n        playAListRef.current(formattedCanciones);\n      })\n      .catch(error => {\n        console.error(\"Error al obtener datos de canciones:\", error);\n      });\n  }\n\n  const Inicio = () => {\n    push('/app')\n    setSearch(\"\")\n  }\n\n  const irReproduccion = () => {\n    push('/playing')\n  }\n\n  const irCRUDCanciones = () => {\n    push('/CRUDCanciones')\n  }\n\n  const irCRUDAlbums = () => {\n    push('/CRUDAlbums')\n  }\n\n  const irCRUDArtistas = () => {\n    push('/CRUDArtistas')\n  }\n\n  const irHistorico = () => {\n    push('/Historical')\n  }\n\n  const irFavorites = () => {\n    push('/Favorites')\n  }\n\n  const irPlaylist = () => {\n    push('/Playlist')\n  }\n\n  return (\n    <Container>\n      <div className=\"top__links\">\n        <div className=\"logo\">\n          <img\n            src=\"./images/stream.png\"\n            alt=\"Sound Stream\"\n            width=\"80%\"\n          />\n        </div>\n        <ul>\n          <li onClick={Inicio}>\n            <MdHomeFilled />\n            <span>Home</span>\n          </li>\n          <li onClick={irReproduccion}>\n            <BsCollectionPlayFill />\n            <span>Reproduciendo</span>\n          </li>\n          <li onClick={irPlaylist}>\n            <BiSolidPlaylist />\n            <span>Playlists</span>\n          </li>\n          <li onClick={irFavorites}>\n            <AiFillHeart />\n            <span>Favorites</span>\n          </li>\n          <li onClick={irHistorico}>\n            <BiSolidBookBookmark />\n            <span>Historico</span>\n          </li>\n          <li onClick={setRadio}>\n            <BiSolidRadio />\n            <span>Radio</span>\n          </li>\n          {isAdmin ? (\n            <>\n              <li onClick={irCRUDCanciones}>\n                <BsFillDiscFill />\n                <span>CRUD Canciones</span>\n              </li>\n              <li onClick={irCRUDAlbums}>\n                <MdOutlineLibraryMusic />\n                <span>CRUD Album</span>\n              </li>\n              <li onClick={irCRUDArtistas}>\n                <FiUsers />\n                <span>CRUD Artistas</span>\n              </li>\n            </>\n          ) : (\n            <></>\n          )\n          }\n        </ul>\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  background-color: black;\n  color: #b3b3b3;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  .top__links {\n    display: flex;\n    flex-direction: column;\n    .logo {\n      text-align: center;\n      \n    }\n    ul {\n      list-style-type: none;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n      padding: 1rem;\n      li {\n        display: flex;\n        gap: 1rem;\n        cursor: pointer;\n        transition: 0.3s ease-in-out;\n        &:hover {\n          color: white;\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FaSearch } from \"react-icons/fa\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { ImExit } from \"react-icons/im\";\nimport { useHistory } from 'react-router-dom';\nimport { Button} from '@material-ui/core'\n\nexport default function Navbar({ navBackground, setSearch, Salir, Name }) {\n\n  const { push } = useHistory()\n\n  const handleChange = (e) => {\n    setSearch(e)\n  };\n\n  const IrAUsuario = () =>{\n    push('/user')\n  }\n\n  const getFisrtName = (nombre) => {\n    let nombreArr = nombre.split(\" \");\n    return nombreArr[0];\n  }\n\n  return (\n    <Container navBackground={navBackground}>\n      <div className=\"search__bar\">\n        <FaSearch />\n        <input type=\"text\" placeholder=\"Artists, songs, or podcasts\" onChange={(e) => handleChange(e.target.value)}/>\n      </div>\n      <div className=\"avatar\">\n        <Button onClick={() => IrAUsuario()}>\n          <CgProfile />\n          <span>{getFisrtName(Name)}</span>\n        </Button>\n        <Button onClick={() => Salir()}>\n          <ImExit />\n          <span>Salir</span>\n        </Button>\n      </div>\n\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 2rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  transition: 0.3s ease-in-out;\n  background-color: rgba(0, 0, 0, 0.5);\n  background-color: ${({ navBackground }) =>\n    navBackground ? \"rgba(0,0,0,0.7)\" : \"none\"};\n  .search__bar {\n    background-color: white;\n    width: 30%;\n    padding: 0.4rem 1rem;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    input {\n      border: none;\n      height: 2rem;\n      width: 100%;\n      &:focus {\n        outline: none;\n      }\n    }\n  }\n  .avatar {\n    background-color: black;\n    padding: 0.3rem 0.4rem;\n    padding-right: 1rem;\n    border-radius: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    Button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0.5rem;\n      color: white;\n      font-weight: bold;\n      svg {\n        font-size: 1.3rem;\n        background-color: #282828;\n        padding: 0.2rem;\n        border-radius: 1rem;\n        color: #c7c5c5;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function CurrentTrack({ Cancion_Fotografia, Cancion_Nombre, Artista_Nombre }) {\n  return (\n    <Container>\n      <div className=\"track\">\n        <div className=\"track__image\">\n          <img src={Cancion_Fotografia} alt=\"currentPlaying\" />\n        </div>\n        <div className=\"track__info\">\n          <h4 className=\"track__info__name\">{Cancion_Nombre}</h4>\n          <h6 className=\"track__info__artists\">{Artista_Nombre}</h6>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  color:white;\n  .track {\n    display: flex;\n    align-items: center;\n  }\n\n  .track__image {\n    flex: 1;\n    max-width: 100px; /* Ajusta el ancho máximo de la imagen según tus necesidades */\n  }\n\n  .track__image img {\n    width: 100%;\n    height: auto;\n    padding: 1px;\n  }\n\n  .track__info {\n    flex: 2;\n    padding-left: 10px; /* Espacio entre la imagen y la información de la pista */\n  }\n\n  .track__info__name {\n    margin: 0; /* Elimina el margen superior e inferior del nombre de la canción */\n  }\n\n  @media (max-width: 768px) {\n    /* Estilos para pantallas más pequeñas (responsive) */\n    .track {\n      flex-direction: column; /* Cambia el diseño a una columna en pantallas más pequeñas */\n    }\n    .track__image {\n      max-width: 100%; /* La imagen ocupa todo el ancho en pantallas más pequeñas */\n      margin-bottom: 10px; /* Espacio entre la imagen y la información de la pista */\n    }\n  }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BsFillPlayCircleFill,\n  BsFillPauseCircleFill,\n} from \"react-icons/bs\";\nimport { CgPlayTrackNext, CgPlayTrackPrev } from \"react-icons/cg\";\nimport { TbArrowsRight, TbRepeatOff, TbArrowsShuffle2, TbRepeat } from \"react-icons/tb\";\n\nexport default function PlayerControls({playerState, changeState, changeCiclico, changeRandom, ciclico, random, Next, Prev}) {\n\n  return (\n    <Container>\n      <div className=\"shuffle\">\n        {random ? (\n          <TbArrowsShuffle2 onClick={changeRandom} />\n        ) : (\n          <TbArrowsRight onClick={changeRandom} />\n        )}\n      </div>\n      <div className=\"previous\">\n        <CgPlayTrackPrev onClick={Prev} />\n      </div>\n      <div className=\"state\">\n        {playerState ? (\n          <BsFillPauseCircleFill onClick={changeState} />\n        ) : (\n          <BsFillPlayCircleFill onClick={changeState} />\n        )}\n      </div>\n      <div className=\"next\">\n        <CgPlayTrackNext onClick={Next} />\n      </div>\n      <div className=\"repeat\">\n        {ciclico ? (\n          <TbRepeat onClick={changeCiclico} />\n        ) : (\n          <TbRepeatOff onClick={changeCiclico} />\n        )}\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 2rem;\n  svg {\n    color: #b3b3b3;\n    transition: 0.2s ease-in-out;\n    &:hover {\n      color: white;\n    }\n  }\n  .state {\n    svg {\n      color: white;\n    }\n  }\n  .previous,\n  .next,\n  .state {\n    font-size: 2rem;\n  }\n  .shuffle,\n  .repeat {\n    font-size: 1rem;\n  }\n\n  }\n`;","import axios from \"axios\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Volume(promps) {\n  \n  return (\n    <Container>\n      <input type=\"range\" onMouseUp={(event) => promps.CambiarVolumen(event.target.value)} min={0} max={100} defaultValue={100}/>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-content: center;\n  input {\n    width: 10rem;\n    border-radius: 2rem;\n    height: 0.5rem;\n    -webkit-appearance: none;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function TimeController(props) {\n  const [sliderValue, setSliderValue] = useState(props.currentTime);\n\n  useEffect(() => {\n    // Update the slider value when currentTime changes\n    setSliderValue(props.currentTime);\n  }, [props.currentTime]);\n\n  const handleSliderChange = (event) => {\n    const newTime = parseFloat(event.target.value);\n    setSliderValue(newTime);\n    props.CambiarTiempo(newTime);\n  };\n\n  return (\n    <Container>\n      <input\n        type=\"range\"\n        onMouseUp={handleSliderChange}\n        min={0}\n        max={props.duration}\n        value={sliderValue}\n        onChange={handleSliderChange}\n      />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  input {\n    width: 100%;\n    border-radius: 2rem;\n    height: 0.5rem;\n    -webkit-appearance: none;\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 14px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: 1px 1px 1px #50555C;\n    background: #50555C;\n    border-radius: 14px;\n    border: 0px solid #000000;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    box-shadow: 0px 0px 0px #000000;\n    border: 0px solid #000000;\n    height: 20px;\n    width: 10px;\n    border-radius: 12px;\n    background: #FFFFFF;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -3px;\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    background: #50555C;\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    height: 14px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: 1px 1px 1px #50555C;\n    background: #50555C;\n    border-radius: 14px;\n    border: 0px solid #000000;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: 0px 0px 0px #000000;\n    border: 0px solid #000000;\n    height: 20px;\n    width: 40px;\n    border-radius: 12px;\n    background: #FFFFFF;\n    cursor: pointer;\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    height: 14px;\n    cursor: pointer;\n    animate: 0.2s;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n  input[type=range]::-ms-fill-lower {\n    background: #50555C;\n    border: 0px solid #000000;\n    border-radius: 28px;\n    box-shadow: 1px 1px 1px #50555C;\n  }\n  input[type=range]::-ms-fill-upper {\n    background: #50555C;\n    border: 0px solid #000000;\n    border-radius: 28px;\n    box-shadow: 1px 1px 1px #50555C;\n  }\n  input[type=range]::-ms-thumb {\n    margin-top: 1px;\n    box-shadow: 0px 0px 0px #000000;\n    border: 0px solid #000000;\n    height: 20px;\n    width: 40px;\n    border-radius: 12px;\n    background: #FFFFFF;\n    cursor: pointer;\n  }\n  input[type=range]:focus::-ms-fill-lower {\n    background: #50555C;\n  }\n  input[type=range]:focus::-ms-fill-upper {\n    background: #50555C;\n  }\n`;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport CurrentTrack from \"./CurrentTrack\";\nimport PlayerControls from \"./PlayerControls\";\nimport Volume from \"./Volume\";\nimport TimeController from \"./TimeController\";\n\nexport default function Footer({ playerState, setPlayerState, changeCiclico, changeRandom, ciclico, random, reproduccion, Next, Prev, changeSong, setChangeSong }) {\n  const [song, setSong] = useState(new Audio());\n  const [time, setTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [changeTime, setChangeTime] = useState(-1);\n  const [reproduccionLocal, setReproduccionLocal] = useState(-1);\n  const [cancion, setCancion] = useState({\n    Cancion_Nombre: 'Cancion',\n    Cancion_Archivo_MP3: '',\n    Cancion_Duracion: 0,\n    Cancion_Fotografia: '/images/music.jpg',\n    Cancion_ID: -1,\n    id_album: -1,\n    Artista_ID: -1,\n    Artista_Nombre: 'Artista',\n    Album_ID: -1,\n    Album_Nombre: ''\n  });\n\n  const nextRef = useRef();\n  nextRef.current = Next;\n\n  const playerStateRef = useRef(playerState);\n  playerStateRef.current = playerState;\n\n  const CambiarVolumen = (e) => {\n    if (song != null && song.src !== \"\" && song) {\n      song.volume = e / 100;\n    }\n  };\n\n  const CambiarTiempo = (e) => {\n    if (song != null && song.src !== \"\") {\n      setChangeTime(e);\n    }\n  };\n\n  useEffect(() => {\n    if (song != null && song.src !== \"\" && song) {\n      if (playerState) {\n        song.play();\n      } else {\n        song.pause();\n      }\n    }\n  }, [playerState, song]);\n\n  useEffect(() => {\n    if (song != null && song.src !== \"\" && changeTime !== -1) {\n      if (song) {\n        song.currentTime = changeTime;\n        setTime(changeTime);\n      }\n      setChangeTime(-1);\n    }\n  }, [changeTime, song]);\n\n  const clearAudioEventListeners = () => {\n    song.removeEventListener(\"canplaythrough\", handleCanPlayThrough);\n    song.removeEventListener(\"ended\", handleAudioEnded);\n    song.removeEventListener(\"timeupdate\", handleTimeUpdate);\n  };\n\n  const handleCanPlayThrough = () => {\n    if (playerStateRef.current) {\n      try {\n        // Intenta reproducir el audio\n        song.play();\n      } catch (error) {\n        // Maneja la excepción sin hacer nada (puedes agregar tu lógica aquí si es necesario)\n      }\n    }\n  };\n\n  const handleAudioEnded = () => {\n    song.currentTime = 0;\n    song.pause();\n    nextRef.current();\n  };\n\n  const handleTimeUpdate = () => {\n    setTime(song.currentTime);\n    setDuration(song.duration);\n  };\n\n  useEffect(() => {\n    if (reproduccionLocal !== reproduccion && reproduccion !== -1) {\n      axios.get('/cancion/' + reproduccion)\n        .then(({ data }) => {\n          if (data !== undefined && data !== null) {\n            setCancion(data.cancion);\n            const AudioSrc = data.cancion.Cancion_Archivo_MP3;\n            if (AudioSrc !== \"\") {\n              if (song.readyState >= 2) {\n                song.pause();\n                song.currentTime = 0;\n              }\n              clearAudioEventListeners();\n              song.src = AudioSrc;\n              song.addEventListener('canplaythrough', handleCanPlayThrough);\n              song.addEventListener(\"ended\", handleAudioEnded);\n              song.addEventListener(\"timeupdate\", handleTimeUpdate);\n              axios\n                .post('/historicos', {\n                  id_usuario: localStorage.getItem('SoundStream_UserID'),\n                  id_cancion: data.cancion.Cancion_ID,\n                })\n                .then(() => {\n                  setChangeSong(!changeSong)\n                });\n            }\n            setReproduccionLocal(reproduccion);\n          }\n        });\n    } else if (reproduccion === -1) {\n      song.pause();\n      setReproduccionLocal(reproduccion);\n      setCancion({\n        Cancion_Nombre: 'Cancion',\n        Cancion_Archivo_MP3: '',\n        Cancion_Duracion: 0,\n        Cancion_Fotografia: '/images/music.jpg',\n        Cancion_ID: -1,\n        id_album: -1,\n        Artista_ID: -1,\n        Artista_Nombre: 'Artista',\n        Album_ID: -1,\n        Album_Nombre: ''\n      })\n    }\n    return () => {\n      clearAudioEventListeners();\n    };\n  }, [reproduccion]);\n\n  const changeState = () => {\n    if (reproduccionLocal !== -1 && song != null && song.src !== \"\") {\n      setPlayerState(!playerState);\n    }\n  };\n\n  return (\n    <MaxConteiner>\n      <Container2>\n        <TimeController CambiarTiempo={CambiarTiempo} currentTime={time} duration={duration} />\n      </Container2>\n      <Container>\n        <CurrentTrack Cancion_Nombre={cancion.Cancion_Nombre} Cancion_Fotografia={cancion.Cancion_Fotografia} Artista_Nombre={cancion.Artista_Nombre} />\n        <PlayerControls playerState={playerState} changeState={changeState} changeCiclico={changeCiclico} changeRandom={changeRandom} ciclico={ciclico} random={random} Next={Next} Prev={Prev} />\n        <Volume CambiarVolumen={CambiarVolumen} />\n      </Container>\n    </MaxConteiner>\n  );\n}\n\nconst MaxConteiner = styled.div`\n  background-color: #181818;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  background-color: #181818;\n  border-top: 1px solid #282828;\n  display: grid;\n  grid-template-columns: 2fr 2fr 2fr;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n  height: 100%;\n`;\n\nconst Container2 = styled.div`\n  width: 100%;\n  background-color: #181818;\n  border-top: 1px solid #282828;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n`;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from 'react-router'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\n\nexport default function Body({ headerBackground, search }) {\n\n  const { push } = useHistory()\n\n  const [canciones, setCanciones] = useState([]);\n  const [artistas, setArtistas] = useState([]);\n  const [albumes, setAlbumes] = useState([]);\n\n  let msToMinutesAndSeconds = (ms) => {\n    let minutes = Math.floor(ms / 60000);\n    let seconds = ((ms % 60000) / 1000).toFixed(0);\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n  }\n\n  const shuffle = (array) => {\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle.\n    while (currentIndex > 0) {\n  \n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n\n  useEffect(() => {\n    // Realiza la consulta a la API para obtener los datos de canciones y artistas\n    if (search===\"\"){\n      axios.get(\"/canciones\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.canciones; \n        const formattedCanciones = data.map(item => ({\n          id: item.id_cancion,\n          nombre: item.nombre_cancion,\n          fotografia: (item.url_imagen)\n        }));\n        setCanciones(shuffle(formattedCanciones));\n      })\n      .catch(error => {\n        console.error(\"Error al obtener datos de canciones:\", error);\n      });\n      axios.get(\"/artistas\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.artistas;\n        const formattedArtistas = data.map(item => ({\n          id: item.id,\n          nombre: item.nombre,\n          fotografia: (item.url_imagen)\n        }));\n        setArtistas(shuffle(formattedArtistas));\n      })\n      .catch(error => {\n        console.error(\"Error al obtener datos de canciones:\", error);\n      });\n      axios.get(\"/albumes\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.albumes;\n        const formattedAlbumes = data.map(item => ({\n          id: item.id_album,\n          nombre: item.nombre_album,\n          fotografia: (item.url_imagen)\n        }));\n        setAlbumes(shuffle(formattedAlbumes));\n      })\n      .catch(error => {\n        console.error(\"Error al obtener datos de canciones:\", error);\n      });\n    }else{\n      axios.get(\"/canciones\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.canciones;\n        const formattedCanciones = []\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].nombre_cancion.toLowerCase().includes(search.toLowerCase())){\n            formattedCanciones.push({\n              id: data[i].id_cancion,\n              nombre: data[i].nombre_cancion,\n              fotografia: (data[i].url_imagen),\n              duracion: msToMinutesAndSeconds(data[i].duracion),\n              artista: data[i].nombre,\n              album: data[i].nombre_album\n            })\n          }\n        }\n        setCanciones(formattedCanciones);\n      })\n      .catch(error => {\n        console.error(\"Error al obtener datos de canciones:\", error);\n      });\n      axios.get(\"/artistas\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.artistas;\n        const formattedArtistas = []\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].nombre.toLowerCase().includes(search.toLowerCase())){\n            formattedArtistas.push({\n              id: data[i].id,\n              nombre: data[i].nombre,\n              fotografia: (data[i].url_imagen)\n            })\n          }\n        }\n        setArtistas(formattedArtistas);\n      })\n      .catch(error => {\n        console.error(\"Error al obtener datos de canciones:\", error);\n      });\n      axios.get(\"/albumes\")\n      .then(response => {\n        // Extrae los datos relevantes de la respuesta\n        const data = response.data.albumes;\n        const formattedAlbumes = []\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].nombre_album.toLowerCase().includes(search.toLowerCase())){\n            formattedAlbumes.push({\n              id: data[i].id_album,\n              nombre: data[i].nombre_album,\n              fotografia: (data[i].url_imagen)\n            })\n          }\n        }\n        setAlbumes(formattedAlbumes);\n      })\n    }\n  }, [search]); \n\n  const VerCancion = (id_cancion) => {\n    localStorage.setItem('SoundStream_SongID', id_cancion)\n    push('/song')\n  }\n\n  const VerAlbum = (id_album) => {\n    localStorage.setItem('SoundStream_AlbumID', id_album)\n    push('/album')\n  }\n\n  const VerArtista = (id_artista) => {\n    localStorage.setItem('SoundStream_ArtistID', id_artista)\n    push('/artist')\n  }\n\n  return (\n    <Container headerBackground={headerBackground}>\n      <h1>Canciones</h1>\n      <div class=\"menu\">\n        {canciones.map(cancion => (\n          <div className=\"menu-item\" key={cancion.id} onClick={() => VerCancion(cancion.id)}>\n            <img src={cancion.fotografia} alt={\"Imagen \" + cancion.id} />\n            <p>{cancion.nombre}</p>\n          </div>\n        ))}\n      </div>\n      <h1>Albums</h1>\n      <div class=\"menu\">\n        {albumes.map(album => (\n          <div className=\"menu-item\" key={album.id} onClick={() => VerAlbum(album.id)}>\n            <img src={album.fotografia} alt={\"Imagen \" + album.id} />\n            <p>{album.nombre}</p>\n          </div>\n        ))}\n      </div>\n      <h1>Artistas</h1>\n      <div class=\"menu\">\n        {artistas.map(artista => (\n          <div className=\"menu-item\" key={artista.id} onClick={() => VerArtista(artista.id)}>\n            <img src={artista.fotografia} alt={\"Imagen \" + artista.id} />\n            <p>{artista.nombre}</p>\n          </div>\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  h1{\n    margin: 0 1rem;\n    -webkit-text-stroke: 2px black;\n    color: white;\n  }\n  .menu {\n    display: flex;\n    align-items: stretch;\n    border-radius: 5px;\n    padding: 8px;\n    width: 98%;\n    margin: 0 auto;\n    background-color: rgba(0, 0, 0, 0.2);\n    overflow-x: auto;\n    white-space: nowrap;\n    overflow-y: hidden;\n  }\n  .menu-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 5px;\n    margin: 0px 10px 0 0px;\n    min-width: 20vh; /* Tamaño mínimo */\n    max-width: 20vh; /* Tamaño máximo */\n    flex: 1; /* Permite la expansión en altura */\n    transition: transform 0.2s, filter 0.2s;\n  }\n  .menu-item:hover {\n    transform: scale(1.05); /* Aumenta el tamaño al pasar el mouse */\n    border: 3px solid white;\n  }\n  .menu-item img {\n    margin: 5px;\n    max-width: 90%;\n    max-height: 90%;\n    object-fit: cover;\n  }\n  .menu-item p {\n    margin: 2px;\n    color: white;\n    white-space: normal; /* Permite el salto de línea */\n    max-lines: 2;\n  }\n\n`;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button } from '@material-ui/core'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function User({ headerBackground, User, setUsuario }) {\n\n  const [formData, setFormData] = useState({\n    nombres: User.nombres,\n    apellidos: User.apellidos,\n    fecha_nacimiento: User.fecha_nacimiento.substring(0, 10),\n    correo: User.correo,\n    foto: User.foto,\n    contrasenia: '',\n    nueva_contrasenia: ''\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setFormData({\n      ...formData,\n      archivo: file\n    });\n  };\n\n  const onSubmit = () => {\n    if (formData.contrasenia !== \"\") {\n      const formDataToSend = new FormData();\n      for (const key in formData) {\n        formDataToSend.append(key, formData[key]);\n      }\n      axios\n        .put('/usuarios/' + localStorage.getItem('SoundStream_UserID') + '/' + formData.contrasenia, formDataToSend)\n        .then(({ data }) => {\n          alert(data.mensaje);\n          axios.get('/usuario/' + localStorage.getItem('SoundStream_UserID'))\n            .then(({ data }) => {\n              if (data !== undefined && data !== null) {\n                setUsuario(data.usuario)\n              }\n            })\n        })\n        .catch(({ response }) => {\n          alert(response.data.mensaje);\n        });\n    } else {\n      alert(\"Por favor introduzca su contraseña\")\n    }\n\n  };\n\n  return (\n    <Container headerBackground={headerBackground}>\n      <form className=\"form\">\n        <img src={`https://multimediasemi1-g2.s3.amazonaws.com/` + User.foto} alt={\"imagen de: \" + formData.nombres}></img>\n        <TextField\n          fullWidth\n          autoFocus\n          color='primary'\n          margin='normal'\n          variant='outlined'\n          label='Nombres'\n          name='nombres'\n          value={formData.nombres}\n          onChange={handleInputChange}\n        />\n        <TextField\n          fullWidth\n          autoFocus\n          color='primary'\n          margin='normal'\n          variant='outlined'\n          label='Apellidos'\n          name='apellidos'\n          value={formData.apellidos}\n          onChange={handleInputChange}\n        />\n        <TextField\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          type='date'\n          color='primary'\n          margin='normal'\n          variant='outlined'\n          label='Fecha de nacimiento'\n          name='fecha_nacimiento'\n          value={formData.fecha_nacimiento}\n          onChange={handleInputChange}\n        />\n        <TextField\n          fullWidth\n          type='email'\n          color='primary'\n          margin='normal'\n          variant='outlined'\n          label='Correo'\n          name='correo'\n          value={formData.correo}\n          onChange={handleInputChange}\n        />\n        <input\n          type='file'\n          accept='image/*'\n          style={{ display: 'none' }}\n          onChange={handleFileChange}\n          id='foto-input'\n          name='archivo'\n        />\n        <label htmlFor='foto-input'>\n          <Button\n            fullWidth\n            variant='outlined'\n            color='primary'\n            component='span'\n          >\n            Subir Foto\n          </Button>\n        </label>\n        <TextField\n          fullWidth\n          type='password'\n          color='primary'\n          margin='normal'\n          variant='outlined'\n          label='Contraseña'\n          name='contrasenia'\n          value={formData.contrasenia}\n          onChange={handleInputChange}\n        />\n        <TextField\n          fullWidth\n          type='password'\n          color='primary'\n          margin='normal'\n          variant='outlined'\n          label='Nueva contraseña (opcional)'\n          name='nueva_contrasenia'\n          value={formData.nueva_contrasenia}\n          onChange={handleInputChange}\n        />\n        <Button\n          fullWidth\n          variant='contained'\n          color='secondary'\n          onClick={onSubmit}\n        >\n          Actualizar\n        </Button>\n      </form>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n\n  img {\n    margin: 5px;\n    max-width: 15%;\n    max-height: 15%;\n    object-fit: cover;\n  }\n  \n  form {\n    width: 90%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    padding: 20px; /* Espaciado interno */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n    display: flex; /* Usar flexbox */\n    flex-direction: column; /* Apilar elementos verticalmente */\n    justify-content: center; /* Centrar verticalmente */\n    align-items: center; /* Centrar horizontalmente */\n    .MuiInputLabel-root {\n      color: white; /* Cambia el color del texto de las etiquetas a blanco */\n    }\n\n    .MuiInputBase-input {\n      color: white; /* Cambia el color del texto de los TextField a blanco */\n    }\n    .MuiButton-label {\n      color: white !important; /* Cambia el color del texto del botón a blanco */\n    }\n\n    .MuiButton-outlined.MuiButton-outlinedPrimary {\n      border-color: white !important; /* Cambia el color del borde a blanco */\n    }\n  }\n  \n\n  button {\n    color: white;\n    margin-top: 16px; /* Ajusta el margen superior del botón */\n  }\n`;\n\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { MdKeyboardReturn } from \"react-icons/md\";\nimport { ImExit } from \"react-icons/im\";\nimport { useHistory } from 'react-router'\nimport { Button } from '@material-ui/core'\n\nexport default function NavbarUsr({ navBackground, Salir, setSearch }) {\n\n  const { push } = useHistory()\n\n  const Regresar = () => {\n    push('/app')\n    setSearch('')\n  }\n\n  return (\n    <Container navBackground={navBackground}>\n      <h1>Perfil</h1>\n\n      <div className=\"avatar\">\n        <Button onClick={() => Regresar()}>\n          <MdKeyboardReturn />\n          <span>Regresar</span>\n        </Button>\n        <Button onClick={() => Salir()}>\n          <ImExit />\n          <span>Salir</span>\n        </Button>\n      </div>\n\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  padding: 0rem 2rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  transition: 0.3s ease-in-out;\n  background-color: rgba(0, 0, 0, 0.5);\n  background-color: ${({ navBackground }) =>\n    navBackground ? \"rgba(0,0,0,0.7)\" : \"none\"};\n  .info {\n    font-color: white;\n  }\n  .avatar {\n    background-color: black;\n    padding: 0.3rem 0.4rem;\n    padding-right: 1rem;\n    border-radius: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    Button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0.5rem;\n      color: white;\n      font-weight: bold;\n      svg {\n        font-size: 1.3rem;\n        background-color: #282828;\n        padding: 0.2rem;\n        border-radius: 1rem;\n        color: #c7c5c5;\n      }\n    }\n  }\n`;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from 'react-router'\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function Song({ headerBackground, addToPlayback, play, setSearch }) {\n\n  const playRef = useRef();\n  playRef.current = play;\n\n  const { push } = useHistory()\n\n  const [cancion, setCancion] = useState({\n    Cancion_Nombre: '',\n    Cancion_Archivo_MP3: '',\n    Cancion_Duracion: 0,\n    Cancion_Fotografia: '',\n    Cancion_ID: -1,\n    id_album: -1,\n    Artista_ID: -1,\n    Artista_Nombre: '',\n    Album_ID: -1,\n    Album_Nombre: ''\n  })\n  const [favorito, setFavorito] = useState(false)\n\n  useEffect(() => {\n    axios.get('/cancion/' + localStorage.getItem('SoundStream_SongID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setCancion(data.cancion)\n        } else {\n          localStorage.setItem('SoundStream_SongID', -1)\n          IrAUsuario();\n        }\n      })\n  }, []);\n\n  useEffect(() => {\n    axios.get('/favorito-usuario/' + localStorage.getItem('SoundStream_UserID') + '/' + localStorage.getItem('SoundStream_SongID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setFavorito(data.es_favorita)\n        } else {\n          localStorage.setItem('SoundStream_SongID', -1)\n          IrAUsuario();\n        }\n      })\n  }, []);\n\n  const IrAUsuario = () => {\n    push('/app')\n    setSearch('')\n  }\n\n  const VerArtista = () => {\n    localStorage.setItem('SoundStream_ArtistID', cancion.Artista_ID)\n    push('/artist')\n  }\n\n  const VerAlbum = () => {\n    localStorage.setItem('SoundStream_AlbumID', cancion.Album_ID)\n    push('/album')\n  }\n\n  const add = () => {\n    addToPlayback(cancion.Cancion_ID)\n  }\n\n  const addFav = () => {\n    axios\n      .post('/favoritos', {\n        id_cancion: localStorage.getItem('SoundStream_SongID'),\n        id_usuario: localStorage.getItem('SoundStream_UserID'),\n      })\n      .then(() => {\n        setFavorito(true)\n      });\n  }\n\n  const removeFav = () => {\n    axios\n      .delete('/favoritos/' + localStorage.getItem('SoundStream_SongID') + '/' + localStorage.getItem('SoundStream_UserID'))\n      .then(() => {\n        setFavorito(false)\n      });\n  }\n\n  return (\n    <Container headerBackground={headerBackground}>\n      <div className=\"form\">\n        <div className=\"sides\">\n          <div className=\"sides1\">\n            <img src={cancion.Cancion_Fotografia} alt={\"imagen de: \" + cancion.Cancion_Nombre}></img>\n          </div>\n          <div className=\"sides2\">\n            <h1><u>Titulo: {cancion.Cancion_Nombre}</u></h1>\n            <h2 onClick={VerArtista}>Artista: {cancion.Artista_Nombre}</h2>\n            <h2 onClick={VerAlbum}>Album: {cancion.Album_Nombre}</h2>\n            <h2>Duracion: {cancion.Cancion_Duracion}</h2>\n          </div>\n        </div>\n        <div className=\"sides\">\n          <div className=\"buttons\" onClick={() => { playRef.current(cancion.Cancion_ID) }}>\n            Reproducir\n          </div>\n          <div className=\"buttons\" onClick={add}>\n            Agregar a reproduccion actual\n          </div>\n          {favorito ? (\n            <div className=\"buttons\" onClick={removeFav}>\n              <AiFillHeart/>\n              Quitar de favoritos\n            </div>\n          ) : (\n            <div className=\"buttons\" onClick={addFav}>\n              <AiOutlineHeart/>\n              Agregar a favoritos\n            </div>\n          )\n          }\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n  color: white;\n  .form{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n  }\n  .sides {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    align-items: center; /* Centra verticalmente los elementos dentro de sides */\n  }\n  .sides1 {\n    flex: 20%; /* Ocupa el 15% del ancho */\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.1)\n  }\n  .sides2 {\n    flex: 80%; /* Ocupa el 85% del ancho */\n    padding: 10px;\n  }\n  .buttons{\n    flex: 33%; /* Ocupa el 33% del ancho */\n    background-color: black;\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 3px solid black;\n  }\n  .buttons:hover {\n    border: 3px solid white;\n  }\n  img {\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { MdKeyboardReturn } from \"react-icons/md\";\nimport { ImExit } from \"react-icons/im\";\nimport { useHistory } from 'react-router'\nimport { Button} from '@material-ui/core'\nimport { CgProfile } from \"react-icons/cg\";\n\nexport default function NavbarGen({ navBackground, Salir, Name, Type }) {\n\n  const { push } = useHistory()\n\n  const IrAUsuario = () =>{\n    push('/user')\n  }\n\n  const getFisrtName = (nombre) => {\n    let nombreArr = nombre.split(\" \");\n    return nombreArr[0];\n  }\n\n  return (\n    <Container navBackground={navBackground}>\n      <h1>{Type}</h1>\n      <div className=\"avatar\">\n        <Button onClick={() => IrAUsuario()}>\n          <CgProfile />\n          <span>{getFisrtName(Name)}</span>\n        </Button>\n        <Button onClick={() => Salir()}>\n          <ImExit />\n          <span>Salir</span>\n        </Button>\n      </div>\n\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  padding: 0rem 2rem;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  transition: 0.3s ease-in-out;\n  background-color: rgba(0, 0, 0, 0.5);\n  background-color: ${({ navBackground }) =>\n    navBackground ? \"rgba(0,0,0,0.7)\" : \"none\"};\n  .info {\n    font-color: white;\n  }\n  .avatar {\n    background-color: black;\n    padding: 0.3rem 0.4rem;\n    padding-right: 1rem;\n    border-radius: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    Button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0.5rem;\n      color: white;\n      font-weight: bold;\n      svg {\n        font-size: 1.3rem;\n        background-color: #282828;\n        padding: 0.2rem;\n        border-radius: 1rem;\n        color: #c7c5c5;\n      }\n    }\n  }\n`;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button } from '@material-ui/core'\nimport { useHistory} from 'react-router'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function Album({ headerBackground, setSearch, playAList, addListToPlayback }) {\n\n  const playAListRef = useRef();\n  playAListRef.current = playAList;\n  const addListToPlaybackRef = useRef();\n  addListToPlaybackRef.current = addListToPlayback;\n\n    const { push } = useHistory()\n\n    const [album, setAlbum] = useState({\n        Album_ID: -1,\n        Album_Nombre: '',\n        Album_Descripcion: '',\n        Album_ImagenPortada: '',\n        Artista_ID: -1,\n        Artista_Nombre: ''\n    });\n\n    const [canciones, setCanciones] = useState([]);\n\n    useEffect(() => {\n        axios.get('/album/' + localStorage.getItem('SoundStream_AlbumID'))\n            .then(({ data }) => {\n                if (data !== undefined && data !== null) {\n                    setAlbum(data.album)\n                } else {\n                    localStorage.setItem('SoundStream_AlbumID', -1)\n                    IrAUsuario();\n                }\n            })\n    }, []);\n\n    useEffect(() => {\n        axios.get('/canciones-album/' + localStorage.getItem('SoundStream_AlbumID'))\n            .then(response => {\n                // Extrae los datos relevantes de la respuesta\n                const data = response.data.canciones_album;\n                setCanciones(data)\n            })\n            .catch(error => {\n                console.error(\"Error al obtener datos de canciones:\", error);\n            });\n    }, [album]);\n\n    const IrAUsuario = () => {\n        push('/app')\n        setSearch(\"\")\n    }\n\n    const VerArtista = () => {\n        localStorage.setItem('SoundStream_ArtistID', album.Artista_ID)\n        push('/artist')\n    }\n\n    const VerCancion = (id_cancion) => {\n        localStorage.setItem('SoundStream_SongID', id_cancion)\n        push('/song')\n    }\n\n    const ReproducirAlbum = () =>{\n      const ListCanciones = [];\n      for (let i = 0; i < canciones.length; i++) {\n        ListCanciones.push(canciones[i].id_cancion)\n      }\n      playAListRef.current(ListCanciones);\n    }\n\n    const AgregarAlbum = () => {\n      const ListCanciones = [];\n      for (let i = 0; i < canciones.length; i++) {\n        ListCanciones.push(canciones[i].id_cancion)\n      }\n      addListToPlaybackRef.current(ListCanciones)\n    }\n\n    return (\n        <Container headerBackground={headerBackground}>\n            <div className=\"form\">\n                <div className=\"sides\">\n                    <div className=\"sides1\">\n                        <img src={album.Album_ImagenPortada} alt={\"imagen de: \" + album.Album_Nombre}></img>\n                    </div>\n                    <div className=\"sides2\">\n                        <h1><u>Titulo: {album.Album_Nombre}</u></h1>\n                        <h2 onClick={VerArtista}>Artista: {album.Artista_Nombre}</h2>\n                        <h2>Descripción: {album.Album_Descripcion}</h2>\n                    </div>\n                </div>\n                <div className=\"sides\">\n                    <div className=\"buttons\" onClick={ReproducirAlbum}>\n                        Reproducir\n                    </div>\n                    <div className=\"buttons\" onClick={AgregarAlbum}>\n                        Agregar a reproduccion actual\n                    </div>\n                </div>\n                {canciones.map((cancion, index) => (\n                    <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`} key={cancion.id_cancion} onClick={() => VerCancion(cancion.id_cancion)}>\n                        <div className=\"Left\">\n                            {index + 1}\n                        </div>\n                        <div className=\"Center\">\n                            {cancion.nombre_cancion}\n                        </div>\n                        <div className=\"Rigth\">\n                            {cancion.duracion_cancion}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n  color: white;\n  .form{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n  }\n  .sides {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    align-items: center; /* Centra verticalmente los elementos dentro de sides */\n  }\n  .even {\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n  .sides1 {\n    flex: 20%; /* Ocupa el 15% del ancho */\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.1)\n  }\n  .sides2 {\n    flex: 80%; /* Ocupa el 85% del ancho */\n    padding: 10px;\n  }\n  .buttons{\n    flex: 50%; /* Ocupa el 33% del ancho */\n    background-color: black;\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 3px solid black;\n  }\n  .Left{\n    flex: 10%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Center{\n    flex: 80%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Rigth{\n    flex: 10%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .buttons:hover {\n    border: 3px solid white;\n  }\n  .ligth:hover {\n    border: 3px solid white;\n  }\n  img {\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n\n\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function Artist({ headerBackground, setSearch }) {\n\n    const { push } = useHistory()\n\n    const [artista, setArtista] = useState({\n        Artista_ID: -1,\n        Artista_Nombre: '',\n        url_imagen: '',\n        fecha_nacimiento: ''\n    });\n\n    const [albumes, setAlbumes] = useState([]);\n\n    useEffect(() => {\n        axios.get('/artista/' + localStorage.getItem('SoundStream_ArtistID'))\n            .then(({ data }) => {\n                if (data !== undefined && data !== null) {\n                    setArtista(data.artista)\n                } else {\n                    localStorage.setItem('SoundStream_ArtistID', -1)\n                    IrAUsuario();\n                }\n            })\n    }, []);\n\n    useEffect(() => {\n        axios.get('/albumes-artista/' + localStorage.getItem('SoundStream_ArtistID'))\n            .then(response => {\n                // Extrae los datos relevantes de la respuesta\n                const data = response.data.albumes_artista;\n                setAlbumes(data)\n            })\n            .catch(error => {\n                console.error(\"Error al obtener datos de canciones:\", error);\n            });\n    }, [artista]);\n\n    const IrAUsuario = () => {\n        push('/app')\n        setSearch('')\n    }\n\n    const VerAlbum = (id_cancion) => {\n        localStorage.setItem('SoundStream_AlbumID', id_cancion)\n        push('/album')\n    }\n\n    return (\n        <Container headerBackground={headerBackground}>\n            <div className=\"form\">\n                <div className=\"sides\">\n                    <div className=\"sides1\">\n                        <img src={artista.url_imagen} alt={\"imagen de: \" + artista.Artista_Nombre}></img>\n                    </div>\n                    <div className=\"sides2\">\n                        <h1><u>Nombre: {artista.Artista_Nombre}</u></h1>\n                        <h2>Fecha de nacimiento: {artista.fecha_nacimiento}</h2>\n                    </div>\n                </div>\n                {albumes.map((album, index) => (\n                    <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`} key={album.Album_ID} onClick={() => VerAlbum(album.Album_ID)}>\n                        <div className=\"Left\">\n                            {index + 1}\n                        </div>\n                        <div className=\"Rigth\">\n                            {album.Album_Nombre}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n  color: white;\n  .form{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n  }\n  .sides {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    align-items: center; /* Centra verticalmente los elementos dentro de sides */\n  }\n  .even {\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n  .sides1 {\n    flex: 20%;\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.1)\n  }\n  .sides2 {\n    flex: 80%; \n    padding: 10px;\n  }\n  .Left{\n    flex: 10%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Rigth{\n    flex: 90%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .ligth:hover {\n    border: 3px solid white;\n  }\n  img {\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n\n\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function Album({ headerBackground, reproduccion, listaCanciones, removeFromPlayback }) {\n\n    const { push } = useHistory()\n\n    const [canciones, setCanciones] = useState([]);\n\n    const VerCancion = (id_cancion) => {\n        localStorage.setItem('SoundStream_SongID', id_cancion)\n        push('/song')\n    }\n\n    const VerAlbum = (id_album) => {\n        localStorage.setItem('SoundStream_AlbumID', id_album)\n        push('/album')\n    }\n\n    const VerArtista = (id_artista) => {\n        localStorage.setItem('SoundStream_ArtistID', id_artista)\n        push('/artist')\n    }\n\n    useEffect(() => {\n        setCanciones([])\n        for (let i = 0; i < listaCanciones.length; i++) {\n            axios.get('/cancion/' + listaCanciones[i])\n                .then(({ data }) => {\n                    if (data !== undefined && data !== null) {\n                        setCanciones(canciones => [...canciones, data.cancion])\n                    }\n                })\n        }\n    }, [listaCanciones]);\n\n    const EliminarCancion = (id_artista) => {\n      removeFromPlayback(id_artista)\n  }\n\n    return (\n        <Container headerBackground={headerBackground}>\n            <div className=\"form\">\n                <div className={`sides`}>\n                    <div className=\"Left\">\n                        No.\n                    </div>\n                    <div className=\"Center\">\n                        Nombre\n                    </div>\n                    <div className=\"Center\">\n                        Album\n                    </div>\n                    <div className=\"Center\">\n                        Artista\n                    </div>\n                    <div className=\"Center\">\n                        Duracion\n                    </div>\n                    <div className=\"Rigth\">\n                        Eliminar\n                    </div>\n                </div>\n                {canciones.map((cancion, index) => (\n                    <div className={`sides ${cancion.Cancion_ID === reproduccion ? 'now' : index % 2 === 0 ? 'even' : ''} ligth`}>\n                        <div className=\"Left\">\n                            {index + 1}\n                        </div>\n                        <div className=\"Center\" key={cancion.id_cancion} onClick={() => VerCancion(cancion.id_cancion)}>\n                            {cancion.Cancion_Nombre}\n                        </div>\n                        <div className=\"Center\" key={cancion.Album_ID} onClick={() => VerAlbum(cancion.Album_ID)}>\n                            {cancion.Album_Nombre}\n                        </div>\n                        <div className=\"Center\" key={cancion.Artista_ID} onClick={() => VerArtista(cancion.Artista_ID)}>\n                            {cancion.Artista_Nombre}\n                        </div>\n                        <div className=\"Center\">\n                            {cancion.Cancion_Duracion}\n                        </div >\n                        <div className=\"Rigth\" key={cancion.Artista_ID} onClick={() => EliminarCancion(cancion.Cancion_ID)}>\n                            X\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n  color: white;\n  .form{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n  }\n  .sides {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    align-items: center; /* Centra verticalmente los elementos dentro de sides */\n  }\n  .now {\n    background-color: rgba(255, 255, 255, 0.8);\n    color:black;\n  }\n  .even {\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n  .sides1 {\n    flex: 20%; /* Ocupa el 15% del ancho */\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.1)\n  }\n  .sides2 {\n    flex: 80%; /* Ocupa el 85% del ancho */\n    padding: 10px;\n  }\n  .buttons{\n    flex: 50%; /* Ocupa el 33% del ancho */\n    background-color: black;\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 3px solid black;\n  }\n  .Left{\n    flex: 8%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Center{\n    flex: 21%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Rigth{\n    flex: 8%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .buttons:hover {\n    border: 3px solid white;\n  }\n  .ligth:hover {\n    border: 3px solid white;\n  }\n  img {\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n\n\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function Album({ headerBackground, reproduccion, changeSong }) {\n\n  const { push } = useHistory()\n\n  const [canciones, setCanciones] = useState([]);\n  const [artistas, setArtistas] = useState([]);\n  const [albumes, setAlbumes] = useState([]);\n  const [historial, setHistorial] = useState([]);\n\n  const VerCancion = (id_cancion) => {\n    localStorage.setItem('SoundStream_SongID', id_cancion)\n    push('/song')\n  }\n\n  const VerAlbum = (id_album) => {\n    localStorage.setItem('SoundStream_AlbumID', id_album)\n    push('/album')\n  }\n\n  const VerArtista = (id_artista) => {\n    localStorage.setItem('SoundStream_ArtistID', id_artista)\n    push('/artist')\n  }\n\n  useEffect(() => {\n    axios.get('/top5-canciones/' + localStorage.getItem('SoundStream_UserID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setCanciones(data.data)\n        }\n      })\n  }, [changeSong]);\n\n  useEffect(() => {\n    axios.get('/top3-artistas/' + localStorage.getItem('SoundStream_UserID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setArtistas(data.data)\n        }\n      })\n  }, [changeSong]);\n\n  useEffect(() => {\n    axios.get('/top5-albumes/' + localStorage.getItem('SoundStream_UserID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setAlbumes(data.data)\n        }\n      })\n  }, [changeSong]);\n\n  useEffect(() => {\n    axios.get('/historial/' + localStorage.getItem('SoundStream_UserID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setHistorial(data.data)\n        }\n      })\n  }, [changeSong]);\n\n  return (\n    <Container headerBackground={headerBackground}>\n      <div className=\"aux\">\n        <h1>Tus 5 canciones mas reproducidos:</h1>\n      </div>\n      <div className=\"form\">\n        <div className={`sides`}>\n          <div className=\"Left\">\n            No.\n          </div>\n          <div className=\"Center\">\n            Nombre\n          </div>\n          <div className=\"Center\">\n            Artista\n          </div>\n          <div className=\"Center\">\n            Album\n          </div>\n          <div className=\"Rigth\">\n            Reproducciones\n          </div>\n        </div>\n        {canciones.map((cancion, index) => (\n          <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`}>\n            <div className=\"Left\">\n              {index + 1}\n            </div>\n            <div className=\"Center\" key={cancion.id_cancion} onClick={() => VerCancion(cancion.id_cancion)}>\n              {cancion.nombre_cancion}\n            </div>\n            <div className=\"Center\" key={cancion.id_artista} onClick={() => VerArtista(cancion.id_artista)}>\n              {cancion.nombre_artista}\n            </div>\n            <div className=\"Center\" key={cancion.id_album} onClick={() => VerAlbum(cancion.id_album)}>\n              {cancion.nombre_album}\n            </div>\n            <div className=\"Rigth\">\n              {cancion.cantidad}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"aux\">\n        <h1>Tus 3 artistas mas reproducidos:</h1>\n      </div>\n      <div className=\"form\">\n        <div className={`sides`}>\n          <div className=\"LeftArtist\">\n            No.\n          </div>\n          <div className=\"CenterArtist\">\n            Nombre\n          </div>\n          <div className=\"RigthArtist\">\n            Reproducciones\n          </div>\n        </div>\n        {artistas.map((artista, index) => (\n          <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`}>\n            <div className=\"LeftArtist\">\n              {index + 1}\n            </div>\n            <div className=\"CenterArtist\" key={artista.id_artista} onClick={() => VerArtista(artista.id_artista)}>\n              {artista.nombre_artista}\n            </div>\n            <div className=\"RigthArtist\">\n              {artista.cantidad}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"aux\">\n        <h1>Tus 5 albumes mas reproducidos:</h1>\n      </div>\n      <div className=\"form\">\n        <div className={`sides`}>\n          <div className=\"LeftAlbum\">\n            No.\n          </div>\n          <div className=\"CenterAlbum\">\n            Nombre\n          </div>\n          <div className=\"CenterAlbum\">\n            Artista\n          </div>\n          <div className=\"RigthAlbum\">\n            Reproducciones\n          </div>\n        </div>\n        {albumes.map((album, index) => (\n          <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`}>\n            <div className=\"LeftAlbum\">\n              {index + 1}\n            </div>\n            <div className=\"CenterAlbum\" key={album.id_album} onClick={() => VerAlbum(album.id_album)}>\n              {album.nombre_album}\n            </div>\n            <div className=\"CenterAlbum\" key={album.id_artista} onClick={() => VerArtista(album.id_artista)}>\n              {album.nombre_artista}\n            </div>\n            <div className=\"RigthAlbum\">\n              {album.cantidad}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"aux\">\n        <h1>Historial de canciones:</h1>\n      </div>\n      <div className=\"form\">\n        <div className={`sides`}>\n          <div className=\"LeftHistory\">\n            No.\n          </div>\n          <div className=\"CenterHistory\">\n            Nombre\n          </div>\n          <div className=\"CenterHistory\">\n            Artista\n          </div>\n          <div className=\"CenterHistory\">\n            Album\n          </div>\n          <div className=\"RigthHistory\">\n            Fecha\n          </div>\n        </div>\n        {historial.map((registro, index) => (\n          <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`}>\n            <div className=\"LeftHistory\">\n              {index + 1}\n            </div>\n            <div className=\"CenterHistory\" key={registro.id_cancion} onClick={() => VerCancion(registro.id_cancion)}>\n              {registro.nombre}\n            </div>\n            <div className=\"CenterHistory\" key={registro.id_artista} onClick={() => VerArtista(registro.id_artista)}>\n              {registro.nombre_artista}\n            </div>\n            <div className=\"CenterHistory\" key={registro.id_album} onClick={() => VerAlbum(registro.id_album)}>\n              {registro.nombre_album}\n            </div>\n            <div className=\"RigthHistory\">\n              {registro.fecha_registro}\n            </div>\n          </div>\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n  color: white;\n  .aux{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n  }\n  .form{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n  }\n  .sides {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    align-items: center; /* Centra verticalmente los elementos dentro de sides */\n  }\n  .now {\n    background-color: rgba(255, 255, 255, 0.8);\n    color:black;\n  }\n  .even {\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n  .sides1 {\n    flex: 20%; /* Ocupa el 15% del ancho */\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.1)\n  }\n  .sides2 {\n    flex: 80%; /* Ocupa el 85% del ancho */\n    padding: 10px;\n  }\n  .buttons{\n    flex: 50%; \n    background-color: black;\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 3px solid black;\n  }\n  .Left{\n    flex: 5%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Center{\n    flex: 28%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Rigth{\n    flex: 11%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n\n  .LeftArtist{\n    flex: 5%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .CenterArtist{\n    flex: 84%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .RigthArtist{\n    flex: 11%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n\n  .LeftAlbum{\n    flex: 5%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .CenterAlbum{\n    flex: 42%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .RigthAlbum{\n    flex: 11%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n\n  .LeftHistory{\n    flex: 5%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .CenterHistory{\n    flex: 20%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .RigthHistory{\n    flex: 15%; \n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .buttons:hover {\n    border: 3px solid white;\n  }\n  .ligth:hover {\n    border: 3px solid white;\n  }\n  img {\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n\n\n","import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from 'react-router'\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nexport default function Favorites({ headerBackground , playAList , addListToPlayback}) {\n\n  const { push } = useHistory()\n\n  const [canciones, setCanciones] = useState([]);\n  const [change, setChange] = useState(false);\n\n  const playAListRef = useRef();\n  playAListRef.current = playAList;\n  const addListToPlaybackRef = useRef();\n  addListToPlaybackRef.current = addListToPlayback;\n\n  const VerCancion = (id_cancion) => {\n    localStorage.setItem('SoundStream_SongID', id_cancion)\n    push('/song')\n  }\n\n  const VerAlbum = (id_album) => {\n    localStorage.setItem('SoundStream_AlbumID', id_album)\n    push('/album')\n  }\n\n  const VerArtista = (id_artista) => {\n    localStorage.setItem('SoundStream_ArtistID', id_artista)\n    push('/artist')\n  }\n\n  useEffect(() => {\n    axios.get('/favoritos/' + localStorage.getItem('SoundStream_UserID'))\n      .then(({ data }) => {\n        if (data !== undefined && data !== null) {\n          setCanciones(data.canciones_favoritas)\n        }\n      })\n  }, [change]);\n\n  const EliminarCancion = (id_cancion) => {\n    axios\n      .delete('/favoritos/' + id_cancion + '/' + localStorage.getItem('SoundStream_UserID'))\n      .then(() => {\n        setChange(!change)\n      });\n  }\n\n  const ReproducirAlbum = () => {\n    const ListCanciones = [];\n    for (let i = 0; i < canciones.length; i++) {\n      ListCanciones.push(canciones[i].id_cancion)\n    }\n    playAListRef.current(ListCanciones);\n  }\n\n  const AgregarAlbum = () => {\n    const ListCanciones = [];\n    for (let i = 0; i < canciones.length; i++) {\n      ListCanciones.push(canciones[i].id_cancion)\n    }\n    addListToPlaybackRef.current(ListCanciones)\n  }\n\n  return (\n    <Container headerBackground={headerBackground}>\n      <div className=\"form\">\n        <div className=\"sides\">\n          <div className=\"buttons\" onClick={ReproducirAlbum}>\n            Reproducir\n          </div>\n          <div className=\"buttons\" onClick={AgregarAlbum}>\n            Agregar a reproduccion actual\n          </div>\n        </div>\n        <div className={`sides`}>\n          <div className=\"Left\">\n            No.\n          </div>\n          <div className=\"Center\">\n            Nombre\n          </div>\n          <div className=\"Center\">\n            Album\n          </div>\n          <div className=\"Center\">\n            Artista\n          </div>\n          <div className=\"Center\">\n            Duracion\n          </div>\n          <div className=\"Rigth\">\n            Eliminar\n          </div>\n        </div>\n        {canciones.map((cancion, index) => (\n          <div className={`sides ${index % 2 === 0 ? 'even' : ''} ligth`}>\n            <div className=\"Left\">\n              {index + 1}\n            </div>\n            <div className=\"Center\" key={cancion.id_cancion} onClick={() => VerCancion(cancion.id_cancion)}>\n              {cancion.nombre_cancion}\n            </div>\n            <div className=\"Center\" key={cancion.id_album} onClick={() => VerAlbum(cancion.id_album)}>\n              {cancion.nombre_album}\n            </div>\n            <div className=\"Center\" key={cancion.id_artista_album} onClick={() => VerArtista(cancion.id_artista_album)}>\n              {cancion.nombre_artista}\n            </div>\n            <div className=\"Center\">\n              {cancion.duracion_cancion}\n            </div >\n            <div className=\"Rigth\" key={cancion.id_cancion} onClick={() => EliminarCancion(cancion.id_cancion)}>\n              X\n            </div>\n          </div>\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%; /* Ocupa el 90% del ancho */\n  height: 100%; /* Ocupa el 100% del alto disponible */\n  margin-top:2.5%;\n  color: white;\n  .form{\n    width: 95%; /* Ocupa todo el ancho dentro de Container */\n    margin: auto; /* Centra horizontalmente */\n    background-color: rgba(0, 0, 0, 0.5); /* Fondo negro con transparencia */\n  }\n  .sides {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    align-items: center; /* Centra verticalmente los elementos dentro de sides */\n  }\n  .now {\n    background-color: rgba(255, 255, 255, 0.8);\n    color:black;\n  }\n  .even {\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n  .sides1 {\n    flex: 20%; /* Ocupa el 15% del ancho */\n    padding: 10px;\n    background-color: rgba(0, 0, 0, 0.1)\n  }\n  .sides2 {\n    flex: 80%; /* Ocupa el 85% del ancho */\n    padding: 10px;\n  }\n  .buttons{\n    flex: 50%; /* Ocupa el 33% del ancho */\n    background-color: black;\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 3px solid black;\n  }\n  .Left{\n    flex: 8%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Center{\n    flex: 21%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .Rigth{\n    flex: 8%; /* Ocupa el 33% del ancho */\n    padding: 10px;\n    display: flex;\n    justify-content: center; /* Centra horizontalmente */\n    align-items: center; /* Centra verticalmente */\n    border: 1px solid black;\n  }\n  .buttons:hover {\n    border: 3px solid white;\n  }\n  .ligth:hover {\n    border: 3px solid white;\n  }\n  img {\n    max-width: 100%;\n    object-fit: cover;\n  }\n`;\n\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst Song = () => {\n\n    /* Variables a utilizar */\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [filePhoto, setFilePhoto] = useState(null);\n    const [audioDuration, setAudioDuration] = useState('');\n    const [fileAudio, setFileAudio] = useState(null);\n    const [titleModal, setTitleModal] = useState(false);\n    const [isEditMode, setIsEditMode] = useState(false);  // Estado para controlar el modo de edicion\n    const [changes, setChanges] = useState(false) \n\n    /* Para setear el archivo y nombre de la foto a subir */\n    const [filenamePhoto, setFilenamePhoto] = useState(\"\");\n    const handleFilePhotoUpload = (e) => {\n        if (!e.target.files) {\n            return;\n        }\n        const filePhoto = e.target.files[0];\n        setFilePhoto(filePhoto);\n        const { name } = filePhoto;\n        setFilenamePhoto(name);\n        setChanges(!changes)\n    };\n\n    /* Para setear el archivo y nombre del audio a subir */\n    const [filenameAudio, setFilenameAudio] = useState(\"\");\n    const handleFileAudioUpload = (e) => {\n        if (!e.target.files) {\n            return;\n        }\n\n        const fileAudio = e.target.files[0];\n        setFileAudio(fileAudio);\n        const { name } = fileAudio;\n        setFilenameAudio(name);\n\n        const audio = new Audio();\n        audio.preload = 'metadata';\n        audio.src = URL.createObjectURL(fileAudio);\n\n        audio.onloadedmetadata = () => {\n            const durationInSeconds = Math.round(audio.duration);\n            setAudioDuration(durationInSeconds);\n        };\n        setChanges(!changes)\n    };\n\n    /* Para setear el id del artista seleccionado */\n    const [idArtist, setIdArtist] = useState('');\n    const handleChange = (event) => {\n        setIdArtist(event.target.value);\n    };\n\n    /* Para setear el audio */\n    const audioRef = useRef(null);\n\n    /* Para el funcionamiento del modal que realiza un registro/modificacion */\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = (titleModal, isEditMode, id_cancion = '', nombre_cancion = '', id_artista = '') => {\n        if (isEditMode) {\n            setId(id_cancion);\n            setName(nombre_cancion);\n            setIdArtist(id_artista);\n        }\n        setTitleModal(titleModal);\n        setIsEditMode(isEditMode);  // Actualiza el estado para indicar si estamos en modo de edición\n        setOpen(true);\n        setChanges(!changes)\n    };\n    const handleClose = () => {\n        handleClear();\n        setOpen(false)\n        setChanges(!changes)\n    };\n\n    /* FUNCIONALIDAD PARA CARGAR LOS ARTISTAS */\n    const [artists, setArtists] = useState([]);\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/artistas');\n                setArtists(response.data.artistas); // Actualizar el estado con los datos del endpoint\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /* FUNCIONALIDAD DE LA TABLA */\n    const [tableData, setTableData] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/canciones');\n                setTableData(response.data.canciones)\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n        fetchData();\n    }, [changes]);\n\n    /** FUNCIONALIDAD DEL BOTON DE GUARDADO */\n    const handleSave = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('imagen_portada', filePhoto);\n        formData.append('duracion', segundosAFormatoTiempo(audioDuration));\n        formData.append('archivo_mp3', fileAudio);\n        formData.append('id_artista', idArtist);\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (filePhoto === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else if (idArtist === '') {\n            alert(\"El campo artista es obligatorio\");\n        } else if (fileAudio === null) {\n            alert(\"El campo audio es obligatorio\");\n        } else {\n            axios.post('/canciones', formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    // Cierra el modal\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                    setChanges(!changes)\n                });\n        }\n    };\n\n    function segundosAFormatoTiempo(segundos) {\n        const horas = Math.floor(segundos / 3600);\n        const minutos = Math.floor((segundos % 3600) / 60);\n        const segundosRestantes = segundos % 60;\n      \n        const formatoHora = (valor) => (valor < 10 ? `0${valor}` : `${valor}`);\n        \n        return `${formatoHora(horas)}:${formatoHora(minutos)}:${formatoHora(segundosRestantes)}`;\n      }\n\n    /* FUNCIONALIDAD DEL BOTON DE ACTUALIZAR */\n    const handleEdit = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('imagen_portada', filePhoto);\n        formData.append('duracion', segundosAFormatoTiempo(audioDuration));\n        formData.append('archivo_mp3', fileAudio);\n        formData.append('id_artista', idArtist);\n        formData.append('id_album', null);\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (filePhoto === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else if (idArtist === '') {\n            alert(\"El campo artista es obligatorio\");\n        } else if (fileAudio === null) {\n            alert(\"El campo audio es obligatorio\");\n        } else {\n            axios.put('/canciones/' + id, formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    // Cierra el modal\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ELIMINAR */\n    const handleDelete = (id) => {\n        axios.delete('/canciones/' + id)\n            .then(response => {\n                alert(response.data.mensaje);\n                setChanges(!changes)\n            })\n            .catch(error => {\n                console.error('Error al enviar los datos:', error);\n            });\n    };\n\n    /* FUNCIONALIDAD PARA LIMPIAR LAS VARIABLES */\n    const handleClear = () => {\n        setId('');\n        setName('');\n        setFilePhoto(null);\n        setFilenamePhoto('');\n        setFileAudio(null);\n        setFilenameAudio('');\n        setIdArtist('');\n    }\n\n    return (\n        <>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleOpen(\"Registrar\", false)}><AddIcon />Añadir</Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        {titleModal}\n                    </Typography>\n                    <br />\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        <TextField\n                            label=\"Nombre de la canción\"\n                            variant=\"outlined\"\n                            fullWidth\n                            sx={{ my: 1 }}\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <br />\n                        <br />\n                        <Button\n                            component=\"label\"\n                            variant=\"outlined\"\n                            startIcon={<CloudUploadIcon />}\n                            sx={{ marginRight: \"1rem\" }}\n                        >\n                            Fotografía\n                            <input type=\"file\" accept=\".png, .jpg, .jpeg\" hidden onChange={handleFilePhotoUpload} />\n                        </Button>\n                        <Box>{filenamePhoto}</Box>\n                        <br />\n                        <InputLabel id=\"demo-simple-select-label\">Artista</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={idArtist}\n                            label=\"Id\"\n                            onChange={handleChange}\n                        >\n                            {artists.map(artist => (\n                                <MenuItem key={artist.id} value={artist.id}>\n                                    {artist.id} - {artist.nombre}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <br />\n                        <br />\n                        <Button\n                            component=\"label\"\n                            variant=\"outlined\"\n                            startIcon={<CloudUploadIcon />}\n                            sx={{ marginRight: \"1rem\" }}\n                        >\n                            Audio MP3\n                            <input type=\"file\" accept=\".mp3\" hidden onChange={handleFileAudioUpload} />\n                        </Button>\n                        <Box>{filenameAudio}</Box>\n                        <br />\n                        <br />\n                        {isEditMode ? (\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleEdit}><UpdateIcon />Actualizar</Button>\n                        ) : (\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}><SaveIcon />Guardar</Button>\n                        )}\n                    </Typography>\n                </Box>\n            </Modal>\n\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell align=\"right\">Nombre</TableCell>\n                            <TableCell align=\"right\">Fotografía</TableCell>\n                            <TableCell align=\"right\">Duración</TableCell>\n                            <TableCell align=\"right\">Artista</TableCell>\n                            <TableCell align=\"right\">Reproducir</TableCell>\n                            <TableCell align=\"right\">Acciones</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableData.map((row) => (\n                            <TableRow\n                                key={row.id_cancion}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.id_cancion}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.nombre_cancion}</TableCell>\n                                <TableCell align=\"right\">\n                                    <img src={row.url_imagen} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} />\n                                </TableCell>\n                                <TableCell align=\"right\">{row.duracion}</TableCell>\n                                <TableCell align=\"right\">{row.nombre_artista}</TableCell>\n                                <TableCell align=\"right\">\n                                    <audio ref={audioRef} controls>\n                                        <source src={row.url_audio} type=\"audio/mp3\" />\n                                        Tu navegador no soporta el elemento de audio.\n                                    </audio>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton color=\"primary\" onClick={() => handleOpen(\"Actualizar\", true, row.id_cancion, row.nombre_cancion, row.id_artista)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                    <IconButton color=\"secondary\" onClick={() => handleDelete(row.id_cancion)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n\nexport default Song;","import React, { useState, useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst Album = () => {\n\n    /* Variables a utilizar */\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [filePhoto, setFilePhoto] = useState(null);\n    const [titleModal, setTitleModal] = useState(false);\n    const [isEditMode, setIsEditMode] = useState(false);  // Estado para controlar el modo de edicion\n    const [changes, setChanges] = useState(false) \n\n    /* Para setear el archivo y nombre de la foto a subir */\n    const [filenamePhoto, setFilenamePhoto] = useState(\"\");\n    const handleFilePhotoUpload = (e) => {\n        if (!e.target.files) {\n            return;\n        }\n        const filePhoto = e.target.files[0];\n        setFilePhoto(filePhoto);\n        const { name } = filePhoto;\n        setFilenamePhoto(name);\n        setChanges(!changes)\n    };\n\n    /* Para setear el id del artista seleccionado */\n    const [idArtist, setIdArtist] = useState('');\n    const handleChange = (event) => {\n        setIdArtist(event.target.value);\n        setChanges(!changes)\n    };\n\n    /* Para setear el id del album seleccionado */\n    const [idAlbum, setIdAlbum] = useState('');\n    const handleChangeAlbum = (event) => {\n        setIdAlbum(event.target.value);\n        setChanges(!changes)\n    };\n\n    /* Para el funcionamiento del modal que realiza un registro/modificacion */\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = (titleModal, isEditMode, id_album = '', nombre_album = '', descripcion = '', id_artista = '') => {\n        if (isEditMode) {\n            setId(id_album);\n            setName(nombre_album);\n            setDescription(descripcion);\n            setIdArtist(id_artista);\n        }\n        setTitleModal(titleModal);\n        setIsEditMode(isEditMode);  // Actualiza el estado para indicar si estamos en modo de edición\n        setOpen(true);\n    };\n    const handleClose = () => {\n        handleClear();\n        setOpen(false)\n        setChanges(!changes)\n    };\n\n    /* FUNCIONALIDAD PARA CARGAR LOS ALBUMES */\n    const [albumes, setAlbumes] = useState([]);\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/albumes');\n                setAlbumes(response.data.albumes);\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /* FUNCIONALIDAD PARA CARGAR LOS ARTISTAS */\n    const [artists, setArtists] = useState([]);\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/artistas');\n                setArtists(response.data.artistas); // Actualizar el estado con los datos del endpoint\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /* FUNCIONALIDAD DE LA TABLA ALBUM */\n    const [tableData, setTableData] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/albumes');\n                setTableData(response.data.albumes); // Actualizar el estado con los datos del endpoint\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /** FUNCIONALIDAD DEL BOTON DEL DETALLE DE UN ALBUM */\n    const [tableSongAdded, setTableSongAdded] = useState([]);\n    const [tableSongToAdd, setTableSongToAdd] = useState([]);\n    useEffect(() => {\n            if (idAlbum !== '') {\n                axios.get('/canciones-album/' + idAlbum)\n                    .then(response => {\n                        setTableSongAdded(response.data.canciones_album);\n                    })\n                    .catch(error => {\n                        console.error('Error al obtener los datos:', error);\n                    });\n\n                axios.get('/canciones-artista/' + idAlbum)\n                    .then(response => {\n                        setTableSongToAdd(response.data.canciones_artista);\n                    })\n                    .catch(error => {\n                        console.error('Error al obtener los datos:', error);\n                    });\n            }\n    }, [changes]);\n    ;\n\n    /** FUNCIONALIDAD DEL BOTON DE GUARDADO */\n    const handleSave = () => {\n\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('descripcion', description);\n        formData.append('archivo', filePhoto);\n        formData.append('id_artista', idArtist);\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (filePhoto === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else if (idArtist === '') {\n            alert(\"El campo artista es obligatorio\");\n        } else {\n            axios.post('/albumes', formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    // Cierra el modal\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ACTUALIZAR */\n    const handleEdit = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('descripcion', description);\n        formData.append('archivo', filePhoto);\n        formData.append('id_artista', idArtist);\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (filePhoto === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else if (idArtist === '') {\n            alert(\"El campo artista es obligatorio\");\n        } else {\n            axios.put('/albumes/' + id, formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    // Cierra el modal\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ELIMINAR */\n    const handleDelete = (id) => {\n\n        let password = prompt(\"Ingrese una contraseña de administrador para ejecutar la acción\");\n        if (password === '') {\n            alert(\"La contraseña es obligatoria\")\n        } else {\n            axios.post('/usuarios/password', { contrasenia: password })\n                .then(response => {\n                    if (response.data.success) {\n                        axios.delete('/albumes/' + id)\n                            .then(response => {\n                                alert(response.data.mensaje);\n                                setChanges(!changes)\n                            })\n                            .catch(error => {\n                                console.error('Error al enviar los datos:', error);\n                            });\n                    } else {\n                        alert(response.data.mensaje)\n                    }\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    };\n\n    /* FUNCIONALIDAD PARA LIMPIAR LAS VARIABLES */\n    const handleClear = () => {\n        setId('');\n        setName('');\n        setFilePhoto(null);\n        setFilenamePhoto('');\n        setIdArtist('');\n    }\n\n    /* FUNCIONALIDAD PARA ELIMINAR UNA CANCION DE UN ALBUM */\n    const handleRemoveSongOfAlbum = (id_cancion) => {\n        axios.delete('/canciones-album/' + id_cancion)\n            .then(response => {\n                alert(response.data.mensaje);\n                setChanges(!changes)\n            })\n            .catch(error => {\n                console.error('Error al enviar los datos:', error);\n            });\n    }\n\n    /* FUNCIONALIDAD PARA AGREGAR UNA CANCION DE UN ALBUM */\n    const handleAddSongOfAlbum = (id_cancion) => {\n\n        const data = {\n            id_album: idAlbum\n        };\n\n        if (idAlbum === '') {\n            alert(\"Debe de seleccionar un álbum\");\n        } else {\n            axios.put('/canciones-album/' + id_cancion, data)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    }\n\n    return (\n        <>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleOpen(\"Registrar\", false)}><AddIcon />Añadir</Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        {titleModal}\n                    </Typography>\n                    <br />\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        <TextField\n                            label=\"Nombre del album\"\n                            variant=\"outlined\"\n                            fullWidth\n                            sx={{ my: 1 }}\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <br />\n                        <br />\n                        <TextField\n                            label=\"Descripción\"\n                            variant=\"outlined\"\n                            fullWidth\n                            sx={{ my: 1 }}\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                        <br />\n                        <br />\n                        <Button\n                            component=\"label\"\n                            variant=\"outlined\"\n                            startIcon={<CloudUploadIcon />}\n                            sx={{ marginRight: \"1rem\" }}\n                        >\n                            Fotografía\n                            <input type=\"file\" accept=\".png, .jpg, .jpeg\" hidden onChange={handleFilePhotoUpload} />\n                        </Button>\n                        <Box>{filenamePhoto}</Box>\n                        <br />\n                        <InputLabel id=\"demo-simple-select-label\">Artista</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={idArtist}\n                            label=\"Id\"\n                            onChange={handleChange}\n                        >\n                            {artists.map(artist => (\n                                <MenuItem key={artist.id} value={artist.id}>\n                                    {artist.id} - {artist.nombre}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <br />\n                        <br />\n                        {isEditMode ? (\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleEdit}><UpdateIcon />Actualizar</Button>\n                        ) : (\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}><SaveIcon />Guardar</Button>\n                        )}\n                    </Typography>\n                </Box>\n            </Modal>\n\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell align=\"right\">Nombre</TableCell>\n                            <TableCell align=\"right\">Descripción</TableCell>\n                            <TableCell align=\"right\">Portada</TableCell>\n                            <TableCell align=\"right\">Artista</TableCell>\n                            <TableCell align=\"right\">Acciones</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            tableData ? (\n                                tableData.map((row) => (\n                                    <TableRow\n                                        key={row.id_album}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">{row.id_album}</TableCell>\n                                        <TableCell align=\"right\">{row.nombre_album}</TableCell>\n                                        <TableCell align=\"right\">{row.descripcion}</TableCell>\n                                        <TableCell align=\"right\"><img src={row.url_imagen} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} /></TableCell>\n                                        <TableCell align=\"right\">{row.nombre_artista}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <IconButton color=\"primary\" onClick={() => handleOpen(\"Actualizar\", true, row.id_album, row.nombre_album, row.descripcion, row.id_artista)}>\n                                                <EditIcon />\n                                            </IconButton>\n                                            <IconButton color=\"secondary\" onClick={() => handleDelete(row.id_album)}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            ) : (\n                                <TableRow>\n                                    <TableCell colSpan={6} align=\"center\">\n                                        No hay registros disponibles.\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <br /><br />\n            <InputLabel id=\"demo-simple-select-label\">Álbum</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={idAlbum}\n                label=\"Id\"\n                onChange={handleChangeAlbum}\n            >\n                {albumes.map(album => (\n                    <MenuItem key={album.id_album} value={album.id_album}>\n                        {album.id_album} - {album.nombre_album}\n                    </MenuItem>\n                ))}\n            </Select>\n            <br />\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ marginRight: '20px' }}>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>ID</TableCell>\n                                    <TableCell align=\"right\">Nombre</TableCell>\n                                    <TableCell align=\"right\">Imagen</TableCell>\n                                    <TableCell align=\"right\">Duración</TableCell>\n                                    <TableCell align=\"right\">Artista</TableCell>\n                                    <TableCell align=\"right\">Acciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    tableSongAdded ? (\n                                        tableSongAdded.map((row) => (\n                                            <TableRow\n                                                key={row.id_cancion}\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                            >\n                                                <TableCell component=\"th\" scope=\"row\">{row.id_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_cancion}</TableCell>\n                                                <TableCell align=\"right\"><img src={row.url_imagen_cancion} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} /></TableCell>\n                                                <TableCell align=\"right\">{row.duracion_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_artista}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton color=\"secondary\" onClick={() => handleRemoveSongOfAlbum(row.id_cancion)}>\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={6} align=\"center\">\n                                                No hay registros disponibles.\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n                <div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>ID</TableCell>\n                                    <TableCell align=\"right\">Nombre</TableCell>\n                                    <TableCell align=\"right\">Descripción</TableCell>\n                                    <TableCell align=\"right\">Portada</TableCell>\n                                    <TableCell align=\"right\">Artista</TableCell>\n                                    <TableCell align=\"right\">Acciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    tableSongToAdd ? (\n                                        tableSongToAdd.map((row) => (\n                                            <TableRow\n                                                key={row.id_cancion}\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                            >\n                                                <TableCell component=\"th\" scope=\"row\">{row.id_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_cancion}</TableCell>\n                                                <TableCell align=\"right\"><img src={row.url_imagen_cancion} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} /></TableCell>\n                                                <TableCell align=\"right\">{row.duracion_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_artista}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton color=\"primary\" onClick={() => handleAddSongOfAlbum(row.id_cancion)}>\n                                                        <BookmarkIcon />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={6} align=\"center\">\n                                                No hay registros disponibles.\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Album;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst Artist = () => {\n\n    /* Variables a utilizar */\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [birthdate, setBirthdate] = useState('');\n    const [file, setFile] = useState(null);\n    const [isEditMode, setIsEditMode] = useState(false);  // Estado para controlar el modo de edicion\n    const [titleModal, setTitleModal] = useState(false);\n    const [changes, setChanges] = useState(false) \n\n    /* Para setear el nombre del archivo a subir */\n    const [filename, setFilename] = useState(\"\");\n    const handleFileUpload = (e) => {\n        if (!e.target.files) {\n            return;\n        }\n        const file = e.target.files[0];\n        setFile(file);\n        const { name } = file;\n        setFilename(name);\n        setChanges(!changes)\n    };\n\n    /* Para el modal que realiza un registro */\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = (titleModal, isEditMode, id = '', nombre = '', fecha_nacimiento = '') => {\n        if (isEditMode) {\n            setId(id);\n            setName(nombre);\n            setBirthdate(fecha_nacimiento);\n        }\n        setTitleModal(titleModal);\n        setIsEditMode(isEditMode);  // Actualiza el estado para indicar si estamos en modo de edición\n        setOpen(true);\n        setChanges(!changes)\n    };\n    const handleClose = () => {\n        handleClear();\n        setOpen(false)\n        setChanges(!changes)\n    };\n\n    /* Para utilizar el estilo de una fecha */\n    const useStyles = makeStyles((theme) => ({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 200,\n        },\n    }));\n    const classes = useStyles();\n\n    /* FUNCIONALIDAD DE LA TABLA */\n    const [artistData, setArtistData] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/artistas');\n                setArtistData(response.data.artistas); // Actualizar el estado con los datos del endpoint\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /** FUNCIONALIDAD DEL BOTON DE GUARDADO */\n    const handleSave = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('archivo', file);\n        formData.append('fecha_nacimiento', birthdate);\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (file === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else {\n            axios.post('/artistas', formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ACTUALIZAR */\n    const handleEdit = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('archivo', file);\n        formData.append('fecha_nacimiento', birthdate);\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (file === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else {\n            axios.put('/artistas/' + id, formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    // Cierra el modal\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ELIMINAR */\n    const handleDelete = (id) => {\n\n        let password = prompt(\"Ingrese una contraseña de administrador para ejecutar la acción\");\n        if (password === '') {\n            alert(\"La contraseña es obligatoria\")\n        } else {\n            axios.post('/usuarios/password', { contrasenia: password })\n                .then(response => {\n                    if (response.data.success) {\n                        axios.delete('/artistas/' + id)\n                            .then(response => {\n                                alert(response.data.mensaje);\n                                setChanges(!changes)\n                            })\n                            .catch(error => {\n                                console.error('Error al enviar los datos:', error);\n                            });\n                    } else {\n                        alert(response.data.mensaje)\n                    }\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    };\n\n    /* FUNCIONALIDAD PARA LIMPIAR LAS VARIABLES */\n    const handleClear = () => {\n        setName('');\n        setBirthdate('');\n        setFile(null);\n        setFilename('');\n    }\n\n    return (\n\n        <>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleOpen(\"Registrar\", false)}><AddIcon />Añadir</Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        {titleModal}\n                    </Typography>\n                    <br />\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        <TextField\n                            label=\"Nombre\"\n                            variant=\"outlined\"\n                            fullWidth\n                            sx={{ my: 1 }}\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <br />\n                        <br />\n                        <TextField\n                            id=\"date\"\n                            label=\"Fecha de Nacimiento\"\n                            type=\"date\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            value={birthdate}\n                            onChange={(e) => setBirthdate(e.target.value)}\n                        />\n                        <br />\n                        <br />\n                        <Button\n                            component=\"label\"\n                            variant=\"outlined\"\n                            startIcon={<CloudUploadIcon />}\n                            sx={{ marginRight: \"1rem\" }}\n                        >\n                            Fotografía\n                            <input type=\"file\" accept=\".png, .jpg, .jpeg\" hidden onChange={handleFileUpload} />\n                        </Button>\n                        <Box>{filename}</Box>\n                        <br />\n                        {isEditMode ? (\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleEdit}><UpdateIcon />Actualizar</Button>\n                        ) : (\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}><SaveIcon />Guardar</Button>\n                        )}\n                    </Typography>\n                </Box>\n            </Modal>\n\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell align=\"right\">Nombre</TableCell>\n                            <TableCell align=\"right\">Fotografía</TableCell>\n                            <TableCell align=\"right\">Fecha de Nacimiento</TableCell>\n                            <TableCell align=\"right\">Acciones</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {artistData.map((row) => (\n                            <TableRow\n                                key={row.id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.id}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.nombre}</TableCell>\n                                <TableCell align=\"right\">\n                                    <img src={row.url_imagen} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} />\n                                </TableCell>\n                                <TableCell align=\"right\">{row.fecha_nacimiento}</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton color=\"primary\" onClick={() => handleOpen(\"Actualizar\", true, row.id, row.nombre, row.fecha_formateada)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                    <IconButton color=\"secondary\" onClick={() => handleDelete(row.id)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n\nexport default Artist;","import React, { useState, useEffect, useRef } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n\n};\n\nconst Playlist = ({playAList}) => {\n\n    /* Variables a utilizar */\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [file, setFile] = useState(null);\n    const [isEditMode, setIsEditMode] = useState(false);  // Estado para controlar el modo de edicion\n    const [titleModal, setTitleModal] = useState(false);\n    const [changes, setChanges] = useState(false)\n    const playAListRef = useRef();\n    playAListRef.current = playAList;\n\n    /* Para setear el nombre del archivo a subir */\n    const [filename, setFilename] = useState(\"\");\n    const handleFileUpload = (e) => {\n        if (!e.target.files) {\n            return;\n        }\n        const file = e.target.files[0];\n        setFile(file);\n        const { name } = file;\n        setFilename(name);\n    };\n\n    /* Para setear el id del playlist seleccionado */\n    const [idPlaylist, setIdPlaylist] = useState('');\n    const handleChangeAlbum = (event) => {\n        setIdPlaylist(event.target.value);\n        setChanges(!changes)\n    };\n\n    /* Para el modal que realiza un registro */\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = (titleModal, isEditMode, id = '', nombre = '') => {\n        if (isEditMode) {\n            setId(id);\n            setName(nombre);\n        }\n        setTitleModal(titleModal);\n        setIsEditMode(isEditMode);  // Actualiza el estado para indicar si estamos en modo de edición\n        setOpen(true);\n        setChanges(!changes)\n    };\n    const handleClose = () => {\n        handleClear();\n        setOpen(false)\n        setChanges(!changes)\n    };\n\n    /* FUNCIONALIDAD DE LA TABLA */\n    const [artistData, setArtistData] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/playlists');\n                setArtistData(response.data.playlists); // Actualizar el estado con los datos del endpoint\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /* FUNCIONALIDAD PARA CARGAR LAS PLAYLISTS */\n    const [playlists, setPlaylists] = useState([]);\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('/playlists');\n                setPlaylists(response.data.playlists);\n            } catch (error) {\n                console.error('Error al obtener los datos:', error);\n            }\n        };\n\n        fetchData();\n    }, [changes]);\n\n    /** FUNCIONALIDAD DEL BOTON DEL DETALLE DE UN ALBUM */\n    const [tableSongAdded, setTableSongAdded] = useState([]);\n    const [tableSongToAdd, setTableSongToAdd] = useState([]);\n    useEffect(() => {\n        if (idPlaylist !== '') {\n            axios.get('/canciones-playlist/' + idPlaylist)\n                .then(response => {\n                    setTableSongAdded(response.data.canciones_playlist);\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al obtener los datos:', error);\n                });\n            axios.get('/canciones-no-playlist/' + idPlaylist)\n                .then(response => {\n                    console.log(response.data);\n                    setTableSongToAdd(response.data.canciones_playlist);\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al obtener los datos:', error);\n                });\n        }\n    }, [changes]);\n\n    /** FUNCIONALIDAD DEL BOTON DE GUARDADO */\n    const handleSave = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('archivo', file);\n        formData.append('id_usuario', localStorage.getItem('SoundStream_UserID'));\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (file === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else {\n            axios.post('/playlists', formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ACTUALIZAR */\n    const handleEdit = () => {\n        const formData = new FormData();\n        formData.append('nombre', name);\n        formData.append('archivo', file);\n\n        if (name === '') {\n            alert(\"El campo nombre es obligatorio\");\n        } else if (file === null) {\n            alert(\"El campo fotografía es obligatorio\");\n        } else {\n            axios.put('/playlists/' + id, formData)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    // Cierra el modal\n                    setOpen(false);\n                    handleClear();\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n\n    };\n\n    /* FUNCIONALIDAD DEL BOTON DE ELIMINAR */\n    const handleDelete = (id) => {\n\n        axios.delete('/playlists/' + id)\n            .then(response => {\n                alert(response.data.mensaje);\n                setChanges(!changes)\n            })\n            .catch(error => {\n                console.error('Error al enviar los datos:', error);\n            });\n    };\n\n    /* FUNCIONALIDAD PARA LIMPIAR LAS VARIABLES */\n    const handleClear = () => {\n        setName('');\n        setFile(null);\n        setFilename('');\n    }\n\n    /* FUNCIONALIDAD PARA ELIMINAR UNA CANCION DE UN ALBUM */\n    const handleRemoveSongOfAlbum = (id_cancion) => {\n        axios.delete('/canciones-playlist/' + id_cancion)\n            .then(response => {\n                alert(response.data.mensaje);\n                setChanges(!changes)\n            })\n            .catch(error => {\n                console.error('Error al enviar los datos:', error);\n            });\n    }\n\n    /* FUNCIONALIDAD PARA AGREGAR UNA CANCION DE UN ALBUM */\n    const handleAddSongOfPlaylist = (id_cancion) => {\n\n        const data = {\n            id_playlist: idPlaylist\n        };\n\n        if (idPlaylist === '') {\n            alert(\"Debe de seleccionar una playlist\");\n        } else {\n            axios.post('/canciones-playlist/' + id_cancion, data)\n                .then(response => {\n                    alert(response.data.mensaje);\n                    setChanges(!changes)\n                })\n                .catch(error => {\n                    console.error('Error al enviar los datos:', error);\n                });\n        }\n    }\n\n    const handlePlay = (id_playlist) => {\n        axios.get('/canciones-playlist/' + id_playlist)\n            .then(response => {\n                const data = response.data.canciones_playlist\n                const ListCanciones = [];\n                for (let i = 0; i < data.length; i++) {\n                    ListCanciones.push(data[i].id_cancion)\n                }\n                playAListRef.current(ListCanciones);\n            })\n            .catch(error => {\n                console.error('Error al obtener los datos:', error);\n            });\n    }\n\n    return (\n\n        <>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleOpen(\"Registrar\", false)}><AddIcon />Añadir</Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        {titleModal}\n                    </Typography>\n                    <br />\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        <TextField\n                            label=\"Nombre\"\n                            variant=\"outlined\"\n                            fullWidth\n                            sx={{ my: 1 }}\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        <br />\n                        <br />\n                        <Button\n                            component=\"label\"\n                            variant=\"outlined\"\n                            startIcon={<CloudUploadIcon />}\n                            sx={{ marginRight: \"1rem\" }}\n                        >\n                            Fotografía\n                            <input type=\"file\" accept=\".png, .jpg, .jpeg\" hidden onChange={handleFileUpload} />\n                        </Button>\n                        <Box>{filename}</Box>\n                        <br />\n                        {isEditMode ? (\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleEdit}><UpdateIcon />Actualizar</Button>\n                        ) : (\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}><SaveIcon />Guardar</Button>\n                        )}\n                    </Typography>\n                </Box>\n            </Modal>\n\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell align=\"right\">Nombre</TableCell>\n                            <TableCell align=\"right\">Fotografía</TableCell>\n                            <TableCell align=\"right\">Acciones</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {artistData.map((row) => (\n                            <TableRow\n                                key={row.id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.id}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.nombre}</TableCell>\n                                <TableCell align=\"right\">\n                                    <img src={row.url_imagen} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} />\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton onClick={() => handlePlay(row.id)}>\n                                        <PlayArrowIcon />\n                                    </IconButton>\n                                    <IconButton color=\"primary\" onClick={() => handleOpen(\"Actualizar\", true, row.id, row.nombre)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                    <IconButton color=\"secondary\" onClick={() => handleDelete(row.id)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <br /><br />\n            <InputLabel id=\"demo-simple-select-label\">Playlists</InputLabel>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={idPlaylist}\n                label=\"Id\"\n                onChange={handleChangeAlbum}\n            >\n                {playlists.map(playlists => (\n                    <MenuItem key={playlists.id} value={playlists.id}>\n                        {playlists.id} - {playlists.nombre}\n                    </MenuItem>\n                ))}\n            </Select>\n            <br />\n\n            <div style={{ display: 'flex' }}>\n                <div style={{ marginRight: '20px' }}>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>ID</TableCell>\n                                    <TableCell align=\"right\">Nombre</TableCell>\n                                    <TableCell align=\"right\">Imagen</TableCell>\n                                    <TableCell align=\"right\">Duración</TableCell>\n                                    <TableCell align=\"right\">Artista</TableCell>\n                                    <TableCell align=\"right\">Acciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    tableSongAdded ? (\n                                        tableSongAdded.map((row) => (\n                                            <TableRow\n                                                key={row.id_cancion}\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                            >\n                                                <TableCell component=\"th\" scope=\"row\">{row.id_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_cancion}</TableCell>\n                                                <TableCell align=\"right\"><img src={row.url_imagen_cancion} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} /></TableCell>\n                                                <TableCell align=\"right\">{row.duracion_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_artista}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton color=\"secondary\" onClick={() => handleRemoveSongOfAlbum(row.id_cancion)}>\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={6} align=\"center\">\n                                                No hay registros disponibles.\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n                <div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>ID</TableCell>\n                                    <TableCell align=\"right\">Nombre</TableCell>\n                                    <TableCell align=\"right\">Descripción</TableCell>\n                                    <TableCell align=\"right\">Portada</TableCell>\n                                    <TableCell align=\"right\">Artista</TableCell>\n                                    <TableCell align=\"right\">Acciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    tableSongToAdd ? (\n                                        tableSongToAdd.map((row) => (\n                                            <TableRow\n                                                key={row.id_cancion}\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                            >\n                                                <TableCell component=\"th\" scope=\"row\">{row.id_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_cancion}</TableCell>\n                                                <TableCell align=\"right\"><img src={row.url_imagen_cancion} alt=\"Fotografía\" style={{ width: '50px', height: '50px' }} /></TableCell>\n                                                <TableCell align=\"right\">{row.duracion_cancion}</TableCell>\n                                                <TableCell align=\"right\">{row.nombre_artista}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton color=\"primary\" onClick={() => handleAddSongOfPlaylist(row.id_cancion)}>\n                                                        <BookmarkIcon />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={6} align=\"center\">\n                                                No hay registros disponibles.\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Playlist;","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n//import { Typography } from '@material-ui/core'\r\nimport Sidebar from \"./Sidebar\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport Body from \"./Body\";\r\nimport User from \"./User/User\";\r\nimport NavBarUsr from \"./User/Navbar\";\r\nimport Song from \"./Song/Song\";\r\nimport NavBarGen from \"./Song/Navbar\";\r\nimport Album from \"./Album/Album\";\r\nimport Artist from \"./Artist/Artist\";\r\nimport Playing from \"./Playing/Playing\"\r\nimport Historico from \"./Historico/Historico\"\r\nimport Favorites from \"./Favorites/Favorites\";\r\nimport CRUDSong from \"../Song/Song\"\r\nimport CRUDAlbum from \"../Album/Album\"\r\nimport CRUDArtist from \"../Artist/Artist\"\r\nimport CRUDPlayList from \"../Playlist/Playlist\"\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { useHistory } from 'react-router'\r\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\r\n\r\nconst Home = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const headerBackground = \"https://i.imgur.com/2nCt3Sbl.jpg\";\r\n  const [usuario, setUsuario] = useState({ nombres: '', apellidos: '', foto: '', correo: '', fecha_nacimiento: '', es_administrador: 0 })\r\n  const { push } = useHistory()\r\n  const [reproduccion, setReproduccion] = useState(-1);\r\n  const [listaCanciones, setListaCanciones] = useState([]);\r\n  const [listaReproduccion, setListaReproduccion] = useState([]);\r\n  const [ciclico, setCiclico] = useState(false);\r\n  const [random, setRandom] = useState(false);\r\n  const [playerState, setPlayerState] = useState(false);\r\n  const [changeSong, setChangeSong] = useState(false);\r\n  //const [LCanciones, setLCanciones] = useState(new ListaCanciones())\r\n\r\n  const changeCiclico = () => {\r\n    setCiclico(!ciclico);\r\n  };\r\n\r\n  const changeRandom = () => {\r\n    if (!random) {\r\n      setListaReproduccion(shuffle(listaReproduccion));\r\n    } else {\r\n      setListaReproduccion(listaCanciones);\r\n    }\r\n    setRandom(!random);\r\n  }\r\n\r\n  const shuffle = (array) => {\r\n    let currentIndex = array.length, randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex > 0) {\r\n\r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n  }\r\n\r\n  const addToPlayback = (id_cancion) => {\r\n    if (listaCanciones.includes(id_cancion)) {\r\n      alert(\"Esta cancion ya esta en la lista de reproduccion\")\r\n      return;\r\n    }\r\n    setListaCanciones([...listaCanciones, id_cancion]);\r\n    const nuevaListaReproduccion = [...listaReproduccion];\r\n    if (random) {\r\n      // Genera un índice aleatorio dentro de la longitud de la lista\r\n      const randomIndex = Math.floor(Math.random() * (nuevaListaReproduccion.length + 1));\r\n      // Inserta la nueva ID en la posición aleatoria generada\r\n      nuevaListaReproduccion.splice(randomIndex, 0, id_cancion);\r\n    } else {\r\n      // Si no es reproducción aleatoria, simplemente agrega la ID al final\r\n      nuevaListaReproduccion.push(id_cancion);\r\n    }\r\n    // Actualiza el estado de listaReproduccion\r\n    setListaReproduccion(nuevaListaReproduccion);\r\n    if (reproduccion === -1) {\r\n      setReproduccion(id_cancion);\r\n    }\r\n    alert(\"Cancion agregada con exito\")\r\n  }\r\n\r\n  const removeFromPlayback = (id_cancion) => {\r\n    if (listaCanciones.includes(id_cancion)) {\r\n      if (listaCanciones.length === 1) {\r\n        setPlayerState(false);\r\n        setReproduccion(-1);\r\n        setListaCanciones([]);\r\n        setListaReproduccion([]);\r\n        return;\r\n      } else {\r\n        if (reproduccion === id_cancion) {\r\n          Next()\r\n        }\r\n        setListaCanciones(listaCanciones.filter((cancion) => cancion !== id_cancion));\r\n        setListaReproduccion(listaReproduccion.filter((cancion) => cancion !== id_cancion));\r\n      }\r\n    }\r\n  }\r\n\r\n  const addListToPlayback = (ids) => {\r\n    setListaCanciones([...listaCanciones, ...(eliminarElementosRepetidos(listaCanciones, ids))]);\r\n    setListaReproduccion([...listaCanciones, ...shuffle(eliminarElementosRepetidos(listaCanciones, ids))]);\r\n    if (reproduccion === -1) {\r\n      setReproduccion(ids[0]);\r\n    }\r\n    alert(\"Cancion agregada con exito\")\r\n  }\r\n\r\n  function eliminarElementosRepetidos(array1, array2) {\r\n    // Filtra los elementos del segundo array que no están en el primero\r\n    const arrayFiltrado = array2.filter(elemento => !array1.includes(elemento));\r\n    return arrayFiltrado;\r\n  }\r\n\r\n  const Next = () => {\r\n    if (reproduccion === -1) {\r\n      return;\r\n    }\r\n    const index = listaReproduccion.indexOf(reproduccion);\r\n    if (index === listaReproduccion.length - 1) {\r\n      setReproduccion(listaReproduccion[0]);\r\n      setPlayerState(ciclico)\r\n    } else {\r\n      setReproduccion(listaReproduccion[index + 1]);\r\n      setPlayerState(true)\r\n    }\r\n  }\r\n\r\n  const play = (id_cancion) => {\r\n    setPlayerState(true);\r\n    setListaCanciones([id_cancion]);\r\n    setListaReproduccion([id_cancion]);\r\n    setReproduccion(id_cancion);\r\n  }\r\n\r\n  const playAList = (ids) => {\r\n    setListaCanciones(ids);\r\n    if (random) {\r\n      setListaReproduccion(shuffle([].concat(ids)));\r\n    } else {\r\n      setListaReproduccion(ids);\r\n    }\r\n    setPlayerState(true);\r\n    setReproduccion(ids[0]);\r\n  }\r\n\r\n  const playRadio = (ids) => {\r\n    setListaCanciones(ids);\r\n    setRandom(true);\r\n    setCiclico(true)\r\n    const listaRandom = shuffle([].concat(ids));\r\n    setListaReproduccion(listaRandom);\r\n    setPlayerState(true);\r\n    setReproduccion(listaRandom[0]);\r\n  }\r\n\r\n  const Prev = () => {\r\n    if (reproduccion === -1) {\r\n      return;\r\n    }\r\n    const index = listaReproduccion.indexOf(reproduccion);\r\n    if (index === 0) {\r\n      setReproduccion(listaReproduccion[listaReproduccion.length - 1]);\r\n      setPlayerState(ciclico)\r\n    } else {\r\n      setReproduccion(listaReproduccion[index - 1]);\r\n      setPlayerState(true)\r\n    }\r\n  }\r\n\r\n  const Salir = () => {\r\n    localStorage.setItem('SoundStream_UserID', -1);\r\n    push('/login')\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/usuario/' + localStorage.getItem('SoundStream_UserID'))\r\n      .then(({ data }) => {\r\n        if (data !== undefined && data !== null) {\r\n          setUsuario(data.usuario)\r\n        } else {\r\n          Salir()\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Container>\r\n        <div className=\"spotify__body\">\r\n          <Sidebar isAdmin={usuario.es_administrador} setSearch={setSearch} playRadio={playRadio} />\r\n          <Route path=\"/app\">\r\n            <div className=\"body\" >\r\n              <Navbar search={search} setSearch={setSearch} Salir={Salir} Name={usuario.nombres} />\r\n              <div className=\"body__contents\">\r\n                <Body headerBackground={headerBackground} search={search} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/user\">\r\n            <div className=\"body\" >\r\n              <NavBarUsr search={search} Salir={Salir} setSearch={setSearch} />\r\n              <div className=\"body__contents\">\r\n                <User headerBackground={headerBackground} User={usuario} setUsuario={setUsuario} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/song\">\r\n            <div className=\"body\" >\r\n              <NavBarGen search={search} Salir={Salir} Name={usuario.nombres} Type={\"Cancion:\"} />\r\n              <div className=\"body__contents\">\r\n                <Song headerBackground={headerBackground} addToPlayback={addToPlayback} play={play} setSearch={setSearch} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/album\">\r\n            <div className=\"body\" >\r\n              <NavBarGen search={search} Salir={Salir} Name={usuario.nombres} Type={\"Album:\"} />\r\n              <div className=\"body__contents\">\r\n                <Album headerBackground={headerBackground} setSearch={setSearch} playAList={playAList} addListToPlayback={addListToPlayback} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/artist\">\r\n            <div className=\"body\">\r\n              <NavBarGen search={search} Salir={Salir} Name={usuario.nombres} Type={\"Artista:\"} />\r\n              <div className=\"body__contents\">\r\n                <Artist headerBackground={headerBackground} setSearch={setSearch} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/playing\">\r\n            <div className=\"body\">\r\n              <NavBarGen search={search} Salir={Salir} Name={usuario.nombres} Type={\"Reproduciendo:\"} />\r\n              <div className=\"body__contents\">\r\n                <Playing headerBackground={headerBackground} reproduccion={reproduccion} listaCanciones={listaCanciones} removeFromPlayback={removeFromPlayback} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/CRUDCanciones\">\r\n            <div className=\"body\">\r\n              <div className=\"body__contents\">\r\n                <CRUDSong />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/CRUDAlbums\">\r\n            <div className=\"body\">\r\n              <div className=\"body__contents\">\r\n                <CRUDAlbum />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/CRUDArtistas\">\r\n            <div className=\"body\">\r\n              <div className=\"body__contents\">\r\n                <CRUDArtist />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/Historical\">\r\n            <div className=\"body\">\r\n              <div className=\"body__contents\">\r\n                <Historico headerBackground={headerBackground} reproduccion={reproduccion} changeSong={changeSong} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/Favorites\">\r\n            <div className=\"body\">\r\n              <div className=\"body__contents\">\r\n                <Favorites headerBackground={headerBackground} playAList={playAList} addListToPlayback={addListToPlayback} />\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/Playlist\">\r\n            <div className=\"body\">\r\n              <div className=\"body__contents\">\r\n                <CRUDPlayList playAList={playAList}/>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </div>\r\n        <div className=\"spotify__footer\">\r\n          <Footer playerState={playerState} setPlayerState={setPlayerState} changeCiclico={changeCiclico} changeRandom={changeRandom} ciclico={ciclico} random={random} reproduccion={reproduccion} Next={Next} Prev={Prev} listaReproduccion={listaReproduccion} changeSong={changeSong} setChangeSong={setChangeSong} />\r\n        </div>\r\n      </Container>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: grid;\r\n  grid-template-rows: 87vh 13vh;\r\n  .spotify__body {\r\n    display: grid;\r\n    grid-template-columns: 15vw 85vw;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: linear-gradient(\r\n      0deg,\r\n      rgba(34, 193, 195, 1) 0%,\r\n      rgba(45, 17, 112, 1) 100%\r\n    );\r\n    background-color: rgb(34, 193, 195);\r\n    .body {\r\n      height: 100%;\r\n      width: 100%;\r\n      overflow: auto;\r\n      &::-webkit-scrollbar {\r\n        width: 0.7rem;\r\n        max-height: 2rem;\r\n        &-thumb {\r\n          background-color: rgba(255, 255, 255, 0.6);\r\n        }\r\n      }\r\n    }\r\n  .spotify__footer{\r\n    height: 100%;\r\n    width: 100%;\r\n    display: grid;\r\n  }\r\n  /* ===== Scrollbar CSS ===== */\r\n  /* Firefox */\r\n  * {\r\n    scrollbar-width: auto;\r\n    scrollbar-color: #181818 #ffffff;\r\n  }\r\n\r\n  /* Chrome, Edge, and Safari */\r\n  *::-webkit-scrollbar {\r\n    width: 16px;\r\n  }\r\n\r\n  *::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  *::-webkit-scrollbar-thumb {\r\n    background-color: #181818;\r\n    border-radius: 13px;\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n"],"names":["Sidebar","_ref","isAdmin","setSearch","playRadio","push","useHistory","playAListRef","useRef","current","_jsx","Container","children","_jsxs","className","src","alt","width","onClick","MdHomeFilled","BsCollectionPlayFill","BiSolidPlaylist","AiFillHeart","BiSolidBookBookmark","axios","then","response","data","canciones","formattedCanciones","map","item","id_cancion","catch","error","console","BiSolidRadio","_Fragment","BsFillDiscFill","MdOutlineLibraryMusic","FiUsers","styled","div","_templateObject","_taggedTemplateLiteral","Navbar","nombre","navBackground","Salir","Name","FaSearch","type","placeholder","onChange","e","handleChange","target","value","Button","CgProfile","split","ImExit","_ref2","CurrentTrack","Cancion_Fotografia","Cancion_Nombre","Artista_Nombre","PlayerControls","playerState","changeState","changeCiclico","changeRandom","ciclico","random","Next","Prev","TbArrowsShuffle2","TbArrowsRight","CgPlayTrackPrev","BsFillPauseCircleFill","BsFillPlayCircleFill","CgPlayTrackNext","TbRepeat","TbRepeatOff","Volume","promps","onMouseUp","event","CambiarVolumen","min","max","defaultValue","TimeController","props","_useState","useState","currentTime","_useState2","_slicedToArray","sliderValue","setSliderValue","useEffect","handleSliderChange","newTime","parseFloat","CambiarTiempo","duration","Footer","setPlayerState","reproduccion","changeSong","setChangeSong","Audio","song","_useState3","_useState4","time","setTime","_useState5","_useState6","setDuration","_useState7","_useState8","changeTime","setChangeTime","_useState9","_useState10","reproduccionLocal","setReproduccionLocal","_useState11","Cancion_Archivo_MP3","Cancion_Duracion","Cancion_ID","id_album","Artista_ID","Album_ID","Album_Nombre","_useState12","cancion","setCancion","nextRef","playerStateRef","play","pause","clearAudioEventListeners","removeEventListener","handleCanPlayThrough","handleAudioEnded","handleTimeUpdate","undefined","AudioSrc","readyState","addEventListener","id_usuario","localStorage","getItem","MaxConteiner","Container2","volume","_templateObject2","_templateObject3","Body","headerBackground","search","setCanciones","artistas","setArtistas","albumes","setAlbumes","msToMinutesAndSeconds","ms","minutes","Math","floor","seconds","toFixed","shuffle","array","randomIndex","currentIndex","length","id","nombre_cancion","fotografia","url_imagen","formattedArtistas","formattedAlbumes","nombre_album","i","toLowerCase","includes","duracion","artista","album","class","setItem","id_artista","baseURL","process","User","setUsuario","nombres","apellidos","fecha_nacimiento","substring","correo","foto","contrasenia","nueva_contrasenia","formData","setFormData","handleInputChange","_event$target","name","_objectSpread","_defineProperty","TextField","fullWidth","autoFocus","color","margin","variant","label","InputLabelProps","shrink","accept","style","display","file","files","archivo","htmlFor","component","formDataToSend","FormData","key","append","alert","mensaje","_ref3","usuario","_ref4","NavbarUsr","MdKeyboardReturn","Song","addToPlayback","playRef","favorito","setFavorito","IrAUsuario","es_favorita","AiOutlineHeart","NavbarGen","Type","Album","playAList","addListToPlayback","addListToPlaybackRef","Album_Descripcion","Album_ImagenPortada","setAlbum","canciones_album","ListCanciones","index","concat","duracion_cancion","Artist","setArtista","albumes_artista","listaCanciones","removeFromPlayback","_toConsumableArray","historial","setHistorial","VerCancion","VerAlbum","VerArtista","_ref5","nombre_artista","cantidad","registro","fecha_registro","Favorites","change","setChange","canciones_favoritas","id_artista_album","position","top","left","transform","bgcolor","border","boxShadow","p","setId","setName","filePhoto","setFilePhoto","audioDuration","setAudioDuration","fileAudio","setFileAudio","titleModal","setTitleModal","_useState13","_useState14","isEditMode","setIsEditMode","_useState15","_useState16","changes","setChanges","_useState17","_useState18","filenamePhoto","setFilenamePhoto","_useState19","_useState20","filenameAudio","setFilenameAudio","_useState21","_useState22","idArtist","setIdArtist","audioRef","_React$useState","React","_React$useState2","open","setOpen","handleOpen","arguments","_useState23","_useState24","artists","setArtists","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","t0","stop","apply","fetchData","_useState25","_useState26","tableData","setTableData","_callee2","_context2","segundosAFormatoTiempo","segundos","horas","minutos","segundosRestantes","formatoHora","valor","handleClear","AddIcon","Modal","onClose","Box","sx","Typography","mt","my","startIcon","CloudUploadIcon","marginRight","hidden","InputLabel","Select","labelId","artist","MenuItem","audio","preload","URL","createObjectURL","onloadedmetadata","durationInSeconds","round","UpdateIcon","SaveIcon","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","row","scope","height","ref","controls","url_audio","IconButton","EditIcon","handleDelete","DeleteIcon","description","setDescription","idAlbum","setIdAlbum","descripcion","_callee3","_context3","_useState27","_useState28","tableSongAdded","setTableSongAdded","_useState29","_useState30","tableSongToAdd","setTableSongToAdd","canciones_artista","password","prompt","success","colSpan","url_imagen_cancion","handleAddSongOfAlbum","BookmarkIcon","birthdate","setBirthdate","setFile","filename","setFilename","classes","makeStyles","theme","container","flexWrap","textField","marginLeft","spacing","useStyles","artistData","setArtistData","fecha_formateada","idPlaylist","setIdPlaylist","playlists","setPlaylists","canciones_playlist","log","id_playlist","PlayArrowIcon","handleAddSongOfPlaylist","es_administrador","setReproduccion","setListaCanciones","listaReproduccion","setListaReproduccion","setCiclico","setRandom","ids","eliminarElementosRepetidos","array1","array2","filter","elemento","indexOf","Router","listaRandom","Route","path","NavBarUsr","NavBarGen","nuevaListaReproduccion","splice","Playing","CRUDSong","CRUDAlbum","CRUDArtist","Historico","CRUDPlayList"],"sourceRoot":""}