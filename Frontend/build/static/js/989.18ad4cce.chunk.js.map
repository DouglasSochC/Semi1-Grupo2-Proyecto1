{"version":3,"file":"static/js/989.18ad4cce.chunk.js","mappings":"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","sources":["components/views/Register/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, Container, Paper, Avatar, Typography, TextField, Button, CssBaseline } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport fondo from './fondo.jpg';\r\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router';\r\naxios.defaults.baseURL = process.env.REACT_APP_REQUEST_URL;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundImage: `url(${fondo})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundAttachment: 'fixed',\r\n        overflow: 'scroll',\r\n        height: '100vh'\r\n    },\r\n    container: {\r\n        height: '800px',\r\n        marginTop: theme.spacing(10),\r\n        [theme.breakpoints.down(400 + theme.spacing(2) + 2)]: {\r\n            marginTop: 0,\r\n            width: '100%',\r\n            height: '100%'\r\n        },\r\n        marginBottom: '20px'\r\n    },\r\n    div: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    button: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nconst Register = () => {\r\n    const [formData, setFormData] = useState({\r\n        nombres: '',\r\n        apellidos: '',\r\n        fecha_nacimiento: '',\r\n        correo: '',\r\n        contrasenia: '',\r\n        confirmacion_contrasenia: ''\r\n    });\r\n\r\n    const { push } = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setFormData({\r\n            ...formData,\r\n            archivo: file\r\n        });\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        if (formData.contrasenia !== formData.confirmacion_contrasenia) {\r\n            alert('Las contraseÃ±as no coinciden');\r\n            return;\r\n        }\r\n\r\n        const formDataToSend = new FormData();\r\n        for (const key in formData) {\r\n            formDataToSend.append(key, formData[key]);\r\n        }\r\n\r\n        axios\r\n            .post('/usuarios/register', formDataToSend)\r\n            .then(({ data }) => {\r\n                alert('Usuario registrado');\r\n                push('/login');\r\n            })\r\n            .catch(({ response }) => {\r\n                alert(response.data);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Grid container component='main' className={classes.root}>\r\n            <CssBaseline />\r\n            <Container component={Paper} elevation={5} maxWidth='xs' className={classes.container}>\r\n                <div className={classes.div}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component='h1' variant='h5'>\r\n                        Sign Up\r\n                    </Typography>\r\n                    <form className={classes.form}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            color='primary'\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            label='Nombres'\r\n                            name='nombres'\r\n                            value={formData.nombres}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            color='primary'\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            label='Apellidos'\r\n                            name='apellidos'\r\n                            value={formData.apellidos}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <TextField\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            type='date'\r\n                            color='primary'\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            label='Fecha de nacimiento'\r\n                            name='fecha_nacimiento'\r\n                            value={formData.fecha_nacimiento}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            type='email'\r\n                            color='primary'\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            label='Correo'\r\n                            name='correo'\r\n                            value={formData.correo}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <input\r\n                            type='file'\r\n                            accept='image/*'\r\n                            style={{ display: 'none' }}\r\n                            onChange={handleFileChange}\r\n                            id='foto-input'\r\n                            name='archivo'\r\n                        />\r\n                        <label htmlFor='foto-input'>\r\n                            <Button\r\n                                fullWidth\r\n                                variant='outlined'\r\n                                color='primary'\r\n                                component='span'\r\n                                className={classes.button}\r\n                            >\r\n                                Subir Foto\r\n                            </Button>\r\n                        </label>\r\n                        <TextField\r\n                            fullWidth\r\n                            type='password'\r\n                            color='primary'\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            label='ContraseÃ±a'\r\n                            name='contrasenia'\r\n                            value={formData.contrasenia}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            type='password'\r\n                            color='primary'\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                            label='ConfirmaciÃ³n ContraseÃ±a'\r\n                            name='confirmacion_contrasenia'\r\n                            value={formData.confirmacion_contrasenia}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            className={classes.button}\r\n                            onClick={onSubmit}\r\n                        >\r\n                            Registrarse\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["axios","baseURL","process","useStyles","makeStyles","theme","_container","root","backgroundImage","concat","fondo","backgroundRepeat","backgroundSize","backgroundPosition","backgroundAttachment","overflow","height","container","marginTop","spacing","_defineProperty","breakpoints","down","width","div","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","main","form","button","_useState","useState","nombres","apellidos","fecha_nacimiento","correo","contrasenia","confirmacion_contrasenia","_useState2","_slicedToArray","formData","setFormData","push","useHistory","classes","handleInputChange","event","_event$target","target","name","value","_objectSpread","_jsxs","Grid","component","className","children","_jsx","CssBaseline","Container","Paper","elevation","maxWidth","Avatar","LockOutlinedIcon","Typography","variant","TextField","fullWidth","autoFocus","color","label","onChange","InputLabelProps","shrink","type","accept","style","file","files","archivo","id","htmlFor","Button","onClick","formDataToSend","FormData","key","append","then","_ref","data","alert","catch","_ref2","response"],"sourceRoot":""}